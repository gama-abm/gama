/*
 * generated by Xtext
 */
grammar InternalGaml;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package msi.gama.lang.gaml.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package msi.gama.lang.gaml.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import msi.gama.lang.gaml.services.GamlGrammarAccess;

}

@parser::members {

 	private GamlGrammarAccess grammarAccess;

    public InternalGamlParser(TokenStream input, GamlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Entry";
   	}

   	@Override
   	protected GamlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleEntry
entryRuleEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntryRule()); }
	iv_ruleEntry=ruleEntry
	{ $current=$iv_ruleEntry.current; }
	EOF;

// Rule Entry
ruleEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			('@' | 'model')=>
			{
				newCompositeNode(grammarAccess.getEntryAccess().getStandaloneModelParserRuleCall_0());
			}
			this_StandaloneModel_0=ruleStandaloneModel
			{
				$current = $this_StandaloneModel_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getEntryAccess().getStandaloneExpressionParserRuleCall_1());
		}
		this_StandaloneExpression_1=ruleStandaloneExpression
		{
			$current = $this_StandaloneExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntryAccess().getStandaloneBlockParserRuleCall_2());
		}
		this_StandaloneBlock_2=ruleStandaloneBlock
		{
			$current = $this_StandaloneBlock_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntryAccess().getStandaloneExperimentParserRuleCall_3());
		}
		this_StandaloneExperiment_3=ruleStandaloneExperiment
		{
			$current = $this_StandaloneExperiment_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStandaloneBlock
entryRuleStandaloneBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStandaloneBlockRule()); }
	iv_ruleStandaloneBlock=ruleStandaloneBlock
	{ $current=$iv_ruleStandaloneBlock.current; }
	EOF;

// Rule StandaloneBlock
ruleStandaloneBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='__synthetic__'
		{
			newLeafNode(otherlv_0, grammarAccess.getStandaloneBlockAccess().get__synthetic__Keyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStandaloneBlockAccess().getBlockBlockParserRuleCall_1_0());
				}
				lv_block_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandaloneBlockRule());
					}
					set(
						$current,
						"block",
						lv_block_1_0,
						"msi.gama.lang.gaml.Gaml.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStandaloneExpression
entryRuleStandaloneExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStandaloneExpressionRule()); }
	iv_ruleStandaloneExpression=ruleStandaloneExpression
	{ $current=$iv_ruleStandaloneExpression.current; }
	EOF;

// Rule StandaloneExpression
ruleStandaloneExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getStandaloneExpressionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStandaloneExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"msi.gama.lang.gaml.Gaml.ID");
				}
			)
		)
		otherlv_1='<-'
		{
			newLeafNode(otherlv_1, grammarAccess.getStandaloneExpressionAccess().getLessThanSignHyphenMinusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStandaloneExpressionAccess().getExprExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandaloneExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStandaloneExperiment
entryRuleStandaloneExperiment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStandaloneExperimentRule()); }
	iv_ruleStandaloneExperiment=ruleStandaloneExperiment
	{ $current=$iv_ruleStandaloneExperiment.current; }
	EOF;

// Rule StandaloneExperiment
ruleStandaloneExperiment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStandaloneExperimentAccess().getKeyK_ExperimentParserRuleCall_0_0());
				}
				lv_key_0_0=ruleK_Experiment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandaloneExperimentRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.K_Experiment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStandaloneExperimentAccess().getNameValid_IDParserRuleCall_1_0_0());
					}
					lv_name_1_1=ruleValid_ID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStandaloneExperimentRule());
						}
						set(
							$current,
							"name",
							lv_name_1_1,
							"msi.gama.lang.gaml.Gaml.Valid_ID");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_name_1_2=RULE_STRING
					{
						newLeafNode(lv_name_1_2, grammarAccess.getStandaloneExperimentAccess().getNameSTRINGTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStandaloneExperimentRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_2,
							"msi.gama.lang.gaml.Gaml.STRING");
					}
				)
			)
		)
		(
			otherlv_2='model:'
			{
				newLeafNode(otherlv_2, grammarAccess.getStandaloneExperimentAccess().getModelKeyword_2_0());
			}
			(
				(
					lv_importURI_3_0=RULE_STRING
					{
						newLeafNode(lv_importURI_3_0, grammarAccess.getStandaloneExperimentAccess().getImportURISTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStandaloneExperimentRule());
						}
						setWithLastConsumed(
							$current,
							"importURI",
							lv_importURI_3_0,
							"msi.gama.lang.gaml.Gaml.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStandaloneExperimentAccess().getFacetsFacetParserRuleCall_3_0());
				}
				lv_facets_4_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandaloneExperimentRule());
					}
					add(
						$current,
						"facets",
						lv_facets_4_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStandaloneExperimentAccess().getBlockBlockParserRuleCall_4_0_0());
					}
					lv_block_5_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStandaloneExperimentRule());
						}
						set(
							$current,
							"block",
							lv_block_5_0,
							"msi.gama.lang.gaml.Gaml.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getStandaloneExperimentAccess().getSemicolonKeyword_4_1());
			}
		)
	)
;

// Entry rule entryRuleStandaloneModel
entryRuleStandaloneModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStandaloneModelRule()); }
	iv_ruleStandaloneModel=ruleStandaloneModel
	{ $current=$iv_ruleStandaloneModel.current; }
	EOF;

// Rule StandaloneModel
ruleStandaloneModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStandaloneModelAccess().getPragmasPragmaParserRuleCall_0_0());
				}
				lv_pragmas_0_0=rulePragma
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandaloneModelRule());
					}
					add(
						$current,
						"pragmas",
						lv_pragmas_0_0,
						"msi.gama.lang.gaml.Gaml.Pragma");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='model'
		{
			newLeafNode(otherlv_1, grammarAccess.getStandaloneModelAccess().getModelKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getStandaloneModelAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStandaloneModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"msi.gama.lang.gaml.Gaml.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStandaloneModelAccess().getImportsImportParserRuleCall_3_0());
				}
				lv_imports_3_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandaloneModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_3_0,
						"msi.gama.lang.gaml.Gaml.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getStandaloneModelAccess().getBlockB_ModelParserRuleCall_4_0());
				}
				lv_block_4_0=ruleB_Model
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandaloneModelRule());
					}
					set(
						$current,
						"block",
						lv_block_4_0,
						"msi.gama.lang.gaml.Gaml.B_Model");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				lv_importURI_1_0=RULE_STRING
				{
					newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_1_0,
						"msi.gama.lang.gaml.Gaml.STRING");
				}
			)
		)
		(
			otherlv_2='as'
			{
				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getAsKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImportAccess().getNameValid_IDParserRuleCall_2_1_0());
					}
					lv_name_3_0=ruleValid_ID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportRule());
						}
						set(
							$current,
							"name",
							lv_name_3_0,
							"msi.gama.lang.gaml.Gaml.Valid_ID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePragma
entryRulePragma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPragmaRule()); }
	iv_rulePragma=rulePragma
	{ $current=$iv_rulePragma.current; }
	EOF;

// Rule Pragma
rulePragma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getPragmaAccess().getCommercialAtKeyword_0());
		}
		(
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getPragmaAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPragmaRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"msi.gama.lang.gaml.Gaml.ID");
					}
				)
			)
			(
				otherlv_2='['
				{
					newLeafNode(otherlv_2, grammarAccess.getPragmaAccess().getLeftSquareBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPragmaAccess().getPluginsExpressionListParserRuleCall_1_1_1_0());
						}
						lv_plugins_3_0=ruleExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPragmaRule());
							}
							set(
								$current,
								"plugins",
								lv_plugins_3_0,
								"msi.gama.lang.gaml.Gaml.ExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_4=']'
				{
					newLeafNode(otherlv_4, grammarAccess.getPragmaAccess().getRightSquareBracketKeyword_1_1_2());
				}
			)?
		)
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockAccess().getBlockAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0_0());
					}
					lv_statements_2_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockRule());
						}
						add(
							$current,
							"statements",
							lv_statements_2_0,
							"msi.gama.lang.gaml.Gaml.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_3='}'
			{
				newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleB_Model
entryRuleB_Model returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getB_ModelRule()); }
	iv_ruleB_Model=ruleB_Model
	{ $current=$iv_ruleB_Model.current; }
	EOF;

// Rule B_Model
ruleB_Model returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getB_ModelAccess().getBlockAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getB_ModelAccess().getStatementsS_SectionParserRuleCall_1_0());
				}
				lv_statements_1_0=ruleS_Section
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getB_ModelRule());
					}
					add(
						$current,
						"statements",
						lv_statements_1_0,
						"msi.gama.lang.gaml.Gaml.S_Section");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleB_Switch
entryRuleB_Switch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getB_SwitchRule()); }
	iv_ruleB_Switch=ruleB_Switch
	{ $current=$iv_ruleB_Switch.current; }
	EOF;

// Rule B_Switch
ruleB_Switch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getB_SwitchAccess().getBlockAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getB_SwitchAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getB_SwitchAccess().getStatementsS_DefaultParserRuleCall_2_0_0());
					}
					lv_statements_2_1=ruleS_Default
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getB_SwitchRule());
						}
						add(
							$current,
							"statements",
							lv_statements_2_1,
							"msi.gama.lang.gaml.Gaml.S_Default");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getB_SwitchAccess().getStatementsS_MatchParserRuleCall_2_0_1());
					}
					lv_statements_2_2=ruleS_Match
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getB_SwitchRule());
						}
						add(
							$current,
							"statements",
							lv_statements_2_2,
							"msi.gama.lang.gaml.Gaml.S_Match");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getB_SwitchAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleB_Display
entryRuleB_Display returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getB_DisplayRule()); }
	iv_ruleB_Display=ruleB_Display
	{ $current=$iv_ruleB_Display.current; }
	EOF;

// Rule B_Display
ruleB_Display returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getB_DisplayAccess().getBlockAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getB_DisplayAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getB_DisplayAccess().getStatementsS_DisplayLayerParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleS_DisplayLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getB_DisplayRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"msi.gama.lang.gaml.Gaml.S_DisplayLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getB_DisplayAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(ruleS_Declaration)=>
				{
					newCompositeNode(grammarAccess.getStatementAccess().getS_DeclarationParserRuleCall_0_0());
				}
				this_S_Declaration_0=ruleS_Declaration
				{
					$current = $this_S_Declaration_0.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				(
					(ruleS_Assignment)=>
					{
						newCompositeNode(grammarAccess.getStatementAccess().getS_AssignmentParserRuleCall_0_1_0());
					}
					this_S_Assignment_1=ruleS_Assignment
					{
						$current = $this_S_Assignment_1.current;
						afterParserOrEnumRuleCall();
					}
				)
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getS_SwitchParserRuleCall_0_1_1());
				}
				this_S_Switch_2=ruleS_Switch
				{
					$current = $this_S_Switch_2.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getS_BreakParserRuleCall_0_1_2());
				}
				this_S_Break_3=ruleS_Break
				{
					$current = $this_S_Break_3.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getS_DoParserRuleCall_0_1_3());
				}
				this_S_Do_4=ruleS_Do
				{
					$current = $this_S_Do_4.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getS_ReturnParserRuleCall_0_1_4());
				}
				this_S_Return_5=ruleS_Return
				{
					$current = $this_S_Return_5.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getS_SolveParserRuleCall_0_1_5());
				}
				this_S_Solve_6=ruleS_Solve
				{
					$current = $this_S_Solve_6.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getS_IfParserRuleCall_0_1_6());
				}
				this_S_If_7=ruleS_If
				{
					$current = $this_S_If_7.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getS_TryParserRuleCall_0_1_7());
				}
				this_S_Try_8=ruleS_Try
				{
					$current = $this_S_Try_8.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getS_1Expr_Facets_BlockOrEndParserRuleCall_0_1_8());
				}
				this_S_1Expr_Facets_BlockOrEnd_9=ruleS_1Expr_Facets_BlockOrEnd
				{
					$current = $this_S_1Expr_Facets_BlockOrEnd_9.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getS_EquationsParserRuleCall_0_1_9());
				}
				this_S_Equations_10=ruleS_Equations
				{
					$current = $this_S_Equations_10.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getS_DisplayParserRuleCall_1());
		}
		this_S_Display_11=ruleS_Display
		{
			$current = $this_S_Display_11.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleS_1Expr_Facets_BlockOrEnd
entryRuleS_1Expr_Facets_BlockOrEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_1Expr_Facets_BlockOrEndRule()); }
	iv_ruleS_1Expr_Facets_BlockOrEnd=ruleS_1Expr_Facets_BlockOrEnd
	{ $current=$iv_ruleS_1Expr_Facets_BlockOrEnd.current; }
	EOF;

// Rule S_1Expr_Facets_BlockOrEnd
ruleS_1Expr_Facets_BlockOrEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getKeyK_1Expr_Facets_BlockOrEndParserRuleCall_0_0());
				}
				lv_key_0_0=ruleK_1Expr_Facets_BlockOrEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_1Expr_Facets_BlockOrEndRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.K_1Expr_Facets_BlockOrEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getExprExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_1Expr_Facets_BlockOrEndRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getFacetsFacetParserRuleCall_2_0());
				}
				lv_facets_2_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_1Expr_Facets_BlockOrEndRule());
					}
					add(
						$current,
						"facets",
						lv_facets_2_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getBlockBlockParserRuleCall_3_0_0());
					}
					lv_block_3_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_1Expr_Facets_BlockOrEndRule());
						}
						set(
							$current,
							"block",
							lv_block_3_0,
							"msi.gama.lang.gaml.Gaml.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getSemicolonKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleS_Section
entryRuleS_Section returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_SectionRule()); }
	iv_ruleS_Section=ruleS_Section
	{ $current=$iv_ruleS_Section.current; }
	EOF;

// Rule S_Section
ruleS_Section returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getS_SectionAccess().getS_GlobalParserRuleCall_0());
		}
		this_S_Global_0=ruleS_Global
		{
			$current = $this_S_Global_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getS_SectionAccess().getS_SpeciesParserRuleCall_1());
		}
		this_S_Species_1=ruleS_Species
		{
			$current = $this_S_Species_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getS_SectionAccess().getS_ExperimentParserRuleCall_2());
		}
		this_S_Experiment_2=ruleS_Experiment
		{
			$current = $this_S_Experiment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleS_Global
entryRuleS_Global returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_GlobalRule()); }
	iv_ruleS_Global=ruleS_Global
	{ $current=$iv_ruleS_Global.current; }
	EOF;

// Rule S_Global
ruleS_Global returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='global'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getS_GlobalAccess().getKeyGlobalKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_GlobalRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "global");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_GlobalAccess().getFacetsFacetParserRuleCall_1_0());
				}
				lv_facets_1_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_GlobalRule());
					}
					add(
						$current,
						"facets",
						lv_facets_1_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_GlobalAccess().getBlockBlockParserRuleCall_2_0_0());
					}
					lv_block_2_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_GlobalRule());
						}
						set(
							$current,
							"block",
							lv_block_2_0,
							"msi.gama.lang.gaml.Gaml.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getS_GlobalAccess().getSemicolonKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleS_Species
entryRuleS_Species returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_SpeciesRule()); }
	iv_ruleS_Species=ruleS_Species
	{ $current=$iv_ruleS_Species.current; }
	EOF;

// Rule S_Species
ruleS_Species returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SpeciesAccess().getKeyK_SpeciesParserRuleCall_0_0());
				}
				lv_key_0_0=ruleK_Species
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SpeciesRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.K_Species");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getS_SpeciesAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_SpeciesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"msi.gama.lang.gaml.Gaml.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SpeciesAccess().getFacetsFacetParserRuleCall_2_0());
				}
				lv_facets_2_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SpeciesRule());
					}
					add(
						$current,
						"facets",
						lv_facets_2_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_SpeciesAccess().getBlockBlockParserRuleCall_3_0_0());
					}
					lv_block_3_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_SpeciesRule());
						}
						set(
							$current,
							"block",
							lv_block_3_0,
							"msi.gama.lang.gaml.Gaml.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getS_SpeciesAccess().getSemicolonKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleS_Experiment
entryRuleS_Experiment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_ExperimentRule()); }
	iv_ruleS_Experiment=ruleS_Experiment
	{ $current=$iv_ruleS_Experiment.current; }
	EOF;

// Rule S_Experiment
ruleS_Experiment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getS_ExperimentAccess().getKeyK_ExperimentParserRuleCall_0_0());
				}
				lv_key_0_0=ruleK_Experiment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_ExperimentRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.K_Experiment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_ExperimentAccess().getNameValid_IDParserRuleCall_1_0_0());
					}
					lv_name_1_1=ruleValid_ID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_ExperimentRule());
						}
						set(
							$current,
							"name",
							lv_name_1_1,
							"msi.gama.lang.gaml.Gaml.Valid_ID");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_name_1_2=RULE_STRING
					{
						newLeafNode(lv_name_1_2, grammarAccess.getS_ExperimentAccess().getNameSTRINGTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getS_ExperimentRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_2,
							"msi.gama.lang.gaml.Gaml.STRING");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_ExperimentAccess().getFacetsFacetParserRuleCall_2_0());
				}
				lv_facets_2_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_ExperimentRule());
					}
					add(
						$current,
						"facets",
						lv_facets_2_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_ExperimentAccess().getBlockBlockParserRuleCall_3_0_0());
					}
					lv_block_3_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_ExperimentRule());
						}
						set(
							$current,
							"block",
							lv_block_3_0,
							"msi.gama.lang.gaml.Gaml.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getS_ExperimentAccess().getSemicolonKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleS_Do
entryRuleS_Do returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_DoRule()); }
	iv_ruleS_Do=ruleS_Do
	{ $current=$iv_ruleS_Do.current; }
	EOF;

// Rule S_Do
ruleS_Do returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getS_DoAccess().getKeyK_DoParserRuleCall_0_0());
				}
				lv_key_0_0=ruleK_Do
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_DoRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.K_Do");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_DoAccess().getExprAbstractRefParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleAbstractRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_DoRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"msi.gama.lang.gaml.Gaml.AbstractRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_DoAccess().getFacetsFacetParserRuleCall_2_0());
				}
				lv_facets_2_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_DoRule());
					}
					add(
						$current,
						"facets",
						lv_facets_2_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_DoAccess().getBlockBlockParserRuleCall_3_0_0());
					}
					lv_block_3_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_DoRule());
						}
						set(
							$current,
							"block",
							lv_block_3_0,
							"msi.gama.lang.gaml.Gaml.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getS_DoAccess().getSemicolonKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleS_Loop
entryRuleS_Loop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_LoopRule()); }
	iv_ruleS_Loop=ruleS_Loop
	{ $current=$iv_ruleS_Loop.current; }
	EOF;

// Rule S_Loop
ruleS_Loop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='loop'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getS_LoopAccess().getKeyLoopKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_LoopRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "loop");
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getS_LoopAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_LoopRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"msi.gama.lang.gaml.Gaml.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_LoopAccess().getFacetsFacetParserRuleCall_2_0());
				}
				lv_facets_2_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_LoopRule());
					}
					add(
						$current,
						"facets",
						lv_facets_2_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getS_LoopAccess().getBlockBlockParserRuleCall_3_0());
				}
				lv_block_3_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_LoopRule());
					}
					set(
						$current,
						"block",
						lv_block_3_0,
						"msi.gama.lang.gaml.Gaml.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleS_If
entryRuleS_If returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_IfRule()); }
	iv_ruleS_If=ruleS_If
	{ $current=$iv_ruleS_If.current; }
	EOF;

// Rule S_If
ruleS_If returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='if'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getS_IfAccess().getKeyIfKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_IfRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "if");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_IfAccess().getExprExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_IfRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_IfAccess().getBlockBlockParserRuleCall_2_0());
				}
				lv_block_2_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_IfRule());
					}
					set(
						$current,
						"block",
						lv_block_2_0,
						"msi.gama.lang.gaml.Gaml.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('else')=>
				otherlv_3='else'
				{
					newLeafNode(otherlv_3, grammarAccess.getS_IfAccess().getElseKeyword_3_0());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getS_IfAccess().getElseS_IfParserRuleCall_3_1_0_0());
						}
						lv_else_4_1=ruleS_If
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getS_IfRule());
							}
							set(
								$current,
								"else",
								lv_else_4_1,
								"msi.gama.lang.gaml.Gaml.S_If");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getS_IfAccess().getElseBlockParserRuleCall_3_1_0_1());
						}
						lv_else_4_2=ruleBlock
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getS_IfRule());
							}
							set(
								$current,
								"else",
								lv_else_4_2,
								"msi.gama.lang.gaml.Gaml.Block");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleS_Try
entryRuleS_Try returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_TryRule()); }
	iv_ruleS_Try=ruleS_Try
	{ $current=$iv_ruleS_Try.current; }
	EOF;

// Rule S_Try
ruleS_Try returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='try'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getS_TryAccess().getKeyTryKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_TryRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "try");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_TryAccess().getBlockBlockParserRuleCall_1_0());
				}
				lv_block_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_TryRule());
					}
					set(
						$current,
						"block",
						lv_block_1_0,
						"msi.gama.lang.gaml.Gaml.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('catch')=>
				otherlv_2='catch'
				{
					newLeafNode(otherlv_2, grammarAccess.getS_TryAccess().getCatchKeyword_2_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getS_TryAccess().getCatchBlockParserRuleCall_2_1_0());
					}
					lv_catch_3_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_TryRule());
						}
						set(
							$current,
							"catch",
							lv_catch_3_0,
							"msi.gama.lang.gaml.Gaml.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleS_Switch
entryRuleS_Switch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_SwitchRule()); }
	iv_ruleS_Switch=ruleS_Switch
	{ $current=$iv_ruleS_Switch.current; }
	EOF;

// Rule S_Switch
ruleS_Switch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='switch'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getS_SwitchAccess().getKeySwitchKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_SwitchRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "switch");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SwitchAccess().getExprExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SwitchRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SwitchAccess().getBlockB_SwitchParserRuleCall_2_0());
				}
				lv_block_2_0=ruleB_Switch
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SwitchRule());
					}
					set(
						$current,
						"block",
						lv_block_2_0,
						"msi.gama.lang.gaml.Gaml.B_Switch");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleS_Match
entryRuleS_Match returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_MatchRule()); }
	iv_ruleS_Match=ruleS_Match
	{ $current=$iv_ruleS_Match.current; }
	EOF;

// Rule S_Match
ruleS_Match returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_key_0_1='match'
					{
						newLeafNode(lv_key_0_1, grammarAccess.getS_MatchAccess().getKeyMatchKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getS_MatchRule());
						}
						setWithLastConsumed($current, "key", lv_key_0_1, null);
					}
					    |
					lv_key_0_2='match_one'
					{
						newLeafNode(lv_key_0_2, grammarAccess.getS_MatchAccess().getKeyMatch_oneKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getS_MatchRule());
						}
						setWithLastConsumed($current, "key", lv_key_0_2, null);
					}
					    |
					lv_key_0_3='match_between'
					{
						newLeafNode(lv_key_0_3, grammarAccess.getS_MatchAccess().getKeyMatch_betweenKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getS_MatchRule());
						}
						setWithLastConsumed($current, "key", lv_key_0_3, null);
					}
					    |
					lv_key_0_4='match_regex'
					{
						newLeafNode(lv_key_0_4, grammarAccess.getS_MatchAccess().getKeyMatch_regexKeyword_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getS_MatchRule());
						}
						setWithLastConsumed($current, "key", lv_key_0_4, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_MatchAccess().getExprExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_MatchRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_MatchAccess().getBlockBlockParserRuleCall_2_0());
				}
				lv_block_2_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_MatchRule());
					}
					set(
						$current,
						"block",
						lv_block_2_0,
						"msi.gama.lang.gaml.Gaml.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleS_Default
entryRuleS_Default returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_DefaultRule()); }
	iv_ruleS_Default=ruleS_Default
	{ $current=$iv_ruleS_Default.current; }
	EOF;

// Rule S_Default
ruleS_Default returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getS_DefaultAccess().getKeyK_DefaultParserRuleCall_0_0());
				}
				lv_key_0_0=ruleK_Default
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_DefaultRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.K_Default");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_DefaultAccess().getBlockBlockParserRuleCall_1_0());
				}
				lv_block_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_DefaultRule());
					}
					set(
						$current,
						"block",
						lv_block_1_0,
						"msi.gama.lang.gaml.Gaml.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleS_Return
entryRuleS_Return returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_ReturnRule()); }
	iv_ruleS_Return=ruleS_Return
	{ $current=$iv_ruleS_Return.current; }
	EOF;

// Rule S_Return
ruleS_Return returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='return'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getS_ReturnAccess().getKeyReturnKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_ReturnRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "return");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_ReturnAccess().getExprExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_ReturnRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getS_ReturnAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleS_Break
entryRuleS_Break returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_BreakRule()); }
	iv_ruleS_Break=ruleS_Break
	{ $current=$iv_ruleS_Break.current; }
	EOF;

// Rule S_Break
ruleS_Break returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='break'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getS_BreakAccess().getKeyBreakKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_BreakRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "break");
				}
			)
		)
		otherlv_1=';'
		{
			newLeafNode(otherlv_1, grammarAccess.getS_BreakAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleS_Declaration
entryRuleS_Declaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_DeclarationRule()); }
	iv_ruleS_Declaration=ruleS_Declaration
	{ $current=$iv_ruleS_Declaration.current; }
	EOF;

// Rule S_Declaration
ruleS_Declaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			('species' | 'image' | RULE_ID)=>
			{
				newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_DefinitionParserRuleCall_0());
			}
			this_S_Definition_0=ruleS_Definition
			{
				$current = $this_S_Definition_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_SpeciesParserRuleCall_1());
		}
		this_S_Species_1=ruleS_Species
		{
			$current = $this_S_Species_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_ReflexParserRuleCall_2());
		}
		this_S_Reflex_2=ruleS_Reflex
		{
			$current = $this_S_Reflex_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_ActionParserRuleCall_3());
		}
		this_S_Action_3=ruleS_Action
		{
			$current = $this_S_Action_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_VarParserRuleCall_4());
		}
		this_S_Var_4=ruleS_Var
		{
			$current = $this_S_Var_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_LoopParserRuleCall_5());
		}
		this_S_Loop_5=ruleS_Loop
		{
			$current = $this_S_Loop_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleS_Reflex
entryRuleS_Reflex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_ReflexRule()); }
	iv_ruleS_Reflex=ruleS_Reflex
	{ $current=$iv_ruleS_Reflex.current; }
	EOF;

// Rule S_Reflex
ruleS_Reflex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getS_ReflexAccess().getKeyK_ReflexParserRuleCall_0_0());
				}
				lv_key_0_0=ruleK_Reflex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_ReflexRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.K_Reflex");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_ReflexAccess().getNameValid_IDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValid_ID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_ReflexRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"msi.gama.lang.gaml.Gaml.Valid_ID");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2='when'
			{
				newLeafNode(otherlv_2, grammarAccess.getS_ReflexAccess().getWhenKeyword_2_0());
			}
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getS_ReflexAccess().getColonKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getS_ReflexAccess().getExprExpressionParserRuleCall_2_2_0());
					}
					lv_expr_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_ReflexRule());
						}
						set(
							$current,
							"expr",
							lv_expr_4_0,
							"msi.gama.lang.gaml.Gaml.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getS_ReflexAccess().getBlockBlockParserRuleCall_3_0());
				}
				lv_block_5_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_ReflexRule());
					}
					set(
						$current,
						"block",
						lv_block_5_0,
						"msi.gama.lang.gaml.Gaml.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleS_Definition
entryRuleS_Definition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_DefinitionRule()); }
	iv_ruleS_Definition=ruleS_Definition
	{ $current=$iv_ruleS_Definition.current; }
	EOF;

// Rule S_Definition
ruleS_Definition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getS_DefinitionAccess().getTkeyTypeRefParserRuleCall_0_0());
				}
				lv_tkey_0_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_DefinitionRule());
					}
					set(
						$current,
						"tkey",
						lv_tkey_0_0,
						"msi.gama.lang.gaml.Gaml.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_DefinitionAccess().getNameValid_IDParserRuleCall_1_0_0());
					}
					lv_name_1_1=ruleValid_ID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_DefinitionRule());
						}
						set(
							$current,
							"name",
							lv_name_1_1,
							"msi.gama.lang.gaml.Gaml.Valid_ID");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_name_1_2=RULE_STRING
					{
						newLeafNode(lv_name_1_2, grammarAccess.getS_DefinitionAccess().getNameSTRINGTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getS_DefinitionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_2,
							"msi.gama.lang.gaml.Gaml.STRING");
					}
				)
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getS_DefinitionAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getS_DefinitionAccess().getArgsActionArgumentsParserRuleCall_2_1_0());
					}
					lv_args_3_0=ruleActionArguments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_DefinitionRule());
						}
						set(
							$current,
							"args",
							lv_args_3_0,
							"msi.gama.lang.gaml.Gaml.ActionArguments");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getS_DefinitionAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getS_DefinitionAccess().getFacetsFacetParserRuleCall_3_0());
				}
				lv_facets_5_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_DefinitionRule());
					}
					add(
						$current,
						"facets",
						lv_facets_5_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_DefinitionAccess().getBlockBlockParserRuleCall_4_0_0());
					}
					lv_block_6_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_DefinitionRule());
						}
						set(
							$current,
							"block",
							lv_block_6_0,
							"msi.gama.lang.gaml.Gaml.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getS_DefinitionAccess().getSemicolonKeyword_4_1());
			}
		)
	)
;

// Entry rule entryRuleS_Action
entryRuleS_Action returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_ActionRule()); }
	iv_ruleS_Action=ruleS_Action
	{ $current=$iv_ruleS_Action.current; }
	EOF;

// Rule S_Action
ruleS_Action returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getS_ActionAccess().getS_ActionAction_0(),
					$current);
			}
		)
		(
			(
				lv_key_1_0='action'
				{
					newLeafNode(lv_key_1_0, grammarAccess.getS_ActionAccess().getKeyActionKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_ActionRule());
					}
					setWithLastConsumed($current, "key", lv_key_1_0, "action");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_ActionAccess().getNameValid_IDParserRuleCall_2_0());
				}
				lv_name_2_0=ruleValid_ID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_ActionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"msi.gama.lang.gaml.Gaml.Valid_ID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getS_ActionAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getS_ActionAccess().getArgsActionArgumentsParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleActionArguments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_ActionRule());
						}
						set(
							$current,
							"args",
							lv_args_4_0,
							"msi.gama.lang.gaml.Gaml.ActionArguments");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getS_ActionAccess().getRightParenthesisKeyword_3_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getS_ActionAccess().getFacetsFacetParserRuleCall_4_0());
				}
				lv_facets_6_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_ActionRule());
					}
					add(
						$current,
						"facets",
						lv_facets_6_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_ActionAccess().getBlockBlockParserRuleCall_5_0_0());
					}
					lv_block_7_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_ActionRule());
						}
						set(
							$current,
							"block",
							lv_block_7_0,
							"msi.gama.lang.gaml.Gaml.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getS_ActionAccess().getSemicolonKeyword_5_1());
			}
		)
	)
;

// Entry rule entryRuleS_Var
entryRuleS_Var returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_VarRule()); }
	iv_ruleS_Var=ruleS_Var
	{ $current=$iv_ruleS_Var.current; }
	EOF;

// Rule S_Var
ruleS_Var returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getS_VarAccess().getS_VarAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_VarAccess().getKeyK_VarParserRuleCall_1_0());
				}
				lv_key_1_0=ruleK_Var
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_VarRule());
					}
					set(
						$current,
						"key",
						lv_key_1_0,
						"msi.gama.lang.gaml.Gaml.K_Var");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_VarAccess().getNameValid_IDParserRuleCall_2_0());
				}
				lv_name_2_0=ruleValid_ID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_VarRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"msi.gama.lang.gaml.Gaml.Valid_ID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_VarAccess().getFacetsFacetParserRuleCall_3_0());
				}
				lv_facets_3_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_VarRule());
					}
					add(
						$current,
						"facets",
						lv_facets_3_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getS_VarAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleS_Assignment
entryRuleS_Assignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_AssignmentRule()); }
	iv_ruleS_Assignment=ruleS_Assignment
	{ $current=$iv_ruleS_Assignment.current; }
	EOF;

// Rule S_Assignment
ruleS_Assignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getS_AssignmentAccess().getS_DirectAssignmentParserRuleCall_0());
		}
		this_S_DirectAssignment_0=ruleS_DirectAssignment
		{
			$current = $this_S_DirectAssignment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getS_AssignmentAccess().getS_SetParserRuleCall_1());
		}
		this_S_Set_1=ruleS_Set
		{
			$current = $this_S_Set_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleS_DirectAssignment
entryRuleS_DirectAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_DirectAssignmentRule()); }
	iv_ruleS_DirectAssignment=ruleS_DirectAssignment
	{ $current=$iv_ruleS_DirectAssignment.current; }
	EOF;

// Rule S_DirectAssignment
ruleS_DirectAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_DirectAssignmentAccess().getExprExpressionParserRuleCall_0_0_0());
					}
					lv_expr_0_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_DirectAssignmentRule());
						}
						set(
							$current,
							"expr",
							lv_expr_0_0,
							"msi.gama.lang.gaml.Gaml.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getS_DirectAssignmentAccess().getKeyK_AssignmentParserRuleCall_0_1_0());
					}
					lv_key_1_0=ruleK_Assignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_DirectAssignmentRule());
						}
						set(
							$current,
							"key",
							lv_key_1_0,
							"msi.gama.lang.gaml.Gaml.K_Assignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getS_DirectAssignmentAccess().getValueExpressionParserRuleCall_0_2_0());
					}
					lv_value_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_DirectAssignmentRule());
						}
						set(
							$current,
							"value",
							lv_value_2_0,
							"msi.gama.lang.gaml.Gaml.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getS_DirectAssignmentAccess().getFacetsFacetParserRuleCall_0_3_0());
					}
					lv_facets_3_0=ruleFacet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_DirectAssignmentRule());
						}
						add(
							$current,
							"facets",
							lv_facets_3_0,
							"msi.gama.lang.gaml.Gaml.Facet");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getS_DirectAssignmentAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleS_Set
entryRuleS_Set returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_SetRule()); }
	iv_ruleS_Set=ruleS_Set
	{ $current=$iv_ruleS_Set.current; }
	EOF;

// Rule S_Set
ruleS_Set returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='set'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getS_SetAccess().getKeySetKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_SetRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "set");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SetAccess().getExprExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SetRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='value:'
			{
				newLeafNode(otherlv_2, grammarAccess.getS_SetAccess().getValueKeyword_2_0());
			}
			    |
			otherlv_3='<-'
			{
				newLeafNode(otherlv_3, grammarAccess.getS_SetAccess().getLessThanSignHyphenMinusKeyword_2_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SetAccess().getValueExpressionParserRuleCall_3_0());
				}
				lv_value_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SetRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getS_SetAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleS_Equation
entryRuleS_Equation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_EquationRule()); }
	iv_ruleS_Equation=ruleS_Equation
	{ $current=$iv_ruleS_Equation.current; }
	EOF;

// Rule S_Equation
ruleS_Equation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_EquationAccess().getExprFunctionParserRuleCall_0_0_0());
					}
					lv_expr_0_1=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_EquationRule());
						}
						set(
							$current,
							"expr",
							lv_expr_0_1,
							"msi.gama.lang.gaml.Gaml.Function");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getS_EquationAccess().getExprVariableRefParserRuleCall_0_0_1());
					}
					lv_expr_0_2=ruleVariableRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_EquationRule());
						}
						set(
							$current,
							"expr",
							lv_expr_0_2,
							"msi.gama.lang.gaml.Gaml.VariableRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				lv_key_1_0='='
				{
					newLeafNode(lv_key_1_0, grammarAccess.getS_EquationAccess().getKeyEqualsSignKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_EquationRule());
					}
					setWithLastConsumed($current, "key", lv_key_1_0, "=");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_EquationAccess().getValueExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_EquationRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleS_Equations
entryRuleS_Equations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_EquationsRule()); }
	iv_ruleS_Equations=ruleS_Equations
	{ $current=$iv_ruleS_Equations.current; }
	EOF;

// Rule S_Equations
ruleS_Equations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getS_EquationsAccess().getKeyK_EquationsParserRuleCall_0_0());
				}
				lv_key_0_0=ruleK_Equations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_EquationsRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.K_Equations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_EquationsAccess().getNameValid_IDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValid_ID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_EquationsRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"msi.gama.lang.gaml.Gaml.Valid_ID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_EquationsAccess().getFacetsFacetParserRuleCall_2_0());
				}
				lv_facets_2_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_EquationsRule());
					}
					add(
						$current,
						"facets",
						lv_facets_2_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				otherlv_3='{'
				{
					newLeafNode(otherlv_3, grammarAccess.getS_EquationsAccess().getLeftCurlyBracketKeyword_3_0_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getS_EquationsAccess().getEquationsS_EquationParserRuleCall_3_0_1_0_0());
							}
							lv_equations_4_0=ruleS_Equation
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getS_EquationsRule());
								}
								add(
									$current,
									"equations",
									lv_equations_4_0,
									"msi.gama.lang.gaml.Gaml.S_Equation");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getS_EquationsAccess().getSemicolonKeyword_3_0_1_1());
					}
				)*
				otherlv_6='}'
				{
					newLeafNode(otherlv_6, grammarAccess.getS_EquationsAccess().getRightCurlyBracketKeyword_3_0_2());
				}
			)
			    |
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getS_EquationsAccess().getSemicolonKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleS_Solve
entryRuleS_Solve returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_SolveRule()); }
	iv_ruleS_Solve=ruleS_Solve
	{ $current=$iv_ruleS_Solve.current; }
	EOF;

// Rule S_Solve
ruleS_Solve returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SolveAccess().getKeyK_SolveParserRuleCall_0_0());
				}
				lv_key_0_0=ruleK_Solve
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SolveRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.K_Solve");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SolveAccess().getExprEquationRefParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleEquationRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SolveRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"msi.gama.lang.gaml.Gaml.EquationRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SolveAccess().getFacetsFacetParserRuleCall_2_0());
				}
				lv_facets_2_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SolveRule());
					}
					add(
						$current,
						"facets",
						lv_facets_2_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_SolveAccess().getBlockBlockParserRuleCall_3_0_0());
					}
					lv_block_3_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_SolveRule());
						}
						set(
							$current,
							"block",
							lv_block_3_0,
							"msi.gama.lang.gaml.Gaml.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getS_SolveAccess().getSemicolonKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleS_Display
entryRuleS_Display returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_DisplayRule()); }
	iv_ruleS_Display=ruleS_Display
	{ $current=$iv_ruleS_Display.current; }
	EOF;

// Rule S_Display
ruleS_Display returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='display'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getS_DisplayAccess().getKeyDisplayKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getS_DisplayRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "display");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_DisplayAccess().getNameValid_IDParserRuleCall_1_0_0());
					}
					lv_name_1_1=ruleValid_ID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_DisplayRule());
						}
						set(
							$current,
							"name",
							lv_name_1_1,
							"msi.gama.lang.gaml.Gaml.Valid_ID");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_name_1_2=RULE_STRING
					{
						newLeafNode(lv_name_1_2, grammarAccess.getS_DisplayAccess().getNameSTRINGTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getS_DisplayRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_2,
							"msi.gama.lang.gaml.Gaml.STRING");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_DisplayAccess().getFacetsFacetParserRuleCall_2_0());
				}
				lv_facets_2_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_DisplayRule());
					}
					add(
						$current,
						"facets",
						lv_facets_2_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getS_DisplayAccess().getBlockB_DisplayParserRuleCall_3_0());
				}
				lv_block_3_0=ruleB_Display
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_DisplayRule());
					}
					set(
						$current,
						"block",
						lv_block_3_0,
						"msi.gama.lang.gaml.Gaml.B_Display");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleS_DisplayLayer
entryRuleS_DisplayLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_DisplayLayerRule()); }
	iv_ruleS_DisplayLayer=ruleS_DisplayLayer
	{ $current=$iv_ruleS_DisplayLayer.current; }
	EOF;

// Rule S_DisplayLayer
ruleS_DisplayLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleS_SpeciesLayer)=>
			{
				newCompositeNode(grammarAccess.getS_DisplayLayerAccess().getS_SpeciesLayerParserRuleCall_0());
			}
			this_S_SpeciesLayer_0=ruleS_SpeciesLayer
			{
				$current = $this_S_SpeciesLayer_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				(ruleS_ImageLayer)=>
				{
					newCompositeNode(grammarAccess.getS_DisplayLayerAccess().getS_ImageLayerParserRuleCall_1_0());
				}
				this_S_ImageLayer_1=ruleS_ImageLayer
				{
					$current = $this_S_ImageLayer_1.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			{
				newCompositeNode(grammarAccess.getS_DisplayLayerAccess().getStatementParserRuleCall_1_1());
			}
			this_Statement_2=ruleStatement
			{
				$current = $this_Statement_2.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleS_SpeciesLayer
entryRuleS_SpeciesLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_SpeciesLayerRule()); }
	iv_ruleS_SpeciesLayer=ruleS_SpeciesLayer
	{ $current=$iv_ruleS_SpeciesLayer.current; }
	EOF;

// Rule S_SpeciesLayer
ruleS_SpeciesLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SpeciesLayerAccess().getKeyK_SpeciesParserRuleCall_0_0());
				}
				lv_key_0_0=ruleK_Species
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SpeciesLayerRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.K_Species");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SpeciesLayerAccess().getExprExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SpeciesLayerRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_SpeciesLayerAccess().getFacetsFacetParserRuleCall_2_0());
				}
				lv_facets_2_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_SpeciesLayerRule());
					}
					add(
						$current,
						"facets",
						lv_facets_2_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getS_SpeciesLayerAccess().getBlockB_DisplayParserRuleCall_3_0_0());
					}
					lv_block_3_0=ruleB_Display
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getS_SpeciesLayerRule());
						}
						set(
							$current,
							"block",
							lv_block_3_0,
							"msi.gama.lang.gaml.Gaml.B_Display");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getS_SpeciesLayerAccess().getSemicolonKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleS_ImageLayer
entryRuleS_ImageLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_ImageLayerRule()); }
	iv_ruleS_ImageLayer=ruleS_ImageLayer
	{ $current=$iv_ruleS_ImageLayer.current; }
	EOF;

// Rule S_ImageLayer
ruleS_ImageLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getS_ImageLayerAccess().getKeyK_ImageLayerParserRuleCall_0_0());
				}
				lv_key_0_0=ruleK_ImageLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_ImageLayerRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.K_ImageLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_ImageLayerAccess().getExprExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_ImageLayerRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getS_ImageLayerAccess().getFacetsFacetParserRuleCall_2_0());
				}
				lv_facets_2_0=ruleFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getS_ImageLayerRule());
					}
					add(
						$current,
						"facets",
						lv_facets_2_0,
						"msi.gama.lang.gaml.Gaml.Facet");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getS_ImageLayerAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleK_Equations
entryRuleK_Equations returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_EquationsRule()); }
	iv_ruleK_Equations=ruleK_Equations
	{ $current=$iv_ruleK_Equations.current.getText(); }
	EOF;

// Rule K_Equations
ruleK_Equations returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='equation'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getK_EquationsAccess().getEquationKeyword());
	}
;

// Entry rule entryRuleK_Solve
entryRuleK_Solve returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_SolveRule()); }
	iv_ruleK_Solve=ruleK_Solve
	{ $current=$iv_ruleK_Solve.current.getText(); }
	EOF;

// Rule K_Solve
ruleK_Solve returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='solve'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getK_SolveAccess().getSolveKeyword());
	}
;

// Entry rule entryRuleK_Species
entryRuleK_Species returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_SpeciesRule()); }
	iv_ruleK_Species=ruleK_Species
	{ $current=$iv_ruleK_Species.current.getText(); }
	EOF;

// Rule K_Species
ruleK_Species returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='species'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_SpeciesAccess().getSpeciesKeyword_0());
		}
		    |
		kw='grid'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_SpeciesAccess().getGridKeyword_1());
		}
	)
;

// Entry rule entryRuleK_ImageLayer
entryRuleK_ImageLayer returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_ImageLayerRule()); }
	iv_ruleK_ImageLayer=ruleK_ImageLayer
	{ $current=$iv_ruleK_ImageLayer.current.getText(); }
	EOF;

// Rule K_ImageLayer
ruleK_ImageLayer returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='image'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getK_ImageLayerAccess().getImageKeyword());
	}
;

// Entry rule entryRuleK_Experiment
entryRuleK_Experiment returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_ExperimentRule()); }
	iv_ruleK_Experiment=ruleK_Experiment
	{ $current=$iv_ruleK_Experiment.current.getText(); }
	EOF;

// Rule K_Experiment
ruleK_Experiment returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='experiment'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getK_ExperimentAccess().getExperimentKeyword());
	}
;

// Entry rule entryRuleK_1Expr_Facets_BlockOrEnd
entryRuleK_1Expr_Facets_BlockOrEnd returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_1Expr_Facets_BlockOrEndRule()); }
	iv_ruleK_1Expr_Facets_BlockOrEnd=ruleK_1Expr_Facets_BlockOrEnd
	{ $current=$iv_ruleK_1Expr_Facets_BlockOrEnd.current.getText(); }
	EOF;

// Rule K_1Expr_Facets_BlockOrEnd
ruleK_1Expr_Facets_BlockOrEnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getK_LayerParserRuleCall_0());
		}
		this_K_Layer_0=ruleK_Layer
		{
			$current.merge(this_K_Layer_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		kw='ask'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getAskKeyword_1());
		}
		    |
		kw='release'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getReleaseKeyword_2());
		}
		    |
		kw='capture'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getCaptureKeyword_3());
		}
		    |
		kw='create'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getCreateKeyword_4());
		}
		    |
		kw='write'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getWriteKeyword_5());
		}
		    |
		kw='error'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getErrorKeyword_6());
		}
		    |
		kw='warn'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getWarnKeyword_7());
		}
		    |
		kw='exception'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getExceptionKeyword_8());
		}
		    |
		kw='save'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getSaveKeyword_9());
		}
		    |
		kw='assert'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getAssertKeyword_10());
		}
		    |
		kw='inspect'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getInspectKeyword_11());
		}
		    |
		kw='browse'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getBrowseKeyword_12());
		}
		    |
		kw='restore'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getRestoreKeyword_13());
		}
		    |
		kw='draw'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getDrawKeyword_14());
		}
		    |
		kw='using'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getUsingKeyword_15());
		}
		    |
		kw='put'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getPutKeyword_16());
		}
		    |
		kw='add'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getAddKeyword_17());
		}
		    |
		kw='remove'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getRemoveKeyword_18());
		}
		    |
		kw='parameter'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getParameterKeyword_19());
		}
		    |
		kw='status'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getStatusKeyword_20());
		}
		    |
		kw='highlight'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getHighlightKeyword_21());
		}
		    |
		kw='focus_on'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getFocus_onKeyword_22());
		}
		    |
		kw='layout'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getLayoutKeyword_23());
		}
	)
;

// Entry rule entryRuleK_Layer
entryRuleK_Layer returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_LayerRule()); }
	iv_ruleK_Layer=ruleK_Layer
	{ $current=$iv_ruleK_Layer.current.getText(); }
	EOF;

// Rule K_Layer
ruleK_Layer returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='light'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getLightKeyword_0());
		}
		    |
		kw='camera'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getCameraKeyword_1());
		}
		    |
		kw='text'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getTextKeyword_2());
		}
		    |
		kw='image_layer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getImage_layerKeyword_3());
		}
		    |
		kw='data'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getDataKeyword_4());
		}
		    |
		kw='chart'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getChartKeyword_5());
		}
		    |
		kw='agents'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getAgentsKeyword_6());
		}
		    |
		kw='graphics'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getGraphicsKeyword_7());
		}
		    |
		kw='display_population'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getDisplay_populationKeyword_8());
		}
		    |
		kw='display_grid'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getDisplay_gridKeyword_9());
		}
		    |
		kw='event'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getEventKeyword_10());
		}
		    |
		kw='overlay'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getOverlayKeyword_11());
		}
		    |
		kw='datalist'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getDatalistKeyword_12());
		}
		    |
		kw='mesh'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_LayerAccess().getMeshKeyword_13());
		}
	)
;

// Entry rule entryRuleK_Do
entryRuleK_Do returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_DoRule()); }
	iv_ruleK_Do=ruleK_Do
	{ $current=$iv_ruleK_Do.current.getText(); }
	EOF;

// Rule K_Do
ruleK_Do returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='do'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_DoAccess().getDoKeyword_0());
		}
		    |
		kw='invoke'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_DoAccess().getInvokeKeyword_1());
		}
	)
;

// Entry rule entryRuleK_Default
entryRuleK_Default returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_DefaultRule()); }
	iv_ruleK_Default=ruleK_Default
	{ $current=$iv_ruleK_Default.current.getText(); }
	EOF;

// Rule K_Default
ruleK_Default returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='default'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getK_DefaultAccess().getDefaultKeyword());
	}
;

// Entry rule entryRuleK_Var
entryRuleK_Var returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_VarRule()); }
	iv_ruleK_Var=ruleK_Var
	{ $current=$iv_ruleK_Var.current.getText(); }
	EOF;

// Rule K_Var
ruleK_Var returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='var'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_VarAccess().getVarKeyword_0());
		}
		    |
		kw='const'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_VarAccess().getConstKeyword_1());
		}
		    |
		kw='let'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_VarAccess().getLetKeyword_2());
		}
		    |
		kw='arg'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_VarAccess().getArgKeyword_3());
		}
	)
;

// Entry rule entryRuleK_Reflex
entryRuleK_Reflex returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_ReflexRule()); }
	iv_ruleK_Reflex=ruleK_Reflex
	{ $current=$iv_ruleK_Reflex.current.getText(); }
	EOF;

// Rule K_Reflex
ruleK_Reflex returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='init'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_ReflexAccess().getInitKeyword_0());
		}
		    |
		kw='reflex'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_ReflexAccess().getReflexKeyword_1());
		}
		    |
		kw='aspect'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_ReflexAccess().getAspectKeyword_2());
		}
	)
;

// Entry rule entryRuleK_Assignment
entryRuleK_Assignment returns [String current=null]:
	{ newCompositeNode(grammarAccess.getK_AssignmentRule()); }
	iv_ruleK_Assignment=ruleK_Assignment
	{ $current=$iv_ruleK_Assignment.current.getText(); }
	EOF;

// Rule K_Assignment
ruleK_Assignment returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='<-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_AssignmentAccess().getLessThanSignHyphenMinusKeyword_0());
		}
		    |
		kw='<<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_AssignmentAccess().getLessThanSignLessThanSignKeyword_1());
		}
		    |
		(
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getK_AssignmentAccess().getGreaterThanSignKeyword_2_0());
			}
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getK_AssignmentAccess().getGreaterThanSignKeyword_2_1());
			}
		)
		    |
		kw='<<+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_AssignmentAccess().getLessThanSignLessThanSignPlusSignKeyword_3());
		}
		    |
		(
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getK_AssignmentAccess().getGreaterThanSignKeyword_4_0());
			}
			kw='>-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getK_AssignmentAccess().getGreaterThanSignHyphenMinusKeyword_4_1());
			}
		)
		    |
		kw='+<-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_AssignmentAccess().getPlusSignLessThanSignHyphenMinusKeyword_5());
		}
		    |
		kw='<+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_AssignmentAccess().getLessThanSignPlusSignKeyword_6());
		}
		    |
		kw='>-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getK_AssignmentAccess().getGreaterThanSignHyphenMinusKeyword_7());
		}
	)
;

// Entry rule entryRuleActionArguments
entryRuleActionArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionArgumentsRule()); }
	iv_ruleActionArguments=ruleActionArguments
	{ $current=$iv_ruleActionArguments.current; }
	EOF;

// Rule ActionArguments
ruleActionArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_0_0());
				}
				lv_args_0_0=ruleArgumentDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionArgumentsRule());
					}
					add(
						$current,
						"args",
						lv_args_0_0,
						"msi.gama.lang.gaml.Gaml.ArgumentDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getActionArgumentsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_1_1_0());
					}
					lv_args_2_0=ruleArgumentDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionArgumentsRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"msi.gama.lang.gaml.Gaml.ArgumentDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleArgumentDefinition
entryRuleArgumentDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentDefinitionRule()); }
	iv_ruleArgumentDefinition=ruleArgumentDefinition
	{ $current=$iv_ruleArgumentDefinition.current; }
	EOF;

// Rule ArgumentDefinition
ruleArgumentDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentDefinitionAccess().getTypeTypeRefParserRuleCall_0_0());
				}
				lv_type_0_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentDefinitionRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"msi.gama.lang.gaml.Gaml.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentDefinitionAccess().getNameValid_IDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValid_ID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"msi.gama.lang.gaml.Gaml.Valid_ID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='<-'
			{
				newLeafNode(otherlv_2, grammarAccess.getArgumentDefinitionAccess().getLessThanSignHyphenMinusKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArgumentDefinitionAccess().getDefaultExpressionParserRuleCall_2_1_0());
					}
					lv_default_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgumentDefinitionRule());
						}
						set(
							$current,
							"default",
							lv_default_3_0,
							"msi.gama.lang.gaml.Gaml.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleFacet
entryRuleFacet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFacetRule()); }
	iv_ruleFacet=ruleFacet
	{ $current=$iv_ruleFacet.current; }
	EOF;

// Rule Facet
ruleFacet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFacetAccess().getF_ActionParserRuleCall_0());
		}
		this_F_Action_0=ruleF_Action
		{
			$current = $this_F_Action_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFacetAccess().getF_DefinitionParserRuleCall_1());
		}
		this_F_Definition_1=ruleF_Definition
		{
			$current = $this_F_Definition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFacetAccess().getF_RegularParserRuleCall_2());
		}
		this_F_Regular_2=ruleF_Regular
		{
			$current = $this_F_Regular_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFacetAccess().getF_TypeParserRuleCall_3());
		}
		this_F_Type_3=ruleF_Type
		{
			$current = $this_F_Type_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFacetAccess().getF_VarParserRuleCall_4());
		}
		this_F_Var_4=ruleF_Var
		{
			$current = $this_F_Var_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFacetAccess().getF_FunctionParserRuleCall_5());
		}
		this_F_Function_5=ruleF_Function
		{
			$current = $this_F_Function_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleF_Regular
entryRuleF_Regular returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getF_RegularRule()); }
	iv_ruleF_Regular=ruleF_Regular
	{ $current=$iv_ruleF_Regular.current; }
	EOF;

// Rule F_Regular
ruleF_Regular returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getF_RegularAccess().getKeyFK_RegularParserRuleCall_0_0_0());
					}
					lv_key_0_0=ruleFK_Regular
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getF_RegularRule());
						}
						set(
							$current,
							"key",
							lv_key_0_0,
							"msi.gama.lang.gaml.Gaml.FK_Regular");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_key_1_0='<-'
					{
						newLeafNode(lv_key_1_0, grammarAccess.getF_RegularAccess().getKeyLessThanSignHyphenMinusKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getF_RegularRule());
						}
						setWithLastConsumed($current, "key", lv_key_1_0, "<-");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getF_RegularAccess().getKeyFK_SpecialParserRuleCall_0_2_0());
					}
					lv_key_2_0=ruleFK_Special
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getF_RegularRule());
						}
						set(
							$current,
							"key",
							lv_key_2_0,
							"msi.gama.lang.gaml.Gaml.FK_Special");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getF_RegularAccess().getExprExpressionParserRuleCall_1_0());
				}
				lv_expr_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getF_RegularRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleF_Definition
entryRuleF_Definition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getF_DefinitionRule()); }
	iv_ruleF_Definition=ruleF_Definition
	{ $current=$iv_ruleF_Definition.current; }
	EOF;

// Rule F_Definition
ruleF_Definition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			('name:' | 'returns:')=>
			(
				{
					newCompositeNode(grammarAccess.getF_DefinitionAccess().getKeyFK_DefinitionParserRuleCall_0_0());
				}
				lv_key_0_0=ruleFK_Definition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getF_DefinitionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.FK_Definition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getF_DefinitionAccess().getNameValid_IDParserRuleCall_1_0_0());
					}
					lv_name_1_1=ruleValid_ID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getF_DefinitionRule());
						}
						set(
							$current,
							"name",
							lv_name_1_1,
							"msi.gama.lang.gaml.Gaml.Valid_ID");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_name_1_2=RULE_STRING
					{
						newLeafNode(lv_name_1_2, grammarAccess.getF_DefinitionAccess().getNameSTRINGTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getF_DefinitionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_2,
							"msi.gama.lang.gaml.Gaml.STRING");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleF_Function
entryRuleF_Function returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getF_FunctionRule()); }
	iv_ruleF_Function=ruleF_Function
	{ $current=$iv_ruleF_Function.current; }
	EOF;

// Rule F_Function
ruleF_Function returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='->'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getF_FunctionAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getF_FunctionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "->");
				}
			)
		)
		(
			(
				((
					(
						ruleExpression
					)
				)
				)=>
				(
					(
						{
							newCompositeNode(grammarAccess.getF_FunctionAccess().getExprExpressionParserRuleCall_1_0_0_0());
						}
						lv_expr_1_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getF_FunctionRule());
							}
							set(
								$current,
								"expr",
								lv_expr_1_0,
								"msi.gama.lang.gaml.Gaml.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_2='{'
				{
					newLeafNode(otherlv_2, grammarAccess.getF_FunctionAccess().getLeftCurlyBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getF_FunctionAccess().getExprExpressionParserRuleCall_1_1_1_0());
						}
						lv_expr_3_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getF_FunctionRule());
							}
							set(
								$current,
								"expr",
								lv_expr_3_0,
								"msi.gama.lang.gaml.Gaml.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4='}'
				{
					newLeafNode(otherlv_4, grammarAccess.getF_FunctionAccess().getRightCurlyBracketKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleF_Type
entryRuleF_Type returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getF_TypeRule()); }
	iv_ruleF_Type=ruleF_Type
	{ $current=$iv_ruleF_Type.current; }
	EOF;

// Rule F_Type
ruleF_Type returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getF_TypeAccess().getKeyFK_TypeParserRuleCall_0_0());
				}
				lv_key_0_0=ruleFK_Type
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getF_TypeRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.FK_Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('species' | 'image' | RULE_ID)=>
				(
					(
						{
							newCompositeNode(grammarAccess.getF_TypeAccess().getExprTypeRefParserRuleCall_1_0_0_0());
						}
						lv_expr_1_0=ruleTypeRef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getF_TypeRule());
							}
							set(
								$current,
								"expr",
								lv_expr_1_0,
								"msi.gama.lang.gaml.Gaml.TypeRef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getF_TypeAccess().getExprExpressionParserRuleCall_1_1_0());
					}
					lv_expr_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getF_TypeRule());
						}
						set(
							$current,
							"expr",
							lv_expr_2_0,
							"msi.gama.lang.gaml.Gaml.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleF_Action
entryRuleF_Action returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getF_ActionRule()); }
	iv_ruleF_Action=ruleF_Action
	{ $current=$iv_ruleF_Action.current; }
	EOF;

// Rule F_Action
ruleF_Action returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getF_ActionAccess().getKeyFK_ActionParserRuleCall_0_0());
				}
				lv_key_0_0=ruleFK_Action
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getF_ActionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.FK_Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getF_ActionAccess().getExprActionRefParserRuleCall_1_0_0());
					}
					lv_expr_1_0=ruleActionRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getF_ActionRule());
						}
						set(
							$current,
							"expr",
							lv_expr_1_0,
							"msi.gama.lang.gaml.Gaml.ActionRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getF_ActionAccess().getBlockBlockParserRuleCall_1_1_0());
					}
					lv_block_2_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getF_ActionRule());
						}
						set(
							$current,
							"block",
							lv_block_2_0,
							"msi.gama.lang.gaml.Gaml.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleF_Var
entryRuleF_Var returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getF_VarRule()); }
	iv_ruleF_Var=ruleF_Var
	{ $current=$iv_ruleF_Var.current; }
	EOF;

// Rule F_Var
ruleF_Var returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getF_VarAccess().getKeyFK_VarParserRuleCall_0_0());
				}
				lv_key_0_0=ruleFK_Var
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getF_VarRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"msi.gama.lang.gaml.Gaml.FK_Var");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getF_VarAccess().getExprVariableRefParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleVariableRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getF_VarRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"msi.gama.lang.gaml.Gaml.VariableRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFK_Regular
entryRuleFK_Regular returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFK_RegularRule()); }
	iv_ruleFK_Regular=ruleFK_Regular
	{ $current=$iv_ruleFK_Regular.current.getText(); }
	EOF;

// Rule FK_Regular
ruleFK_Regular returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getFK_RegularAccess().getIDTerminalRuleCall_0());
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_RegularAccess().getColonKeyword_1());
		}
	)
;

// Entry rule entryRuleFK_Definition
entryRuleFK_Definition returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFK_DefinitionRule()); }
	iv_ruleFK_Definition=ruleFK_Definition
	{ $current=$iv_ruleFK_Definition.current.getText(); }
	EOF;

// Rule FK_Definition
ruleFK_Definition returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='name:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_DefinitionAccess().getNameKeyword_0());
		}
		    |
		kw='returns:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_DefinitionAccess().getReturnsKeyword_1());
		}
	)
;

// Entry rule entryRuleFK_Type
entryRuleFK_Type returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFK_TypeRule()); }
	iv_ruleFK_Type=ruleFK_Type
	{ $current=$iv_ruleFK_Type.current.getText(); }
	EOF;

// Rule FK_Type
ruleFK_Type returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='as:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_TypeAccess().getAsKeyword_0());
		}
		    |
		kw='of:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_TypeAccess().getOfKeyword_1());
		}
		    |
		kw='parent:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_TypeAccess().getParentKeyword_2());
		}
		    |
		kw='species:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_TypeAccess().getSpeciesKeyword_3());
		}
		    |
		kw='type:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_TypeAccess().getTypeKeyword_4());
		}
	)
;

// Entry rule entryRuleFK_Special
entryRuleFK_Special returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFK_SpecialRule()); }
	iv_ruleFK_Special=ruleFK_Special
	{ $current=$iv_ruleFK_Special.current.getText(); }
	EOF;

// Rule FK_Special
ruleFK_Special returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='camera:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getCameraKeyword_0());
		}
		    |
		kw='data:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getDataKeyword_1());
		}
		    |
		(
			kw='when'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getWhenKeyword_2_0());
			}
			kw=':'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getColonKeyword_2_1());
			}
		)
		    |
		kw='const:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getConstKeyword_3());
		}
		    |
		kw='value:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getValueKeyword_4());
		}
		    |
		kw='topology:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getTopologyKeyword_5());
		}
		    |
		kw='item:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getItemKeyword_6());
		}
		    |
		kw='init:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getInitKeyword_7());
		}
		    |
		kw='message:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getMessageKeyword_8());
		}
		    |
		kw='control:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getControlKeyword_9());
		}
		    |
		kw='layout:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getLayoutKeyword_10());
		}
		    |
		kw='environment:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getEnvironmentKeyword_11());
		}
		    |
		kw='text:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getTextKeyword_12());
		}
		    |
		kw='image:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getImageKeyword_13());
		}
		    |
		kw='using:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getUsingKeyword_14());
		}
		    |
		kw='parameter:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getParameterKeyword_15());
		}
		    |
		kw='aspect:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getAspectKeyword_16());
		}
		    |
		kw='light:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_SpecialAccess().getLightKeyword_17());
		}
	)
;

// Entry rule entryRuleFK_Action
entryRuleFK_Action returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFK_ActionRule()); }
	iv_ruleFK_Action=ruleFK_Action
	{ $current=$iv_ruleFK_Action.current.getText(); }
	EOF;

// Rule FK_Action
ruleFK_Action returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='action:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_ActionAccess().getActionKeyword_0());
		}
		    |
		kw='on_change:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFK_ActionAccess().getOn_changeKeyword_1());
		}
	)
;

// Entry rule entryRuleFK_Var
entryRuleFK_Var returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFK_VarRule()); }
	iv_ruleFK_Var=ruleFK_Var
	{ $current=$iv_ruleFK_Var.current.getText(); }
	EOF;

// Rule FK_Var
ruleFK_Var returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='var:'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getFK_VarAccess().getVarKeyword());
	}
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
					(
						(
							ruleValid_ID
						)
					)
					'::'
				)
				    |
				(
					(
						(
							(
								ruleFK_Definition
								    |ruleFK_Type
								    |ruleFK_Special
								    |ruleFK_Action
								    |ruleFK_Var
							)
						)
					)
					':'
				)
			)
			)=>
			{
				newCompositeNode(grammarAccess.getExpressionAccess().getArgumentPairParserRuleCall_0());
			}
			this_ArgumentPair_0=ruleArgumentPair
			{
				$current = $this_ArgumentPair_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getPairParserRuleCall_1());
		}
		this_Pair_1=rulePair
		{
			$current = $this_Pair_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArgumentPair
entryRuleArgumentPair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentPairRule()); }
	iv_ruleArgumentPair=ruleArgumentPair
	{ $current=$iv_ruleArgumentPair.current; }
	EOF;

// Rule ArgumentPair
ruleArgumentPair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
					(
						(
							ruleValid_ID
						)
					)
					'::'
				)
				    |
				(
					(
						(
							(
								ruleFK_Definition
								    |ruleFK_Type
								    |ruleFK_Special
								    |ruleFK_Action
								    |ruleFK_Var
							)
						)
					)
					':'
				)
			)
			)=>
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getArgumentPairAccess().getOpValid_IDParserRuleCall_0_0_0_0_0());
							}
							lv_op_0_0=ruleValid_ID
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArgumentPairRule());
								}
								set(
									$current,
									"op",
									lv_op_0_0,
									"msi.gama.lang.gaml.Gaml.Valid_ID");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_1='::'
					{
						newLeafNode(otherlv_1, grammarAccess.getArgumentPairAccess().getColonColonKeyword_0_0_0_1());
					}
				)
				    |
				(
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getArgumentPairAccess().getOpFK_DefinitionParserRuleCall_0_0_1_0_0_0());
								}
								lv_op_2_1=ruleFK_Definition
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getArgumentPairRule());
									}
									set(
										$current,
										"op",
										lv_op_2_1,
										"msi.gama.lang.gaml.Gaml.FK_Definition");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getArgumentPairAccess().getOpFK_TypeParserRuleCall_0_0_1_0_0_1());
								}
								lv_op_2_2=ruleFK_Type
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getArgumentPairRule());
									}
									set(
										$current,
										"op",
										lv_op_2_2,
										"msi.gama.lang.gaml.Gaml.FK_Type");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getArgumentPairAccess().getOpFK_SpecialParserRuleCall_0_0_1_0_0_2());
								}
								lv_op_2_3=ruleFK_Special
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getArgumentPairRule());
									}
									set(
										$current,
										"op",
										lv_op_2_3,
										"msi.gama.lang.gaml.Gaml.FK_Special");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getArgumentPairAccess().getOpFK_ActionParserRuleCall_0_0_1_0_0_3());
								}
								lv_op_2_4=ruleFK_Action
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getArgumentPairRule());
									}
									set(
										$current,
										"op",
										lv_op_2_4,
										"msi.gama.lang.gaml.Gaml.FK_Action");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getArgumentPairAccess().getOpFK_VarParserRuleCall_0_0_1_0_0_4());
								}
								lv_op_2_5=ruleFK_Var
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getArgumentPairRule());
									}
									set(
										$current,
										"op",
										lv_op_2_5,
										"msi.gama.lang.gaml.Gaml.FK_Var");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					otherlv_3=':'
					{
						newLeafNode(otherlv_3, grammarAccess.getArgumentPairAccess().getColonKeyword_0_0_1_1());
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentPairAccess().getRightPairParserRuleCall_1_0());
				}
				lv_right_4_0=rulePair
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentPairRule());
					}
					set(
						$current,
						"right",
						lv_right_4_0,
						"msi.gama.lang.gaml.Gaml.Pair");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePair
entryRulePair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPairRule()); }
	iv_rulePair=rulePair
	{ $current=$iv_rulePair.current; }
	EOF;

// Rule Pair
rulePair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPairAccess().getIfParserRuleCall_0());
		}
		this_If_0=ruleIf
		{
			$current = $this_If_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPairAccess().getBinaryOperatorLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='::'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getPairAccess().getOpColonColonKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPairRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "::");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPairAccess().getRightIfParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleIf
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPairRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"msi.gama.lang.gaml.Gaml.If");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleIf
entryRuleIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfRule()); }
	iv_ruleIf=ruleIf
	{ $current=$iv_ruleIf.current; }
	EOF;

// Rule If
ruleIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIfAccess().getOrParserRuleCall_0());
		}
		this_Or_0=ruleOr
		{
			$current = $this_Or_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getIfAccess().getIfLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='?'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getIfAccess().getOpQuestionMarkKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIfRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "?");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfAccess().getRightOrParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"msi.gama.lang.gaml.Gaml.Or");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getIfAccess().getColonKeyword_1_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIfAccess().getIfFalseOrParserRuleCall_1_3_1_0());
						}
						lv_ifFalse_5_0=ruleOr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfRule());
							}
							set(
								$current,
								"ifFalse",
								lv_ifFalse_5_0,
								"msi.gama.lang.gaml.Gaml.Or");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrAccess().getBinaryOperatorLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='or'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getOrAccess().getOpOrKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "or");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"msi.gama.lang.gaml.Gaml.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndAccess().getCastParserRuleCall_0());
		}
		this_Cast_0=ruleCast
		{
			$current = $this_Cast_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndAccess().getBinaryOperatorLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='and'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getAndAccess().getOpAndKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAndRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "and");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getRightCastParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleCast
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"msi.gama.lang.gaml.Gaml.Cast");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCast
entryRuleCast returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCastRule()); }
	iv_ruleCast=ruleCast
	{ $current=$iv_ruleCast.current; }
	EOF;

// Rule Cast
ruleCast returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCastAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getCastAccess().getBinaryOperatorLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						lv_op_2_0='as'
						{
							newLeafNode(lv_op_2_0, grammarAccess.getCastAccess().getOpAsKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCastRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_0, "as");
						}
					)
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCastAccess().getRightTypeRefParserRuleCall_1_1_0_0());
						}
						lv_right_3_0=ruleTypeRef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCastRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"msi.gama.lang.gaml.Gaml.TypeRef");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_4='('
					{
						newLeafNode(otherlv_4, grammarAccess.getCastAccess().getLeftParenthesisKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCastAccess().getRightTypeRefParserRuleCall_1_1_1_1_0());
							}
							lv_right_5_0=ruleTypeRef
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCastRule());
								}
								set(
									$current,
									"right",
									lv_right_5_0,
									"msi.gama.lang.gaml.Gaml.TypeRef");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_6=')'
					{
						newLeafNode(otherlv_6, grammarAccess.getCastAccess().getRightParenthesisKeyword_1_1_1_2());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getAdditionParserRuleCall_0());
		}
		this_Addition_0=ruleAddition
		{
			$current = $this_Addition_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getComparisonAccess().getBinaryOperatorLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1='!='
							{
								newLeafNode(lv_op_2_1, grammarAccess.getComparisonAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2='='
							{
								newLeafNode(lv_op_2_2, grammarAccess.getComparisonAccess().getOpEqualsSignKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
							    |
							lv_op_2_3='>='
							{
								newLeafNode(lv_op_2_3, grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_2());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_3, null);
							}
							    |
							lv_op_2_4='<='
							{
								newLeafNode(lv_op_2_4, grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_3());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_4, null);
							}
							    |
							lv_op_2_5='<'
							{
								newLeafNode(lv_op_2_5, grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_0_1_0_4());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_5, null);
							}
							    |
							lv_op_2_6='>'
							{
								newLeafNode(lv_op_2_6, grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_0_1_0_5());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_6, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightAdditionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleAddition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"msi.gama.lang.gaml.Gaml.Addition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAddition
entryRuleAddition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionRule()); }
	iv_ruleAddition=ruleAddition
	{ $current=$iv_ruleAddition.current; }
	EOF;

// Rule Addition
ruleAddition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
		}
		this_Multiplication_0=ruleMultiplication
		{
			$current = $this_Multiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getAdditionAccess().getBinaryOperatorLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1='+'
							{
								newLeafNode(lv_op_2_1, grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAdditionRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2='-'
							{
								newLeafNode(lv_op_2_2, grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAdditionRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleMultiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"msi.gama.lang.gaml.Gaml.Multiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplication
entryRuleMultiplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicationRule()); }
	iv_ruleMultiplication=ruleMultiplication
	{ $current=$iv_ruleMultiplication.current; }
	EOF;

// Rule Multiplication
ruleMultiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationAccess().getExponentiationParserRuleCall_0());
		}
		this_Exponentiation_0=ruleExponentiation
		{
			$current = $this_Exponentiation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getMultiplicationAccess().getBinaryOperatorLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1='*'
							{
								newLeafNode(lv_op_2_1, grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getMultiplicationRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2='/'
							{
								newLeafNode(lv_op_2_2, grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getMultiplicationRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightExponentiationParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleExponentiation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"msi.gama.lang.gaml.Gaml.Exponentiation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExponentiation
entryRuleExponentiation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExponentiationRule()); }
	iv_ruleExponentiation=ruleExponentiation
	{ $current=$iv_ruleExponentiation.current; }
	EOF;

// Rule Exponentiation
ruleExponentiation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExponentiationAccess().getBinaryParserRuleCall_0());
		}
		this_Binary_0=ruleBinary
		{
			$current = $this_Binary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExponentiationAccess().getBinaryOperatorLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						lv_op_2_0='^'
						{
							newLeafNode(lv_op_2_0, grammarAccess.getExponentiationAccess().getOpCircumflexAccentKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExponentiationRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_0, "^");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExponentiationAccess().getRightBinaryParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleBinary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExponentiationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"msi.gama.lang.gaml.Gaml.Binary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleBinary
entryRuleBinary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryRule()); }
	iv_ruleBinary=ruleBinary
	{ $current=$iv_ruleBinary.current; }
	EOF;

// Rule Binary
ruleBinary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBinaryAccess().getUnitParserRuleCall_0());
		}
		this_Unit_0=ruleUnit
		{
			$current = $this_Unit_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getBinaryAccess().getBinaryOperatorLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryAccess().getOpValid_IDParserRuleCall_1_0_1_0());
						}
						lv_op_2_0=ruleValid_ID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryRule());
							}
							set(
								$current,
								"op",
								lv_op_2_0,
								"msi.gama.lang.gaml.Gaml.Valid_ID");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryAccess().getRightUnitParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"msi.gama.lang.gaml.Gaml.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnit
entryRuleUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current; }
	EOF;

// Rule Unit
ruleUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitAccess().getUnaryParserRuleCall_0());
		}
		this_Unary_0=ruleUnary
		{
			$current = $this_Unary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getUnitAccess().getUnitLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1='\u00B0'
							{
								newLeafNode(lv_op_2_1, grammarAccess.getUnitAccess().getOpDegreeSignKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getUnitRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2='#'
							{
								newLeafNode(lv_op_2_2, grammarAccess.getUnitAccess().getOpNumberSignKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getUnitRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitAccess().getRightUnitRefParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleUnitRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"msi.gama.lang.gaml.Gaml.UnitRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleUnary
entryRuleUnary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryRule()); }
	iv_ruleUnary=ruleUnary
	{ $current=$iv_ruleUnary.current; }
	EOF;

// Rule Unary
ruleUnary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnaryAccess().getAccessParserRuleCall_0());
		}
		this_Access_0=ruleAccess
		{
			$current = $this_Access_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryAccess().getUnaryAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						(
							(
								lv_op_2_1='\u00B0'
								{
									newLeafNode(lv_op_2_1, grammarAccess.getUnaryAccess().getOpDegreeSignKeyword_1_1_0_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUnaryRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_1, null);
								}
								    |
								lv_op_2_2='#'
								{
									newLeafNode(lv_op_2_2, grammarAccess.getUnaryAccess().getOpNumberSignKeyword_1_1_0_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUnaryRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_2, null);
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getUnaryAccess().getRightUnitRefParserRuleCall_1_1_0_1_0());
							}
							lv_right_3_0=ruleUnitRef
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getUnaryRule());
								}
								set(
									$current,
									"right",
									lv_right_3_0,
									"msi.gama.lang.gaml.Gaml.UnitRef");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(
						(
							(
								lv_op_4_1='-'
								{
									newLeafNode(lv_op_4_1, grammarAccess.getUnaryAccess().getOpHyphenMinusKeyword_1_1_1_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUnaryRule());
									}
									setWithLastConsumed($current, "op", lv_op_4_1, null);
								}
								    |
								lv_op_4_2='!'
								{
									newLeafNode(lv_op_4_2, grammarAccess.getUnaryAccess().getOpExclamationMarkKeyword_1_1_1_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUnaryRule());
									}
									setWithLastConsumed($current, "op", lv_op_4_2, null);
								}
								    |
								lv_op_4_3='my'
								{
									newLeafNode(lv_op_4_3, grammarAccess.getUnaryAccess().getOpMyKeyword_1_1_1_0_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUnaryRule());
									}
									setWithLastConsumed($current, "op", lv_op_4_3, null);
								}
								    |
								lv_op_4_4='the'
								{
									newLeafNode(lv_op_4_4, grammarAccess.getUnaryAccess().getOpTheKeyword_1_1_1_0_0_3());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUnaryRule());
									}
									setWithLastConsumed($current, "op", lv_op_4_4, null);
								}
								    |
								lv_op_4_5='not'
								{
									newLeafNode(lv_op_4_5, grammarAccess.getUnaryAccess().getOpNotKeyword_1_1_1_0_0_4());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUnaryRule());
									}
									setWithLastConsumed($current, "op", lv_op_4_5, null);
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getUnaryAccess().getRightUnaryParserRuleCall_1_1_1_1_0());
							}
							lv_right_5_0=ruleUnary
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getUnaryRule());
								}
								set(
									$current,
									"right",
									lv_right_5_0,
									"msi.gama.lang.gaml.Gaml.Unary");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
		)
	)
;

// Entry rule entryRuleAccess
entryRuleAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAccessRule()); }
	iv_ruleAccess=ruleAccess
	{ $current=$iv_ruleAccess.current; }
	EOF;

// Rule Access
ruleAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAccessAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAccessAccess().getAccessLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						(
							lv_op_2_0='['
							{
								newLeafNode(lv_op_2_0, grammarAccess.getAccessAccess().getOpLeftSquareBracketKeyword_1_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAccessRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_0, "[");
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getAccessAccess().getRightExpressionListParserRuleCall_1_1_0_1_0());
							}
							lv_right_3_0=ruleExpressionList
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAccessRule());
								}
								set(
									$current,
									"right",
									lv_right_3_0,
									"msi.gama.lang.gaml.Gaml.ExpressionList");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					otherlv_4=']'
					{
						newLeafNode(otherlv_4, grammarAccess.getAccessAccess().getRightSquareBracketKeyword_1_1_0_2());
					}
				)
				    |
				(
					(
						(
							lv_op_5_0='.'
							{
								newLeafNode(lv_op_5_0, grammarAccess.getAccessAccess().getOpFullStopKeyword_1_1_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAccessRule());
								}
								setWithLastConsumed($current, "op", lv_op_5_0, ".");
							}
						)
					)
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getAccessAccess().getRightAbstractRefParserRuleCall_1_1_1_1_0_0());
								}
								lv_right_6_1=ruleAbstractRef
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getAccessRule());
									}
									set(
										$current,
										"right",
										lv_right_6_1,
										"msi.gama.lang.gaml.Gaml.AbstractRef");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getAccessAccess().getRightStringLiteralParserRuleCall_1_1_1_1_0_1());
								}
								lv_right_6_2=ruleStringLiteral
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getAccessRule());
									}
									set(
										$current,
										"right",
										lv_right_6_2,
										"msi.gama.lang.gaml.Gaml.StringLiteral");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getTerminalExpressionParserRuleCall_0());
		}
		this_TerminalExpression_0=ruleTerminalExpression
		{
			$current = $this_TerminalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getAbstractRefParserRuleCall_1());
		}
		this_AbstractRef_1=ruleAbstractRef
		{
			$current = $this_AbstractRef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionListParserRuleCall_2_1());
			}
			this_ExpressionList_3=ruleExpressionList
			{
				$current = $this_ExpressionList_3.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2());
			}
		)
		    |
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getArrayAction_3_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExprsExpressionListParserRuleCall_3_2_0());
					}
					lv_exprs_7_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"exprs",
							lv_exprs_7_0,
							"msi.gama.lang.gaml.Gaml.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_3_3());
			}
		)
		    |
		(
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getPointAction_4_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getLeftExpressionParserRuleCall_4_2_0());
					}
					lv_left_11_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"left",
							lv_left_11_0,
							"msi.gama.lang.gaml.Gaml.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_op_12_0=','
					{
						newLeafNode(lv_op_12_0, grammarAccess.getPrimaryAccess().getOpCommaKeyword_4_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryRule());
						}
						setWithLastConsumed($current, "op", lv_op_12_0, ",");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getRightExpressionParserRuleCall_4_4_0());
					}
					lv_right_13_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"right",
							lv_right_13_0,
							"msi.gama.lang.gaml.Gaml.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getPrimaryAccess().getCommaKeyword_4_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryAccess().getZExpressionParserRuleCall_4_5_1_0());
						}
						lv_z_15_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryRule());
							}
							set(
								$current,
								"z",
								lv_z_15_0,
								"msi.gama.lang.gaml.Gaml.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_4_6());
			}
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionAccess().getFunctionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getLeftActionRefParserRuleCall_1_0());
				}
				lv_left_1_0=ruleActionRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"left",
						lv_left_1_0,
						"msi.gama.lang.gaml.Gaml.ActionRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getTypeTypeInfoParserRuleCall_2_0());
				}
				lv_type_2_0=ruleTypeInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"msi.gama.lang.gaml.Gaml.TypeInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getRightExpressionListParserRuleCall_4_0());
				}
				lv_right_4_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"right",
						lv_right_4_0,
						"msi.gama.lang.gaml.Gaml.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleExpressionList
entryRuleExpressionList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionListRule()); }
	iv_ruleExpressionList=ruleExpressionList
	{ $current=$iv_ruleExpressionList.current; }
	EOF;

// Rule ExpressionList
ruleExpressionList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_0_0());
					}
					lv_exprs_0_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionListRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_0_0,
							"msi.gama.lang.gaml.Gaml.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_1_1_0());
						}
						lv_exprs_2_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionListRule());
							}
							add(
								$current,
								"exprs",
								lv_exprs_2_0,
								"msi.gama.lang.gaml.Gaml.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionListAccess().getExprsParameterParserRuleCall_1_0_0());
					}
					lv_exprs_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionListRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_3_0,
							"msi.gama.lang.gaml.Gaml.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getExpressionListAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionListAccess().getExprsParameterParserRuleCall_1_1_1_0());
						}
						lv_exprs_5_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionListRule());
							}
							add(
								$current,
								"exprs",
								lv_exprs_5_0,
								"msi.gama.lang.gaml.Gaml.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterAccess().getParameterAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_DefinitionParserRuleCall_1_0_0_0());
						}
						lv_builtInFacetKey_1_1=ruleFK_Definition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterRule());
							}
							set(
								$current,
								"builtInFacetKey",
								lv_builtInFacetKey_1_1,
								"msi.gama.lang.gaml.Gaml.FK_Definition");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_TypeParserRuleCall_1_0_0_1());
						}
						lv_builtInFacetKey_1_2=ruleFK_Type
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterRule());
							}
							set(
								$current,
								"builtInFacetKey",
								lv_builtInFacetKey_1_2,
								"msi.gama.lang.gaml.Gaml.FK_Type");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_SpecialParserRuleCall_1_0_0_2());
						}
						lv_builtInFacetKey_1_3=ruleFK_Special
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterRule());
							}
							set(
								$current,
								"builtInFacetKey",
								lv_builtInFacetKey_1_3,
								"msi.gama.lang.gaml.Gaml.FK_Special");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_ActionParserRuleCall_1_0_0_3());
						}
						lv_builtInFacetKey_1_4=ruleFK_Action
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterRule());
							}
							set(
								$current,
								"builtInFacetKey",
								lv_builtInFacetKey_1_4,
								"msi.gama.lang.gaml.Gaml.FK_Action");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_VarParserRuleCall_1_0_0_4());
						}
						lv_builtInFacetKey_1_5=ruleFK_Var
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterRule());
							}
							set(
								$current,
								"builtInFacetKey",
								lv_builtInFacetKey_1_5,
								"msi.gama.lang.gaml.Gaml.FK_Var");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getParameterAccess().getLeftVariableRefParserRuleCall_1_1_0_0());
						}
						lv_left_2_0=ruleVariableRef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterRule());
							}
							set(
								$current,
								"left",
								lv_left_2_0,
								"msi.gama.lang.gaml.Gaml.VariableRef");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=':'
				{
					newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getColonKeyword_1_1_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getRightExpressionParserRuleCall_2_0());
				}
				lv_right_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"right",
						lv_right_4_0,
						"msi.gama.lang.gaml.Gaml.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAbstractRef
entryRuleAbstractRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractRefRule()); }
	iv_ruleAbstractRef=ruleAbstractRef
	{ $current=$iv_ruleAbstractRef.current; }
	EOF;

// Rule AbstractRef
ruleAbstractRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleFunction)=>
			{
				newCompositeNode(grammarAccess.getAbstractRefAccess().getFunctionParserRuleCall_0());
			}
			this_Function_0=ruleFunction
			{
				$current = $this_Function_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRefAccess().getVariableRefParserRuleCall_1());
		}
		this_VariableRef_1=ruleVariableRef
		{
			$current = $this_VariableRef_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUnitRef
entryRuleUnitRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitRefRule()); }
	iv_ruleUnitRef=ruleUnitRef
	{ $current=$iv_ruleUnitRef.current; }
	EOF;

// Rule UnitRef
ruleUnitRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnitRefAccess().getUnitNameAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnitRefRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getUnitRefAccess().getRefBuiltInUnitDefinitionCrossReference_1_0());
				}
				ruleValid_ID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableRef
entryRuleVariableRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRefRule()); }
	iv_ruleVariableRef=ruleVariableRef
	{ $current=$iv_ruleVariableRef.current; }
	EOF;

// Rule VariableRef
ruleVariableRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariableRefAccess().getVariableRefAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRefRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getVariableRefAccess().getRefVarDefinitionCrossReference_1_0());
				}
				ruleValid_ID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeRef
entryRuleTypeRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRefRule()); }
	iv_ruleTypeRef=ruleTypeRef
	{ $current=$iv_ruleTypeRef.current; }
	EOF;

// Rule TypeRef
ruleTypeRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeRefAccess().getTypeRefAction_0_0(),
						$current);
				}
			)
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTypeRefRule());
							}
						}
						otherlv_1=RULE_ID
						{
							newLeafNode(otherlv_1, grammarAccess.getTypeRefAccess().getRefTypeDefinitionCrossReference_0_1_0_0());
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeRefAccess().getParameterTypeInfoParserRuleCall_0_1_1_0());
						}
						lv_parameter_2_0=ruleTypeInfo
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeRefRule());
							}
							set(
								$current,
								"parameter",
								lv_parameter_2_0,
								"msi.gama.lang.gaml.Gaml.TypeInfo");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeRefAccess().getTypeRefAction_1_0(),
						$current);
				}
			)
			(
				otherlv_4='species'
				{
					newLeafNode(otherlv_4, grammarAccess.getTypeRefAccess().getSpeciesKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeRefAccess().getParameterTypeInfoParserRuleCall_1_1_1_0());
						}
						lv_parameter_5_0=ruleTypeInfo
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeRefRule());
							}
							set(
								$current,
								"parameter",
								lv_parameter_5_0,
								"msi.gama.lang.gaml.Gaml.TypeInfo");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeRefAccess().getTypeRefAction_2_0(),
						$current);
				}
			)
			otherlv_7='image'
			{
				newLeafNode(otherlv_7, grammarAccess.getTypeRefAccess().getImageKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleTypeInfo
entryRuleTypeInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeInfoRule()); }
	iv_ruleTypeInfo=ruleTypeInfo
	{ $current=$iv_ruleTypeInfo.current; }
	EOF;

// Rule TypeInfo
ruleTypeInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeInfoAccess().getLessThanSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeInfoAccess().getFirstTypeRefParserRuleCall_1_0());
				}
				lv_first_1_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeInfoRule());
					}
					set(
						$current,
						"first",
						lv_first_1_0,
						"msi.gama.lang.gaml.Gaml.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeInfoAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeInfoAccess().getSecondTypeRefParserRuleCall_2_1_0());
					}
					lv_second_3_0=ruleTypeRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeInfoRule());
						}
						set(
							$current,
							"second",
							lv_second_3_0,
							"msi.gama.lang.gaml.Gaml.TypeRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			('>')=>
			otherlv_4='>'
			{
				newLeafNode(otherlv_4, grammarAccess.getTypeInfoAccess().getGreaterThanSignKeyword_3());
			}
		)
	)
;

// Entry rule entryRuleActionRef
entryRuleActionRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRefRule()); }
	iv_ruleActionRef=ruleActionRef
	{ $current=$iv_ruleActionRef.current; }
	EOF;

// Rule ActionRef
ruleActionRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActionRefAccess().getActionRefAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRefRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getActionRefAccess().getRefActionDefinitionCrossReference_1_0());
				}
				ruleValid_ID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEquationRef
entryRuleEquationRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationRefRule()); }
	iv_ruleEquationRef=ruleEquationRef
	{ $current=$iv_ruleEquationRef.current; }
	EOF;

// Rule EquationRef
ruleEquationRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEquationRefAccess().getEquationRefAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEquationRefRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEquationRefAccess().getRefEquationDefinitionCrossReference_1_0());
				}
				ruleValid_ID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEquationDefinition
entryRuleEquationDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationDefinitionRule()); }
	iv_ruleEquationDefinition=ruleEquationDefinition
	{ $current=$iv_ruleEquationDefinition.current; }
	EOF;

// Rule EquationDefinition
ruleEquationDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEquationDefinitionAccess().getS_EquationsParserRuleCall_0());
		}
		this_S_Equations_0=ruleS_Equations
		{
			$current = $this_S_Equations_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEquationDefinitionAccess().getBuiltInEquationDefinitionParserRuleCall_1());
		}
		this_BuiltInEquationDefinition_1=ruleBuiltInEquationDefinition
		{
			$current = $this_BuiltInEquationDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeDefinition
entryRuleTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefinitionRule()); }
	iv_ruleTypeDefinition=ruleTypeDefinition
	{ $current=$iv_ruleTypeDefinition.current; }
	EOF;

// Rule TypeDefinition
ruleTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getS_SpeciesParserRuleCall_0());
		}
		this_S_Species_0=ruleS_Species
		{
			$current = $this_S_Species_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getBuiltInTypeDefinitionParserRuleCall_1());
		}
		this_BuiltInTypeDefinition_1=ruleBuiltInTypeDefinition
		{
			$current = $this_BuiltInTypeDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVarDefinition
entryRuleVarDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDefinitionRule()); }
	iv_ruleVarDefinition=ruleVarDefinition
	{ $current=$iv_ruleVarDefinition.current; }
	EOF;

// Rule VarDefinition
ruleVarDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleS_Declaration)=>
			{
				newCompositeNode(grammarAccess.getVarDefinitionAccess().getS_DeclarationParserRuleCall_0());
			}
			this_S_Declaration_0=ruleS_Declaration
			{
				$current = $this_S_Declaration_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getVarDefinitionAccess().getStandaloneModelParserRuleCall_1_0());
			}
			this_StandaloneModel_1=ruleStandaloneModel
			{
				$current = $this_StandaloneModel_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getVarDefinitionAccess().getArgumentDefinitionParserRuleCall_1_1());
			}
			this_ArgumentDefinition_2=ruleArgumentDefinition
			{
				$current = $this_ArgumentDefinition_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getVarDefinitionAccess().getF_DefinitionParserRuleCall_1_2());
			}
			this_F_Definition_3=ruleF_Definition
			{
				$current = $this_F_Definition_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getVarDefinitionAccess().getBuiltInVarDefinitionParserRuleCall_1_3());
			}
			this_BuiltInVarDefinition_4=ruleBuiltInVarDefinition
			{
				$current = $this_BuiltInVarDefinition_4.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getVarDefinitionAccess().getImportParserRuleCall_1_4());
			}
			this_Import_5=ruleImport
			{
				$current = $this_Import_5.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getVarDefinitionAccess().getS_ExperimentParserRuleCall_1_5());
			}
			this_S_Experiment_6=ruleS_Experiment
			{
				$current = $this_S_Experiment_6.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleActionDefinition
entryRuleActionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionDefinitionRule()); }
	iv_ruleActionDefinition=ruleActionDefinition
	{ $current=$iv_ruleActionDefinition.current; }
	EOF;

// Rule ActionDefinition
ruleActionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionDefinitionAccess().getS_ActionParserRuleCall_0());
		}
		this_S_Action_0=ruleS_Action
		{
			$current = $this_S_Action_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionDefinitionAccess().getBuiltInActionDefinitionParserRuleCall_1());
		}
		this_BuiltInActionDefinition_1=ruleBuiltInActionDefinition
		{
			$current = $this_BuiltInActionDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionDefinitionAccess().getS_DefinitionParserRuleCall_2());
		}
		this_S_Definition_2=ruleS_Definition
		{
			$current = $this_S_Definition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionDefinitionAccess().getTypeDefinitionParserRuleCall_3());
		}
		this_TypeDefinition_3=ruleTypeDefinition
		{
			$current = $this_TypeDefinition_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBuiltInUnitDefinition
entryRuleBuiltInUnitDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuiltInUnitDefinitionRule()); }
	iv_ruleBuiltInUnitDefinition=ruleBuiltInUnitDefinition
	{ $current=$iv_ruleBuiltInUnitDefinition.current; }
	EOF;

// Rule BuiltInUnitDefinition
ruleBuiltInUnitDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='**unit*'
		{
			newLeafNode(otherlv_0, grammarAccess.getBuiltInUnitDefinitionAccess().getUnitKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBuiltInUnitDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBuiltInUnitDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"msi.gama.lang.gaml.Gaml.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBuiltInTypeDefinition
entryRuleBuiltInTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuiltInTypeDefinitionRule()); }
	iv_ruleBuiltInTypeDefinition=ruleBuiltInTypeDefinition
	{ $current=$iv_ruleBuiltInTypeDefinition.current; }
	EOF;

// Rule BuiltInTypeDefinition
ruleBuiltInTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='**type*'
		{
			newLeafNode(otherlv_0, grammarAccess.getBuiltInTypeDefinitionAccess().getTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBuiltInTypeDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBuiltInTypeDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"msi.gama.lang.gaml.Gaml.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBuiltInActionDefinition
entryRuleBuiltInActionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuiltInActionDefinitionRule()); }
	iv_ruleBuiltInActionDefinition=ruleBuiltInActionDefinition
	{ $current=$iv_ruleBuiltInActionDefinition.current; }
	EOF;

// Rule BuiltInActionDefinition
ruleBuiltInActionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='**action*'
		{
			newLeafNode(otherlv_0, grammarAccess.getBuiltInActionDefinitionAccess().getActionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBuiltInActionDefinitionAccess().getNameValid_IDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValid_ID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBuiltInActionDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"msi.gama.lang.gaml.Gaml.Valid_ID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBuiltInSkillDefinition
entryRuleBuiltInSkillDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuiltInSkillDefinitionRule()); }
	iv_ruleBuiltInSkillDefinition=ruleBuiltInSkillDefinition
	{ $current=$iv_ruleBuiltInSkillDefinition.current; }
	EOF;

// Rule BuiltInSkillDefinition
ruleBuiltInSkillDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='**skill*'
		{
			newLeafNode(otherlv_0, grammarAccess.getBuiltInSkillDefinitionAccess().getSkillKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBuiltInSkillDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBuiltInSkillDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"msi.gama.lang.gaml.Gaml.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBuiltInVarDefinition
entryRuleBuiltInVarDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuiltInVarDefinitionRule()); }
	iv_ruleBuiltInVarDefinition=ruleBuiltInVarDefinition
	{ $current=$iv_ruleBuiltInVarDefinition.current; }
	EOF;

// Rule BuiltInVarDefinition
ruleBuiltInVarDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='**var*'
		{
			newLeafNode(otherlv_0, grammarAccess.getBuiltInVarDefinitionAccess().getVarKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBuiltInVarDefinitionAccess().getNameValid_IDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValid_ID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBuiltInVarDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"msi.gama.lang.gaml.Gaml.Valid_ID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBuiltInEquationDefinition
entryRuleBuiltInEquationDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuiltInEquationDefinitionRule()); }
	iv_ruleBuiltInEquationDefinition=ruleBuiltInEquationDefinition
	{ $current=$iv_ruleBuiltInEquationDefinition.current; }
	EOF;

// Rule BuiltInEquationDefinition
ruleBuiltInEquationDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='**equation*'
		{
			newLeafNode(otherlv_0, grammarAccess.getBuiltInEquationDefinitionAccess().getEquationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBuiltInEquationDefinitionAccess().getNameValid_IDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValid_ID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBuiltInEquationDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"msi.gama.lang.gaml.Gaml.Valid_ID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValid_ID
entryRuleValid_ID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValid_IDRule()); }
	iv_ruleValid_ID=ruleValid_ID
	{ $current=$iv_ruleValid_ID.current.getText(); }
	EOF;

// Rule Valid_ID
ruleValid_ID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValid_IDAccess().getK_SpeciesParserRuleCall_0());
		}
		this_K_Species_0=ruleK_Species
		{
			$current.merge(this_K_Species_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValid_IDAccess().getK_ImageLayerParserRuleCall_1());
		}
		this_K_ImageLayer_1=ruleK_ImageLayer
		{
			$current.merge(this_K_ImageLayer_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValid_IDAccess().getK_DoParserRuleCall_2());
		}
		this_K_Do_2=ruleK_Do
		{
			$current.merge(this_K_Do_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValid_IDAccess().getK_ReflexParserRuleCall_3());
		}
		this_K_Reflex_3=ruleK_Reflex
		{
			$current.merge(this_K_Reflex_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValid_IDAccess().getK_VarParserRuleCall_4());
		}
		this_K_Var_4=ruleK_Var
		{
			$current.merge(this_K_Var_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValid_IDAccess().getK_1Expr_Facets_BlockOrEndParserRuleCall_5());
		}
		this_K_1Expr_Facets_BlockOrEnd_5=ruleK_1Expr_Facets_BlockOrEnd
		{
			$current.merge(this_K_1Expr_Facets_BlockOrEnd_5);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValid_IDAccess().getK_EquationsParserRuleCall_6());
		}
		this_K_Equations_6=ruleK_Equations
		{
			$current.merge(this_K_Equations_6);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ID_7=RULE_ID
		{
			$current.merge(this_ID_7);
		}
		{
			newLeafNode(this_ID_7, grammarAccess.getValid_IDAccess().getIDTerminalRuleCall_7());
		}
		    |
		{
			newCompositeNode(grammarAccess.getValid_IDAccess().getK_DefaultParserRuleCall_8());
		}
		this_K_Default_8=ruleK_Default
		{
			$current.merge(this_K_Default_8);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValid_IDAccess().getK_ExperimentParserRuleCall_9());
		}
		this_K_Experiment_9=ruleK_Experiment
		{
			$current.merge(this_K_Experiment_9);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTerminalExpressionRule()); }
	iv_ruleTerminalExpression=ruleTerminalExpression
	{ $current=$iv_ruleTerminalExpression.current; }
	EOF;

// Rule TerminalExpression
ruleTerminalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTerminalExpressionAccess().getStringLiteralParserRuleCall_0());
		}
		this_StringLiteral_0=ruleStringLiteral
		{
			$current = $this_StringLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=RULE_INTEGER
					{
						newLeafNode(lv_op_2_0, grammarAccess.getTerminalExpressionAccess().getOpINTEGERTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTerminalExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_2_0,
							"msi.gama.lang.gaml.Gaml.INTEGER");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_op_4_0=RULE_DOUBLE
					{
						newLeafNode(lv_op_4_0, grammarAccess.getTerminalExpressionAccess().getOpDOUBLETerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTerminalExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_4_0,
							"msi.gama.lang.gaml.Gaml.DOUBLE");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_op_6_0=RULE_BOOLEAN
					{
						newLeafNode(lv_op_6_0, grammarAccess.getTerminalExpressionAccess().getOpBOOLEANTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTerminalExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_6_0,
							"msi.gama.lang.gaml.Gaml.BOOLEAN");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getReservedLiteralAction_4_0(),
						$current);
				}
			)
			(
				(
					lv_op_8_0=RULE_KEYWORD
					{
						newLeafNode(lv_op_8_0, grammarAccess.getTerminalExpressionAccess().getOpKEYWORDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTerminalExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_8_0,
							"msi.gama.lang.gaml.Gaml.KEYWORD");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_op_0_0=RULE_STRING
			{
				newLeafNode(lv_op_0_0, grammarAccess.getStringLiteralAccess().getOpSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"op",
					lv_op_0_0,
					"msi.gama.lang.gaml.Gaml.STRING");
			}
		)
	)
;

RULE_KEYWORD : ('each'|'self'|'myself'|'nil'|'super');

RULE_INTEGER : ('0'|'1'..'9' ('0'..'9')*);

RULE_BOOLEAN : ('true'|'false');

RULE_ID : ('2d'|'3d'|'2D'|'3D'|('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'$'|'0'..'9')*);

RULE_DOUBLE : ('1'..'9' ('0'..'9')* ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?|'0' ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?);

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

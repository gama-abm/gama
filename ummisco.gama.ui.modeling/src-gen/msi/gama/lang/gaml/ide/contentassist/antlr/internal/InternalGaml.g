/*
 * generated by Xtext
 */
grammar InternalGaml;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package msi.gama.lang.gaml.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package msi.gama.lang.gaml.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import msi.gama.lang.gaml.services.GamlGrammarAccess;

}
@parser::members {
	private GamlGrammarAccess grammarAccess;

	public void setGrammarAccess(GamlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleEntry
entryRuleEntry
:
{ before(grammarAccess.getEntryRule()); }
	 ruleEntry
{ after(grammarAccess.getEntryRule()); } 
	 EOF 
;

// Rule Entry
ruleEntry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntryAccess().getAlternatives()); }
		(rule__Entry__Alternatives)
		{ after(grammarAccess.getEntryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandaloneBlock
entryRuleStandaloneBlock
:
{ before(grammarAccess.getStandaloneBlockRule()); }
	 ruleStandaloneBlock
{ after(grammarAccess.getStandaloneBlockRule()); } 
	 EOF 
;

// Rule StandaloneBlock
ruleStandaloneBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandaloneBlockAccess().getGroup()); }
		(rule__StandaloneBlock__Group__0)
		{ after(grammarAccess.getStandaloneBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandaloneExpression
entryRuleStandaloneExpression
:
{ before(grammarAccess.getStandaloneExpressionRule()); }
	 ruleStandaloneExpression
{ after(grammarAccess.getStandaloneExpressionRule()); } 
	 EOF 
;

// Rule StandaloneExpression
ruleStandaloneExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandaloneExpressionAccess().getGroup()); }
		(rule__StandaloneExpression__Group__0)
		{ after(grammarAccess.getStandaloneExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandaloneExperiment
entryRuleStandaloneExperiment
:
{ before(grammarAccess.getStandaloneExperimentRule()); }
	 ruleStandaloneExperiment
{ after(grammarAccess.getStandaloneExperimentRule()); } 
	 EOF 
;

// Rule StandaloneExperiment
ruleStandaloneExperiment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandaloneExperimentAccess().getGroup()); }
		(rule__StandaloneExperiment__Group__0)
		{ after(grammarAccess.getStandaloneExperimentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandaloneModel
entryRuleStandaloneModel
:
{ before(grammarAccess.getStandaloneModelRule()); }
	 ruleStandaloneModel
{ after(grammarAccess.getStandaloneModelRule()); } 
	 EOF 
;

// Rule StandaloneModel
ruleStandaloneModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandaloneModelAccess().getGroup()); }
		(rule__StandaloneModel__Group__0)
		{ after(grammarAccess.getStandaloneModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePragma
entryRulePragma
:
{ before(grammarAccess.getPragmaRule()); }
	 rulePragma
{ after(grammarAccess.getPragmaRule()); } 
	 EOF 
;

// Rule Pragma
rulePragma 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPragmaAccess().getGroup()); }
		(rule__Pragma__Group__0)
		{ after(grammarAccess.getPragmaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleB_Model
entryRuleB_Model
:
{ before(grammarAccess.getB_ModelRule()); }
	 ruleB_Model
{ after(grammarAccess.getB_ModelRule()); } 
	 EOF 
;

// Rule B_Model
ruleB_Model 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getB_ModelAccess().getGroup()); }
		(rule__B_Model__Group__0)
		{ after(grammarAccess.getB_ModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleB_Switch
entryRuleB_Switch
:
{ before(grammarAccess.getB_SwitchRule()); }
	 ruleB_Switch
{ after(grammarAccess.getB_SwitchRule()); } 
	 EOF 
;

// Rule B_Switch
ruleB_Switch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getB_SwitchAccess().getGroup()); }
		(rule__B_Switch__Group__0)
		{ after(grammarAccess.getB_SwitchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleB_Display
entryRuleB_Display
:
{ before(grammarAccess.getB_DisplayRule()); }
	 ruleB_Display
{ after(grammarAccess.getB_DisplayRule()); } 
	 EOF 
;

// Rule B_Display
ruleB_Display 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getB_DisplayAccess().getGroup()); }
		(rule__B_Display__Group__0)
		{ after(grammarAccess.getB_DisplayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_1Expr_Facets_BlockOrEnd
entryRuleS_1Expr_Facets_BlockOrEnd
:
{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndRule()); }
	 ruleS_1Expr_Facets_BlockOrEnd
{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndRule()); } 
	 EOF 
;

// Rule S_1Expr_Facets_BlockOrEnd
ruleS_1Expr_Facets_BlockOrEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getGroup()); }
		(rule__S_1Expr_Facets_BlockOrEnd__Group__0)
		{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Section
entryRuleS_Section
:
{ before(grammarAccess.getS_SectionRule()); }
	 ruleS_Section
{ after(grammarAccess.getS_SectionRule()); } 
	 EOF 
;

// Rule S_Section
ruleS_Section 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_SectionAccess().getAlternatives()); }
		(rule__S_Section__Alternatives)
		{ after(grammarAccess.getS_SectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Global
entryRuleS_Global
:
{ before(grammarAccess.getS_GlobalRule()); }
	 ruleS_Global
{ after(grammarAccess.getS_GlobalRule()); } 
	 EOF 
;

// Rule S_Global
ruleS_Global 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_GlobalAccess().getGroup()); }
		(rule__S_Global__Group__0)
		{ after(grammarAccess.getS_GlobalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Species
entryRuleS_Species
:
{ before(grammarAccess.getS_SpeciesRule()); }
	 ruleS_Species
{ after(grammarAccess.getS_SpeciesRule()); } 
	 EOF 
;

// Rule S_Species
ruleS_Species 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_SpeciesAccess().getGroup()); }
		(rule__S_Species__Group__0)
		{ after(grammarAccess.getS_SpeciesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Experiment
entryRuleS_Experiment
:
{ before(grammarAccess.getS_ExperimentRule()); }
	 ruleS_Experiment
{ after(grammarAccess.getS_ExperimentRule()); } 
	 EOF 
;

// Rule S_Experiment
ruleS_Experiment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_ExperimentAccess().getGroup()); }
		(rule__S_Experiment__Group__0)
		{ after(grammarAccess.getS_ExperimentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Do
entryRuleS_Do
:
{ before(grammarAccess.getS_DoRule()); }
	 ruleS_Do
{ after(grammarAccess.getS_DoRule()); } 
	 EOF 
;

// Rule S_Do
ruleS_Do 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_DoAccess().getGroup()); }
		(rule__S_Do__Group__0)
		{ after(grammarAccess.getS_DoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Loop
entryRuleS_Loop
:
{ before(grammarAccess.getS_LoopRule()); }
	 ruleS_Loop
{ after(grammarAccess.getS_LoopRule()); } 
	 EOF 
;

// Rule S_Loop
ruleS_Loop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_LoopAccess().getGroup()); }
		(rule__S_Loop__Group__0)
		{ after(grammarAccess.getS_LoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_If
entryRuleS_If
:
{ before(grammarAccess.getS_IfRule()); }
	 ruleS_If
{ after(grammarAccess.getS_IfRule()); } 
	 EOF 
;

// Rule S_If
ruleS_If 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_IfAccess().getGroup()); }
		(rule__S_If__Group__0)
		{ after(grammarAccess.getS_IfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Try
entryRuleS_Try
:
{ before(grammarAccess.getS_TryRule()); }
	 ruleS_Try
{ after(grammarAccess.getS_TryRule()); } 
	 EOF 
;

// Rule S_Try
ruleS_Try 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_TryAccess().getGroup()); }
		(rule__S_Try__Group__0)
		{ after(grammarAccess.getS_TryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Switch
entryRuleS_Switch
:
{ before(grammarAccess.getS_SwitchRule()); }
	 ruleS_Switch
{ after(grammarAccess.getS_SwitchRule()); } 
	 EOF 
;

// Rule S_Switch
ruleS_Switch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_SwitchAccess().getGroup()); }
		(rule__S_Switch__Group__0)
		{ after(grammarAccess.getS_SwitchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Match
entryRuleS_Match
:
{ before(grammarAccess.getS_MatchRule()); }
	 ruleS_Match
{ after(grammarAccess.getS_MatchRule()); } 
	 EOF 
;

// Rule S_Match
ruleS_Match 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_MatchAccess().getGroup()); }
		(rule__S_Match__Group__0)
		{ after(grammarAccess.getS_MatchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Default
entryRuleS_Default
:
{ before(grammarAccess.getS_DefaultRule()); }
	 ruleS_Default
{ after(grammarAccess.getS_DefaultRule()); } 
	 EOF 
;

// Rule S_Default
ruleS_Default 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_DefaultAccess().getGroup()); }
		(rule__S_Default__Group__0)
		{ after(grammarAccess.getS_DefaultAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Return
entryRuleS_Return
:
{ before(grammarAccess.getS_ReturnRule()); }
	 ruleS_Return
{ after(grammarAccess.getS_ReturnRule()); } 
	 EOF 
;

// Rule S_Return
ruleS_Return 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_ReturnAccess().getGroup()); }
		(rule__S_Return__Group__0)
		{ after(grammarAccess.getS_ReturnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Break
entryRuleS_Break
:
{ before(grammarAccess.getS_BreakRule()); }
	 ruleS_Break
{ after(grammarAccess.getS_BreakRule()); } 
	 EOF 
;

// Rule S_Break
ruleS_Break 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_BreakAccess().getGroup()); }
		(rule__S_Break__Group__0)
		{ after(grammarAccess.getS_BreakAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Declaration
entryRuleS_Declaration
:
{ before(grammarAccess.getS_DeclarationRule()); }
	 ruleS_Declaration
{ after(grammarAccess.getS_DeclarationRule()); } 
	 EOF 
;

// Rule S_Declaration
ruleS_Declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_DeclarationAccess().getAlternatives()); }
		(rule__S_Declaration__Alternatives)
		{ after(grammarAccess.getS_DeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Reflex
entryRuleS_Reflex
:
{ before(grammarAccess.getS_ReflexRule()); }
	 ruleS_Reflex
{ after(grammarAccess.getS_ReflexRule()); } 
	 EOF 
;

// Rule S_Reflex
ruleS_Reflex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_ReflexAccess().getGroup()); }
		(rule__S_Reflex__Group__0)
		{ after(grammarAccess.getS_ReflexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Definition
entryRuleS_Definition
:
{ before(grammarAccess.getS_DefinitionRule()); }
	 ruleS_Definition
{ after(grammarAccess.getS_DefinitionRule()); } 
	 EOF 
;

// Rule S_Definition
ruleS_Definition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_DefinitionAccess().getGroup()); }
		(rule__S_Definition__Group__0)
		{ after(grammarAccess.getS_DefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Action
entryRuleS_Action
:
{ before(grammarAccess.getS_ActionRule()); }
	 ruleS_Action
{ after(grammarAccess.getS_ActionRule()); } 
	 EOF 
;

// Rule S_Action
ruleS_Action 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_ActionAccess().getGroup()); }
		(rule__S_Action__Group__0)
		{ after(grammarAccess.getS_ActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Var
entryRuleS_Var
:
{ before(grammarAccess.getS_VarRule()); }
	 ruleS_Var
{ after(grammarAccess.getS_VarRule()); } 
	 EOF 
;

// Rule S_Var
ruleS_Var 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_VarAccess().getGroup()); }
		(rule__S_Var__Group__0)
		{ after(grammarAccess.getS_VarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Assignment
entryRuleS_Assignment
:
{ before(grammarAccess.getS_AssignmentRule()); }
	 ruleS_Assignment
{ after(grammarAccess.getS_AssignmentRule()); } 
	 EOF 
;

// Rule S_Assignment
ruleS_Assignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_AssignmentAccess().getAlternatives()); }
		(rule__S_Assignment__Alternatives)
		{ after(grammarAccess.getS_AssignmentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_DirectAssignment
entryRuleS_DirectAssignment
:
{ before(grammarAccess.getS_DirectAssignmentRule()); }
	 ruleS_DirectAssignment
{ after(grammarAccess.getS_DirectAssignmentRule()); } 
	 EOF 
;

// Rule S_DirectAssignment
ruleS_DirectAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_DirectAssignmentAccess().getGroup()); }
		(rule__S_DirectAssignment__Group__0)
		{ after(grammarAccess.getS_DirectAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Set
entryRuleS_Set
:
{ before(grammarAccess.getS_SetRule()); }
	 ruleS_Set
{ after(grammarAccess.getS_SetRule()); } 
	 EOF 
;

// Rule S_Set
ruleS_Set 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_SetAccess().getGroup()); }
		(rule__S_Set__Group__0)
		{ after(grammarAccess.getS_SetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Equation
entryRuleS_Equation
:
{ before(grammarAccess.getS_EquationRule()); }
	 ruleS_Equation
{ after(grammarAccess.getS_EquationRule()); } 
	 EOF 
;

// Rule S_Equation
ruleS_Equation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_EquationAccess().getGroup()); }
		(rule__S_Equation__Group__0)
		{ after(grammarAccess.getS_EquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Equations
entryRuleS_Equations
:
{ before(grammarAccess.getS_EquationsRule()); }
	 ruleS_Equations
{ after(grammarAccess.getS_EquationsRule()); } 
	 EOF 
;

// Rule S_Equations
ruleS_Equations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_EquationsAccess().getGroup()); }
		(rule__S_Equations__Group__0)
		{ after(grammarAccess.getS_EquationsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Solve
entryRuleS_Solve
:
{ before(grammarAccess.getS_SolveRule()); }
	 ruleS_Solve
{ after(grammarAccess.getS_SolveRule()); } 
	 EOF 
;

// Rule S_Solve
ruleS_Solve 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_SolveAccess().getGroup()); }
		(rule__S_Solve__Group__0)
		{ after(grammarAccess.getS_SolveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_Display
entryRuleS_Display
:
{ before(grammarAccess.getS_DisplayRule()); }
	 ruleS_Display
{ after(grammarAccess.getS_DisplayRule()); } 
	 EOF 
;

// Rule S_Display
ruleS_Display 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_DisplayAccess().getGroup()); }
		(rule__S_Display__Group__0)
		{ after(grammarAccess.getS_DisplayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_DisplayLayer
entryRuleS_DisplayLayer
:
{ before(grammarAccess.getS_DisplayLayerRule()); }
	 ruleS_DisplayLayer
{ after(grammarAccess.getS_DisplayLayerRule()); } 
	 EOF 
;

// Rule S_DisplayLayer
ruleS_DisplayLayer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_DisplayLayerAccess().getAlternatives()); }
		(rule__S_DisplayLayer__Alternatives)
		{ after(grammarAccess.getS_DisplayLayerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_SpeciesLayer
entryRuleS_SpeciesLayer
:
{ before(grammarAccess.getS_SpeciesLayerRule()); }
	 ruleS_SpeciesLayer
{ after(grammarAccess.getS_SpeciesLayerRule()); } 
	 EOF 
;

// Rule S_SpeciesLayer
ruleS_SpeciesLayer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_SpeciesLayerAccess().getGroup()); }
		(rule__S_SpeciesLayer__Group__0)
		{ after(grammarAccess.getS_SpeciesLayerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleS_ImageLayer
entryRuleS_ImageLayer
:
{ before(grammarAccess.getS_ImageLayerRule()); }
	 ruleS_ImageLayer
{ after(grammarAccess.getS_ImageLayerRule()); } 
	 EOF 
;

// Rule S_ImageLayer
ruleS_ImageLayer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getS_ImageLayerAccess().getGroup()); }
		(rule__S_ImageLayer__Group__0)
		{ after(grammarAccess.getS_ImageLayerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_Equations
entryRuleK_Equations
:
{ before(grammarAccess.getK_EquationsRule()); }
	 ruleK_Equations
{ after(grammarAccess.getK_EquationsRule()); } 
	 EOF 
;

// Rule K_Equations
ruleK_Equations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_EquationsAccess().getEquationKeyword()); }
		'equation'
		{ after(grammarAccess.getK_EquationsAccess().getEquationKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_Solve
entryRuleK_Solve
:
{ before(grammarAccess.getK_SolveRule()); }
	 ruleK_Solve
{ after(grammarAccess.getK_SolveRule()); } 
	 EOF 
;

// Rule K_Solve
ruleK_Solve 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_SolveAccess().getSolveKeyword()); }
		'solve'
		{ after(grammarAccess.getK_SolveAccess().getSolveKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_Species
entryRuleK_Species
:
{ before(grammarAccess.getK_SpeciesRule()); }
	 ruleK_Species
{ after(grammarAccess.getK_SpeciesRule()); } 
	 EOF 
;

// Rule K_Species
ruleK_Species 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_SpeciesAccess().getAlternatives()); }
		(rule__K_Species__Alternatives)
		{ after(grammarAccess.getK_SpeciesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_ImageLayer
entryRuleK_ImageLayer
:
{ before(grammarAccess.getK_ImageLayerRule()); }
	 ruleK_ImageLayer
{ after(grammarAccess.getK_ImageLayerRule()); } 
	 EOF 
;

// Rule K_ImageLayer
ruleK_ImageLayer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_ImageLayerAccess().getImageKeyword()); }
		'image'
		{ after(grammarAccess.getK_ImageLayerAccess().getImageKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_Experiment
entryRuleK_Experiment
:
{ before(grammarAccess.getK_ExperimentRule()); }
	 ruleK_Experiment
{ after(grammarAccess.getK_ExperimentRule()); } 
	 EOF 
;

// Rule K_Experiment
ruleK_Experiment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_ExperimentAccess().getExperimentKeyword()); }
		'experiment'
		{ after(grammarAccess.getK_ExperimentAccess().getExperimentKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_1Expr_Facets_BlockOrEnd
entryRuleK_1Expr_Facets_BlockOrEnd
:
{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndRule()); }
	 ruleK_1Expr_Facets_BlockOrEnd
{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndRule()); } 
	 EOF 
;

// Rule K_1Expr_Facets_BlockOrEnd
ruleK_1Expr_Facets_BlockOrEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getAlternatives()); }
		(rule__K_1Expr_Facets_BlockOrEnd__Alternatives)
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_Layer
entryRuleK_Layer
:
{ before(grammarAccess.getK_LayerRule()); }
	 ruleK_Layer
{ after(grammarAccess.getK_LayerRule()); } 
	 EOF 
;

// Rule K_Layer
ruleK_Layer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_LayerAccess().getAlternatives()); }
		(rule__K_Layer__Alternatives)
		{ after(grammarAccess.getK_LayerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_Do
entryRuleK_Do
:
{ before(grammarAccess.getK_DoRule()); }
	 ruleK_Do
{ after(grammarAccess.getK_DoRule()); } 
	 EOF 
;

// Rule K_Do
ruleK_Do 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_DoAccess().getAlternatives()); }
		(rule__K_Do__Alternatives)
		{ after(grammarAccess.getK_DoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_Default
entryRuleK_Default
:
{ before(grammarAccess.getK_DefaultRule()); }
	 ruleK_Default
{ after(grammarAccess.getK_DefaultRule()); } 
	 EOF 
;

// Rule K_Default
ruleK_Default 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_DefaultAccess().getDefaultKeyword()); }
		'default'
		{ after(grammarAccess.getK_DefaultAccess().getDefaultKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_Var
entryRuleK_Var
:
{ before(grammarAccess.getK_VarRule()); }
	 ruleK_Var
{ after(grammarAccess.getK_VarRule()); } 
	 EOF 
;

// Rule K_Var
ruleK_Var 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_VarAccess().getAlternatives()); }
		(rule__K_Var__Alternatives)
		{ after(grammarAccess.getK_VarAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_Reflex
entryRuleK_Reflex
:
{ before(grammarAccess.getK_ReflexRule()); }
	 ruleK_Reflex
{ after(grammarAccess.getK_ReflexRule()); } 
	 EOF 
;

// Rule K_Reflex
ruleK_Reflex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_ReflexAccess().getAlternatives()); }
		(rule__K_Reflex__Alternatives)
		{ after(grammarAccess.getK_ReflexAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleK_Assignment
entryRuleK_Assignment
:
{ before(grammarAccess.getK_AssignmentRule()); }
	 ruleK_Assignment
{ after(grammarAccess.getK_AssignmentRule()); } 
	 EOF 
;

// Rule K_Assignment
ruleK_Assignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getK_AssignmentAccess().getAlternatives()); }
		(rule__K_Assignment__Alternatives)
		{ after(grammarAccess.getK_AssignmentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionArguments
entryRuleActionArguments
:
{ before(grammarAccess.getActionArgumentsRule()); }
	 ruleActionArguments
{ after(grammarAccess.getActionArgumentsRule()); } 
	 EOF 
;

// Rule ActionArguments
ruleActionArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionArgumentsAccess().getGroup()); }
		(rule__ActionArguments__Group__0)
		{ after(grammarAccess.getActionArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgumentDefinition
entryRuleArgumentDefinition
:
{ before(grammarAccess.getArgumentDefinitionRule()); }
	 ruleArgumentDefinition
{ after(grammarAccess.getArgumentDefinitionRule()); } 
	 EOF 
;

// Rule ArgumentDefinition
ruleArgumentDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentDefinitionAccess().getGroup()); }
		(rule__ArgumentDefinition__Group__0)
		{ after(grammarAccess.getArgumentDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFacet
entryRuleFacet
:
{ before(grammarAccess.getFacetRule()); }
	 ruleFacet
{ after(grammarAccess.getFacetRule()); } 
	 EOF 
;

// Rule Facet
ruleFacet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFacetAccess().getAlternatives()); }
		(rule__Facet__Alternatives)
		{ after(grammarAccess.getFacetAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleF_Regular
entryRuleF_Regular
:
{ before(grammarAccess.getF_RegularRule()); }
	 ruleF_Regular
{ after(grammarAccess.getF_RegularRule()); } 
	 EOF 
;

// Rule F_Regular
ruleF_Regular 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getF_RegularAccess().getGroup()); }
		(rule__F_Regular__Group__0)
		{ after(grammarAccess.getF_RegularAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleF_Definition
entryRuleF_Definition
:
{ before(grammarAccess.getF_DefinitionRule()); }
	 ruleF_Definition
{ after(grammarAccess.getF_DefinitionRule()); } 
	 EOF 
;

// Rule F_Definition
ruleF_Definition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getF_DefinitionAccess().getGroup()); }
		(rule__F_Definition__Group__0)
		{ after(grammarAccess.getF_DefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleF_Function
entryRuleF_Function
:
{ before(grammarAccess.getF_FunctionRule()); }
	 ruleF_Function
{ after(grammarAccess.getF_FunctionRule()); } 
	 EOF 
;

// Rule F_Function
ruleF_Function 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getF_FunctionAccess().getGroup()); }
		(rule__F_Function__Group__0)
		{ after(grammarAccess.getF_FunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleF_Type
entryRuleF_Type
:
{ before(grammarAccess.getF_TypeRule()); }
	 ruleF_Type
{ after(grammarAccess.getF_TypeRule()); } 
	 EOF 
;

// Rule F_Type
ruleF_Type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getF_TypeAccess().getGroup()); }
		(rule__F_Type__Group__0)
		{ after(grammarAccess.getF_TypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleF_Action
entryRuleF_Action
:
{ before(grammarAccess.getF_ActionRule()); }
	 ruleF_Action
{ after(grammarAccess.getF_ActionRule()); } 
	 EOF 
;

// Rule F_Action
ruleF_Action 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getF_ActionAccess().getGroup()); }
		(rule__F_Action__Group__0)
		{ after(grammarAccess.getF_ActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleF_Var
entryRuleF_Var
:
{ before(grammarAccess.getF_VarRule()); }
	 ruleF_Var
{ after(grammarAccess.getF_VarRule()); } 
	 EOF 
;

// Rule F_Var
ruleF_Var 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getF_VarAccess().getGroup()); }
		(rule__F_Var__Group__0)
		{ after(grammarAccess.getF_VarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFK_Regular
entryRuleFK_Regular
:
{ before(grammarAccess.getFK_RegularRule()); }
	 ruleFK_Regular
{ after(grammarAccess.getFK_RegularRule()); } 
	 EOF 
;

// Rule FK_Regular
ruleFK_Regular 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFK_RegularAccess().getGroup()); }
		(rule__FK_Regular__Group__0)
		{ after(grammarAccess.getFK_RegularAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFK_Definition
entryRuleFK_Definition
:
{ before(grammarAccess.getFK_DefinitionRule()); }
	 ruleFK_Definition
{ after(grammarAccess.getFK_DefinitionRule()); } 
	 EOF 
;

// Rule FK_Definition
ruleFK_Definition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFK_DefinitionAccess().getAlternatives()); }
		(rule__FK_Definition__Alternatives)
		{ after(grammarAccess.getFK_DefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFK_Type
entryRuleFK_Type
:
{ before(grammarAccess.getFK_TypeRule()); }
	 ruleFK_Type
{ after(grammarAccess.getFK_TypeRule()); } 
	 EOF 
;

// Rule FK_Type
ruleFK_Type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFK_TypeAccess().getAlternatives()); }
		(rule__FK_Type__Alternatives)
		{ after(grammarAccess.getFK_TypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFK_Special
entryRuleFK_Special
:
{ before(grammarAccess.getFK_SpecialRule()); }
	 ruleFK_Special
{ after(grammarAccess.getFK_SpecialRule()); } 
	 EOF 
;

// Rule FK_Special
ruleFK_Special 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFK_SpecialAccess().getAlternatives()); }
		(rule__FK_Special__Alternatives)
		{ after(grammarAccess.getFK_SpecialAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFK_Action
entryRuleFK_Action
:
{ before(grammarAccess.getFK_ActionRule()); }
	 ruleFK_Action
{ after(grammarAccess.getFK_ActionRule()); } 
	 EOF 
;

// Rule FK_Action
ruleFK_Action 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFK_ActionAccess().getAlternatives()); }
		(rule__FK_Action__Alternatives)
		{ after(grammarAccess.getFK_ActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFK_Var
entryRuleFK_Var
:
{ before(grammarAccess.getFK_VarRule()); }
	 ruleFK_Var
{ after(grammarAccess.getFK_VarRule()); } 
	 EOF 
;

// Rule FK_Var
ruleFK_Var 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFK_VarAccess().getVarKeyword()); }
		'var:'
		{ after(grammarAccess.getFK_VarAccess().getVarKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgumentPair
entryRuleArgumentPair
:
{ before(grammarAccess.getArgumentPairRule()); }
	 ruleArgumentPair
{ after(grammarAccess.getArgumentPairRule()); } 
	 EOF 
;

// Rule ArgumentPair
ruleArgumentPair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentPairAccess().getGroup()); }
		(rule__ArgumentPair__Group__0)
		{ after(grammarAccess.getArgumentPairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePair
entryRulePair
:
{ before(grammarAccess.getPairRule()); }
	 rulePair
{ after(grammarAccess.getPairRule()); } 
	 EOF 
;

// Rule Pair
rulePair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPairAccess().getGroup()); }
		(rule__Pair__Group__0)
		{ after(grammarAccess.getPairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIf
entryRuleIf
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfAccess().getGroup()); }
		(rule__If__Group__0)
		{ after(grammarAccess.getIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCast
entryRuleCast
:
{ before(grammarAccess.getCastRule()); }
	 ruleCast
{ after(grammarAccess.getCastRule()); } 
	 EOF 
;

// Rule Cast
ruleCast 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCastAccess().getGroup()); }
		(rule__Cast__Group__0)
		{ after(grammarAccess.getCastAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddition
entryRuleAddition
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup()); }
		(rule__Addition__Group__0)
		{ after(grammarAccess.getAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplication
entryRuleMultiplication
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
		(rule__Multiplication__Group__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExponentiation
entryRuleExponentiation
:
{ before(grammarAccess.getExponentiationRule()); }
	 ruleExponentiation
{ after(grammarAccess.getExponentiationRule()); } 
	 EOF 
;

// Rule Exponentiation
ruleExponentiation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentiationAccess().getGroup()); }
		(rule__Exponentiation__Group__0)
		{ after(grammarAccess.getExponentiationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinary
entryRuleBinary
:
{ before(grammarAccess.getBinaryRule()); }
	 ruleBinary
{ after(grammarAccess.getBinaryRule()); } 
	 EOF 
;

// Rule Binary
ruleBinary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryAccess().getGroup()); }
		(rule__Binary__Group__0)
		{ after(grammarAccess.getBinaryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnit
entryRuleUnit
:
{ before(grammarAccess.getUnitRule()); }
	 ruleUnit
{ after(grammarAccess.getUnitRule()); } 
	 EOF 
;

// Rule Unit
ruleUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitAccess().getGroup()); }
		(rule__Unit__Group__0)
		{ after(grammarAccess.getUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnary
entryRuleUnary
:
{ before(grammarAccess.getUnaryRule()); }
	 ruleUnary
{ after(grammarAccess.getUnaryRule()); } 
	 EOF 
;

// Rule Unary
ruleUnary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryAccess().getAlternatives()); }
		(rule__Unary__Alternatives)
		{ after(grammarAccess.getUnaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAccess
entryRuleAccess
:
{ before(grammarAccess.getAccessRule()); }
	 ruleAccess
{ after(grammarAccess.getAccessRule()); } 
	 EOF 
;

// Rule Access
ruleAccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAccessAccess().getGroup()); }
		(rule__Access__Group__0)
		{ after(grammarAccess.getAccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionList
entryRuleExpressionList
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionListAccess().getAlternatives()); }
		(rule__ExpressionList__Alternatives)
		{ after(grammarAccess.getExpressionListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractRef
entryRuleAbstractRef
:
{ before(grammarAccess.getAbstractRefRule()); }
	 ruleAbstractRef
{ after(grammarAccess.getAbstractRefRule()); } 
	 EOF 
;

// Rule AbstractRef
ruleAbstractRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractRefAccess().getAlternatives()); }
		(rule__AbstractRef__Alternatives)
		{ after(grammarAccess.getAbstractRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitRef
entryRuleUnitRef
:
{ before(grammarAccess.getUnitRefRule()); }
	 ruleUnitRef
{ after(grammarAccess.getUnitRefRule()); } 
	 EOF 
;

// Rule UnitRef
ruleUnitRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitRefAccess().getGroup()); }
		(rule__UnitRef__Group__0)
		{ after(grammarAccess.getUnitRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableRef
entryRuleVariableRef
:
{ before(grammarAccess.getVariableRefRule()); }
	 ruleVariableRef
{ after(grammarAccess.getVariableRefRule()); } 
	 EOF 
;

// Rule VariableRef
ruleVariableRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableRefAccess().getGroup()); }
		(rule__VariableRef__Group__0)
		{ after(grammarAccess.getVariableRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeRef
entryRuleTypeRef
:
{ before(grammarAccess.getTypeRefRule()); }
	 ruleTypeRef
{ after(grammarAccess.getTypeRefRule()); } 
	 EOF 
;

// Rule TypeRef
ruleTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeRefAccess().getAlternatives()); }
		(rule__TypeRef__Alternatives)
		{ after(grammarAccess.getTypeRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeInfo
entryRuleTypeInfo
:
{ before(grammarAccess.getTypeInfoRule()); }
	 ruleTypeInfo
{ after(grammarAccess.getTypeInfoRule()); } 
	 EOF 
;

// Rule TypeInfo
ruleTypeInfo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeInfoAccess().getGroup()); }
		(rule__TypeInfo__Group__0)
		{ after(grammarAccess.getTypeInfoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionRef
entryRuleActionRef
:
{ before(grammarAccess.getActionRefRule()); }
	 ruleActionRef
{ after(grammarAccess.getActionRefRule()); } 
	 EOF 
;

// Rule ActionRef
ruleActionRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionRefAccess().getGroup()); }
		(rule__ActionRef__Group__0)
		{ after(grammarAccess.getActionRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquationRef
entryRuleEquationRef
:
{ before(grammarAccess.getEquationRefRule()); }
	 ruleEquationRef
{ after(grammarAccess.getEquationRefRule()); } 
	 EOF 
;

// Rule EquationRef
ruleEquationRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationRefAccess().getGroup()); }
		(rule__EquationRef__Group__0)
		{ after(grammarAccess.getEquationRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquationDefinition
entryRuleEquationDefinition
:
{ before(grammarAccess.getEquationDefinitionRule()); }
	 ruleEquationDefinition
{ after(grammarAccess.getEquationDefinitionRule()); } 
	 EOF 
;

// Rule EquationDefinition
ruleEquationDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationDefinitionAccess().getAlternatives()); }
		(rule__EquationDefinition__Alternatives)
		{ after(grammarAccess.getEquationDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDefinition
entryRuleTypeDefinition
:
{ before(grammarAccess.getTypeDefinitionRule()); }
	 ruleTypeDefinition
{ after(grammarAccess.getTypeDefinitionRule()); } 
	 EOF 
;

// Rule TypeDefinition
ruleTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefinitionAccess().getAlternatives()); }
		(rule__TypeDefinition__Alternatives)
		{ after(grammarAccess.getTypeDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDefinition
entryRuleVarDefinition
:
{ before(grammarAccess.getVarDefinitionRule()); }
	 ruleVarDefinition
{ after(grammarAccess.getVarDefinitionRule()); } 
	 EOF 
;

// Rule VarDefinition
ruleVarDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDefinitionAccess().getAlternatives()); }
		(rule__VarDefinition__Alternatives)
		{ after(grammarAccess.getVarDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionDefinition
entryRuleActionDefinition
:
{ before(grammarAccess.getActionDefinitionRule()); }
	 ruleActionDefinition
{ after(grammarAccess.getActionDefinitionRule()); } 
	 EOF 
;

// Rule ActionDefinition
ruleActionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionDefinitionAccess().getAlternatives()); }
		(rule__ActionDefinition__Alternatives)
		{ after(grammarAccess.getActionDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltInUnitDefinition
entryRuleBuiltInUnitDefinition
:
{ before(grammarAccess.getBuiltInUnitDefinitionRule()); }
	 ruleBuiltInUnitDefinition
{ after(grammarAccess.getBuiltInUnitDefinitionRule()); } 
	 EOF 
;

// Rule BuiltInUnitDefinition
ruleBuiltInUnitDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltInUnitDefinitionAccess().getGroup()); }
		(rule__BuiltInUnitDefinition__Group__0)
		{ after(grammarAccess.getBuiltInUnitDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltInTypeDefinition
entryRuleBuiltInTypeDefinition
:
{ before(grammarAccess.getBuiltInTypeDefinitionRule()); }
	 ruleBuiltInTypeDefinition
{ after(grammarAccess.getBuiltInTypeDefinitionRule()); } 
	 EOF 
;

// Rule BuiltInTypeDefinition
ruleBuiltInTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltInTypeDefinitionAccess().getGroup()); }
		(rule__BuiltInTypeDefinition__Group__0)
		{ after(grammarAccess.getBuiltInTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltInActionDefinition
entryRuleBuiltInActionDefinition
:
{ before(grammarAccess.getBuiltInActionDefinitionRule()); }
	 ruleBuiltInActionDefinition
{ after(grammarAccess.getBuiltInActionDefinitionRule()); } 
	 EOF 
;

// Rule BuiltInActionDefinition
ruleBuiltInActionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltInActionDefinitionAccess().getGroup()); }
		(rule__BuiltInActionDefinition__Group__0)
		{ after(grammarAccess.getBuiltInActionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltInSkillDefinition
entryRuleBuiltInSkillDefinition
:
{ before(grammarAccess.getBuiltInSkillDefinitionRule()); }
	 ruleBuiltInSkillDefinition
{ after(grammarAccess.getBuiltInSkillDefinitionRule()); } 
	 EOF 
;

// Rule BuiltInSkillDefinition
ruleBuiltInSkillDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltInSkillDefinitionAccess().getGroup()); }
		(rule__BuiltInSkillDefinition__Group__0)
		{ after(grammarAccess.getBuiltInSkillDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltInVarDefinition
entryRuleBuiltInVarDefinition
:
{ before(grammarAccess.getBuiltInVarDefinitionRule()); }
	 ruleBuiltInVarDefinition
{ after(grammarAccess.getBuiltInVarDefinitionRule()); } 
	 EOF 
;

// Rule BuiltInVarDefinition
ruleBuiltInVarDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltInVarDefinitionAccess().getGroup()); }
		(rule__BuiltInVarDefinition__Group__0)
		{ after(grammarAccess.getBuiltInVarDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltInEquationDefinition
entryRuleBuiltInEquationDefinition
:
{ before(grammarAccess.getBuiltInEquationDefinitionRule()); }
	 ruleBuiltInEquationDefinition
{ after(grammarAccess.getBuiltInEquationDefinitionRule()); } 
	 EOF 
;

// Rule BuiltInEquationDefinition
ruleBuiltInEquationDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltInEquationDefinitionAccess().getGroup()); }
		(rule__BuiltInEquationDefinition__Group__0)
		{ after(grammarAccess.getBuiltInEquationDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValid_ID
entryRuleValid_ID
:
{ before(grammarAccess.getValid_IDRule()); }
	 ruleValid_ID
{ after(grammarAccess.getValid_IDRule()); } 
	 EOF 
;

// Rule Valid_ID
ruleValid_ID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValid_IDAccess().getAlternatives()); }
		(rule__Valid_ID__Alternatives)
		{ after(grammarAccess.getValid_IDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
		(rule__TerminalExpression__Alternatives)
		{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getOpAssignment()); }
		(rule__StringLiteral__OpAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getOpAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryAccess().getStandaloneModelParserRuleCall_0()); }
		(ruleStandaloneModel)
		{ after(grammarAccess.getEntryAccess().getStandaloneModelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntryAccess().getStandaloneExpressionParserRuleCall_1()); }
		ruleStandaloneExpression
		{ after(grammarAccess.getEntryAccess().getStandaloneExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEntryAccess().getStandaloneBlockParserRuleCall_2()); }
		ruleStandaloneBlock
		{ after(grammarAccess.getEntryAccess().getStandaloneBlockParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getEntryAccess().getStandaloneExperimentParserRuleCall_3()); }
		ruleStandaloneExperiment
		{ after(grammarAccess.getEntryAccess().getStandaloneExperimentParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneExperimentAccess().getNameValid_IDParserRuleCall_1_0_0()); }
		ruleValid_ID
		{ after(grammarAccess.getStandaloneExperimentAccess().getNameValid_IDParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStandaloneExperimentAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getStandaloneExperimentAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneExperimentAccess().getBlockAssignment_4_0()); }
		(rule__StandaloneExperiment__BlockAssignment_4_0)
		{ after(grammarAccess.getStandaloneExperimentAccess().getBlockAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getStandaloneExperimentAccess().getSemicolonKeyword_4_1()); }
		';'
		{ after(grammarAccess.getStandaloneExperimentAccess().getSemicolonKeyword_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Switch__StatementsAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getB_SwitchAccess().getStatementsS_DefaultParserRuleCall_2_0_0()); }
		ruleS_Default
		{ after(grammarAccess.getB_SwitchAccess().getStatementsS_DefaultParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getB_SwitchAccess().getStatementsS_MatchParserRuleCall_2_0_1()); }
		ruleS_Match
		{ after(grammarAccess.getB_SwitchAccess().getStatementsS_MatchParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives_0()); }
		(rule__Statement__Alternatives_0)
		{ after(grammarAccess.getStatementAccess().getAlternatives_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getS_DisplayParserRuleCall_1()); }
		ruleS_Display
		{ after(grammarAccess.getStatementAccess().getS_DisplayParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getS_DeclarationParserRuleCall_0_0()); }
		(ruleS_Declaration)
		{ after(grammarAccess.getStatementAccess().getS_DeclarationParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives_0_1()); }
		(rule__Statement__Alternatives_0_1)
		{ after(grammarAccess.getStatementAccess().getAlternatives_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getS_AssignmentParserRuleCall_0_1_0()); }
		(ruleS_Assignment)
		{ after(grammarAccess.getStatementAccess().getS_AssignmentParserRuleCall_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getS_SwitchParserRuleCall_0_1_1()); }
		ruleS_Switch
		{ after(grammarAccess.getStatementAccess().getS_SwitchParserRuleCall_0_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getS_BreakParserRuleCall_0_1_2()); }
		ruleS_Break
		{ after(grammarAccess.getStatementAccess().getS_BreakParserRuleCall_0_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getS_DoParserRuleCall_0_1_3()); }
		ruleS_Do
		{ after(grammarAccess.getStatementAccess().getS_DoParserRuleCall_0_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getS_ReturnParserRuleCall_0_1_4()); }
		ruleS_Return
		{ after(grammarAccess.getStatementAccess().getS_ReturnParserRuleCall_0_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getS_SolveParserRuleCall_0_1_5()); }
		ruleS_Solve
		{ after(grammarAccess.getStatementAccess().getS_SolveParserRuleCall_0_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getS_IfParserRuleCall_0_1_6()); }
		ruleS_If
		{ after(grammarAccess.getStatementAccess().getS_IfParserRuleCall_0_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getS_TryParserRuleCall_0_1_7()); }
		ruleS_Try
		{ after(grammarAccess.getStatementAccess().getS_TryParserRuleCall_0_1_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getS_1Expr_Facets_BlockOrEndParserRuleCall_0_1_8()); }
		ruleS_1Expr_Facets_BlockOrEnd
		{ after(grammarAccess.getStatementAccess().getS_1Expr_Facets_BlockOrEndParserRuleCall_0_1_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getS_EquationsParserRuleCall_0_1_9()); }
		ruleS_Equations
		{ after(grammarAccess.getStatementAccess().getS_EquationsParserRuleCall_0_1_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getBlockAssignment_3_0()); }
		(rule__S_1Expr_Facets_BlockOrEnd__BlockAssignment_3_0)
		{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getBlockAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getSemicolonKeyword_3_1()); }
		';'
		{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getSemicolonKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Section__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SectionAccess().getS_GlobalParserRuleCall_0()); }
		ruleS_Global
		{ after(grammarAccess.getS_SectionAccess().getS_GlobalParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_SectionAccess().getS_SpeciesParserRuleCall_1()); }
		ruleS_Species
		{ after(grammarAccess.getS_SectionAccess().getS_SpeciesParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getS_SectionAccess().getS_ExperimentParserRuleCall_2()); }
		ruleS_Experiment
		{ after(grammarAccess.getS_SectionAccess().getS_ExperimentParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Global__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_GlobalAccess().getBlockAssignment_2_0()); }
		(rule__S_Global__BlockAssignment_2_0)
		{ after(grammarAccess.getS_GlobalAccess().getBlockAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_GlobalAccess().getSemicolonKeyword_2_1()); }
		';'
		{ after(grammarAccess.getS_GlobalAccess().getSemicolonKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SpeciesAccess().getBlockAssignment_3_0()); }
		(rule__S_Species__BlockAssignment_3_0)
		{ after(grammarAccess.getS_SpeciesAccess().getBlockAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_SpeciesAccess().getSemicolonKeyword_3_1()); }
		';'
		{ after(grammarAccess.getS_SpeciesAccess().getSemicolonKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ExperimentAccess().getNameValid_IDParserRuleCall_1_0_0()); }
		ruleValid_ID
		{ after(grammarAccess.getS_ExperimentAccess().getNameValid_IDParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_ExperimentAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getS_ExperimentAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ExperimentAccess().getBlockAssignment_3_0()); }
		(rule__S_Experiment__BlockAssignment_3_0)
		{ after(grammarAccess.getS_ExperimentAccess().getBlockAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_ExperimentAccess().getSemicolonKeyword_3_1()); }
		';'
		{ after(grammarAccess.getS_ExperimentAccess().getSemicolonKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DoAccess().getBlockAssignment_3_0()); }
		(rule__S_Do__BlockAssignment_3_0)
		{ after(grammarAccess.getS_DoAccess().getBlockAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_DoAccess().getSemicolonKeyword_3_1()); }
		';'
		{ after(grammarAccess.getS_DoAccess().getSemicolonKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__ElseAlternatives_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_IfAccess().getElseS_IfParserRuleCall_3_1_0_0()); }
		ruleS_If
		{ after(grammarAccess.getS_IfAccess().getElseS_IfParserRuleCall_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_IfAccess().getElseBlockParserRuleCall_3_1_0_1()); }
		ruleBlock
		{ after(grammarAccess.getS_IfAccess().getElseBlockParserRuleCall_3_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Match__KeyAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_MatchAccess().getKeyMatchKeyword_0_0_0()); }
		'match'
		{ after(grammarAccess.getS_MatchAccess().getKeyMatchKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_MatchAccess().getKeyMatch_oneKeyword_0_0_1()); }
		'match_one'
		{ after(grammarAccess.getS_MatchAccess().getKeyMatch_oneKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getS_MatchAccess().getKeyMatch_betweenKeyword_0_0_2()); }
		'match_between'
		{ after(grammarAccess.getS_MatchAccess().getKeyMatch_betweenKeyword_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getS_MatchAccess().getKeyMatch_regexKeyword_0_0_3()); }
		'match_regex'
		{ after(grammarAccess.getS_MatchAccess().getKeyMatch_regexKeyword_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DeclarationAccess().getS_DefinitionParserRuleCall_0()); }
		(ruleS_Definition)
		{ after(grammarAccess.getS_DeclarationAccess().getS_DefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_DeclarationAccess().getS_SpeciesParserRuleCall_1()); }
		ruleS_Species
		{ after(grammarAccess.getS_DeclarationAccess().getS_SpeciesParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getS_DeclarationAccess().getS_ReflexParserRuleCall_2()); }
		ruleS_Reflex
		{ after(grammarAccess.getS_DeclarationAccess().getS_ReflexParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getS_DeclarationAccess().getS_ActionParserRuleCall_3()); }
		ruleS_Action
		{ after(grammarAccess.getS_DeclarationAccess().getS_ActionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getS_DeclarationAccess().getS_VarParserRuleCall_4()); }
		ruleS_Var
		{ after(grammarAccess.getS_DeclarationAccess().getS_VarParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getS_DeclarationAccess().getS_LoopParserRuleCall_5()); }
		ruleS_Loop
		{ after(grammarAccess.getS_DeclarationAccess().getS_LoopParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DefinitionAccess().getNameValid_IDParserRuleCall_1_0_0()); }
		ruleValid_ID
		{ after(grammarAccess.getS_DefinitionAccess().getNameValid_IDParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_DefinitionAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getS_DefinitionAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DefinitionAccess().getBlockAssignment_4_0()); }
		(rule__S_Definition__BlockAssignment_4_0)
		{ after(grammarAccess.getS_DefinitionAccess().getBlockAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_DefinitionAccess().getSemicolonKeyword_4_1()); }
		';'
		{ after(grammarAccess.getS_DefinitionAccess().getSemicolonKeyword_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ActionAccess().getBlockAssignment_5_0()); }
		(rule__S_Action__BlockAssignment_5_0)
		{ after(grammarAccess.getS_ActionAccess().getBlockAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_ActionAccess().getSemicolonKeyword_5_1()); }
		';'
		{ after(grammarAccess.getS_ActionAccess().getSemicolonKeyword_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Assignment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_AssignmentAccess().getS_DirectAssignmentParserRuleCall_0()); }
		ruleS_DirectAssignment
		{ after(grammarAccess.getS_AssignmentAccess().getS_DirectAssignmentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_AssignmentAccess().getS_SetParserRuleCall_1()); }
		ruleS_Set
		{ after(grammarAccess.getS_AssignmentAccess().getS_SetParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SetAccess().getValueKeyword_2_0()); }
		'value:'
		{ after(grammarAccess.getS_SetAccess().getValueKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_SetAccess().getLessThanSignHyphenMinusKeyword_2_1()); }
		'<-'
		{ after(grammarAccess.getS_SetAccess().getLessThanSignHyphenMinusKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equation__ExprAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_EquationAccess().getExprFunctionParserRuleCall_0_0_0()); }
		ruleFunction
		{ after(grammarAccess.getS_EquationAccess().getExprFunctionParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_EquationAccess().getExprVariableRefParserRuleCall_0_0_1()); }
		ruleVariableRef
		{ after(grammarAccess.getS_EquationAccess().getExprVariableRefParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_EquationsAccess().getGroup_3_0()); }
		(rule__S_Equations__Group_3_0__0)
		{ after(grammarAccess.getS_EquationsAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_EquationsAccess().getSemicolonKeyword_3_1()); }
		';'
		{ after(grammarAccess.getS_EquationsAccess().getSemicolonKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SolveAccess().getBlockAssignment_3_0()); }
		(rule__S_Solve__BlockAssignment_3_0)
		{ after(grammarAccess.getS_SolveAccess().getBlockAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_SolveAccess().getSemicolonKeyword_3_1()); }
		';'
		{ after(grammarAccess.getS_SolveAccess().getSemicolonKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DisplayAccess().getNameValid_IDParserRuleCall_1_0_0()); }
		ruleValid_ID
		{ after(grammarAccess.getS_DisplayAccess().getNameValid_IDParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_DisplayAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getS_DisplayAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DisplayLayer__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DisplayLayerAccess().getS_SpeciesLayerParserRuleCall_0()); }
		(ruleS_SpeciesLayer)
		{ after(grammarAccess.getS_DisplayLayerAccess().getS_SpeciesLayerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_DisplayLayerAccess().getAlternatives_1()); }
		(rule__S_DisplayLayer__Alternatives_1)
		{ after(grammarAccess.getS_DisplayLayerAccess().getAlternatives_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DisplayLayer__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DisplayLayerAccess().getS_ImageLayerParserRuleCall_1_0()); }
		(ruleS_ImageLayer)
		{ after(grammarAccess.getS_DisplayLayerAccess().getS_ImageLayerParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_DisplayLayerAccess().getStatementParserRuleCall_1_1()); }
		ruleStatement
		{ after(grammarAccess.getS_DisplayLayerAccess().getStatementParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SpeciesLayerAccess().getBlockAssignment_3_0()); }
		(rule__S_SpeciesLayer__BlockAssignment_3_0)
		{ after(grammarAccess.getS_SpeciesLayerAccess().getBlockAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getS_SpeciesLayerAccess().getSemicolonKeyword_3_1()); }
		';'
		{ after(grammarAccess.getS_SpeciesLayerAccess().getSemicolonKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Species__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getK_SpeciesAccess().getSpeciesKeyword_0()); }
		'species'
		{ after(grammarAccess.getK_SpeciesAccess().getSpeciesKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getK_SpeciesAccess().getGridKeyword_1()); }
		'grid'
		{ after(grammarAccess.getK_SpeciesAccess().getGridKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__K_1Expr_Facets_BlockOrEnd__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getK_LayerParserRuleCall_0()); }
		ruleK_Layer
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getK_LayerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getAskKeyword_1()); }
		'ask'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getAskKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getReleaseKeyword_2()); }
		'release'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getReleaseKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getCaptureKeyword_3()); }
		'capture'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getCaptureKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getCreateKeyword_4()); }
		'create'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getCreateKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getWriteKeyword_5()); }
		'write'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getWriteKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getErrorKeyword_6()); }
		'error'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getErrorKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getWarnKeyword_7()); }
		'warn'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getWarnKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getExceptionKeyword_8()); }
		'exception'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getExceptionKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getSaveKeyword_9()); }
		'save'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getSaveKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getAssertKeyword_10()); }
		'assert'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getAssertKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getInspectKeyword_11()); }
		'inspect'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getInspectKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getBrowseKeyword_12()); }
		'browse'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getBrowseKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getRestoreKeyword_13()); }
		'restore'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getRestoreKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getDrawKeyword_14()); }
		'draw'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getDrawKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getUsingKeyword_15()); }
		'using'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getUsingKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getPutKeyword_16()); }
		'put'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getPutKeyword_16()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getAddKeyword_17()); }
		'add'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getAddKeyword_17()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getRemoveKeyword_18()); }
		'remove'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getRemoveKeyword_18()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getParameterKeyword_19()); }
		'parameter'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getParameterKeyword_19()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getStatusKeyword_20()); }
		'status'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getStatusKeyword_20()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getHighlightKeyword_21()); }
		'highlight'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getHighlightKeyword_21()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getFocus_onKeyword_22()); }
		'focus_on'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getFocus_onKeyword_22()); }
	)
	|
	(
		{ before(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getLayoutKeyword_23()); }
		'layout'
		{ after(grammarAccess.getK_1Expr_Facets_BlockOrEndAccess().getLayoutKeyword_23()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Layer__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getK_LayerAccess().getLightKeyword_0()); }
		'light'
		{ after(grammarAccess.getK_LayerAccess().getLightKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getCameraKeyword_1()); }
		'camera'
		{ after(grammarAccess.getK_LayerAccess().getCameraKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getTextKeyword_2()); }
		'text'
		{ after(grammarAccess.getK_LayerAccess().getTextKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getImage_layerKeyword_3()); }
		'image_layer'
		{ after(grammarAccess.getK_LayerAccess().getImage_layerKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getDataKeyword_4()); }
		'data'
		{ after(grammarAccess.getK_LayerAccess().getDataKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getChartKeyword_5()); }
		'chart'
		{ after(grammarAccess.getK_LayerAccess().getChartKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getAgentsKeyword_6()); }
		'agents'
		{ after(grammarAccess.getK_LayerAccess().getAgentsKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getGraphicsKeyword_7()); }
		'graphics'
		{ after(grammarAccess.getK_LayerAccess().getGraphicsKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getDisplay_populationKeyword_8()); }
		'display_population'
		{ after(grammarAccess.getK_LayerAccess().getDisplay_populationKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getDisplay_gridKeyword_9()); }
		'display_grid'
		{ after(grammarAccess.getK_LayerAccess().getDisplay_gridKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getEventKeyword_10()); }
		'event'
		{ after(grammarAccess.getK_LayerAccess().getEventKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getOverlayKeyword_11()); }
		'overlay'
		{ after(grammarAccess.getK_LayerAccess().getOverlayKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getDatalistKeyword_12()); }
		'datalist'
		{ after(grammarAccess.getK_LayerAccess().getDatalistKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getK_LayerAccess().getMeshKeyword_13()); }
		'mesh'
		{ after(grammarAccess.getK_LayerAccess().getMeshKeyword_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Do__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getK_DoAccess().getDoKeyword_0()); }
		'do'
		{ after(grammarAccess.getK_DoAccess().getDoKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getK_DoAccess().getInvokeKeyword_1()); }
		'invoke'
		{ after(grammarAccess.getK_DoAccess().getInvokeKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Var__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getK_VarAccess().getVarKeyword_0()); }
		'var'
		{ after(grammarAccess.getK_VarAccess().getVarKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getK_VarAccess().getConstKeyword_1()); }
		'const'
		{ after(grammarAccess.getK_VarAccess().getConstKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getK_VarAccess().getLetKeyword_2()); }
		'let'
		{ after(grammarAccess.getK_VarAccess().getLetKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getK_VarAccess().getArgKeyword_3()); }
		'arg'
		{ after(grammarAccess.getK_VarAccess().getArgKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Reflex__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getK_ReflexAccess().getInitKeyword_0()); }
		'init'
		{ after(grammarAccess.getK_ReflexAccess().getInitKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getK_ReflexAccess().getReflexKeyword_1()); }
		'reflex'
		{ after(grammarAccess.getK_ReflexAccess().getReflexKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getK_ReflexAccess().getAspectKeyword_2()); }
		'aspect'
		{ after(grammarAccess.getK_ReflexAccess().getAspectKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Assignment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getK_AssignmentAccess().getLessThanSignHyphenMinusKeyword_0()); }
		'<-'
		{ after(grammarAccess.getK_AssignmentAccess().getLessThanSignHyphenMinusKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getK_AssignmentAccess().getLessThanSignLessThanSignKeyword_1()); }
		'<<'
		{ after(grammarAccess.getK_AssignmentAccess().getLessThanSignLessThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getK_AssignmentAccess().getGroup_2()); }
		(rule__K_Assignment__Group_2__0)
		{ after(grammarAccess.getK_AssignmentAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getK_AssignmentAccess().getLessThanSignLessThanSignPlusSignKeyword_3()); }
		'<<+'
		{ after(grammarAccess.getK_AssignmentAccess().getLessThanSignLessThanSignPlusSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getK_AssignmentAccess().getGroup_4()); }
		(rule__K_Assignment__Group_4__0)
		{ after(grammarAccess.getK_AssignmentAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getK_AssignmentAccess().getPlusSignLessThanSignHyphenMinusKeyword_5()); }
		'+<-'
		{ after(grammarAccess.getK_AssignmentAccess().getPlusSignLessThanSignHyphenMinusKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getK_AssignmentAccess().getLessThanSignPlusSignKeyword_6()); }
		'<+'
		{ after(grammarAccess.getK_AssignmentAccess().getLessThanSignPlusSignKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getK_AssignmentAccess().getGreaterThanSignHyphenMinusKeyword_7()); }
		'>-'
		{ after(grammarAccess.getK_AssignmentAccess().getGreaterThanSignHyphenMinusKeyword_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFacetAccess().getF_ActionParserRuleCall_0()); }
		ruleF_Action
		{ after(grammarAccess.getFacetAccess().getF_ActionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFacetAccess().getF_DefinitionParserRuleCall_1()); }
		ruleF_Definition
		{ after(grammarAccess.getFacetAccess().getF_DefinitionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFacetAccess().getF_RegularParserRuleCall_2()); }
		ruleF_Regular
		{ after(grammarAccess.getFacetAccess().getF_RegularParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFacetAccess().getF_TypeParserRuleCall_3()); }
		ruleF_Type
		{ after(grammarAccess.getFacetAccess().getF_TypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getFacetAccess().getF_VarParserRuleCall_4()); }
		ruleF_Var
		{ after(grammarAccess.getFacetAccess().getF_VarParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getFacetAccess().getF_FunctionParserRuleCall_5()); }
		ruleF_Function
		{ after(grammarAccess.getFacetAccess().getF_FunctionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Regular__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_RegularAccess().getKeyAssignment_0_0()); }
		(rule__F_Regular__KeyAssignment_0_0)
		{ after(grammarAccess.getF_RegularAccess().getKeyAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getF_RegularAccess().getKeyAssignment_0_1()); }
		(rule__F_Regular__KeyAssignment_0_1)
		{ after(grammarAccess.getF_RegularAccess().getKeyAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getF_RegularAccess().getKeyAssignment_0_2()); }
		(rule__F_Regular__KeyAssignment_0_2)
		{ after(grammarAccess.getF_RegularAccess().getKeyAssignment_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Definition__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_DefinitionAccess().getNameValid_IDParserRuleCall_1_0_0()); }
		ruleValid_ID
		{ after(grammarAccess.getF_DefinitionAccess().getNameValid_IDParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getF_DefinitionAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getF_DefinitionAccess().getNameSTRINGTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_FunctionAccess().getGroup_1_0()); }
		(rule__F_Function__Group_1_0__0)
		{ after(grammarAccess.getF_FunctionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getF_FunctionAccess().getGroup_1_1()); }
		(rule__F_Function__Group_1_1__0)
		{ after(grammarAccess.getF_FunctionAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Type__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_TypeAccess().getGroup_1_0()); }
		(rule__F_Type__Group_1_0__0)
		{ after(grammarAccess.getF_TypeAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getF_TypeAccess().getExprAssignment_1_1()); }
		(rule__F_Type__ExprAssignment_1_1)
		{ after(grammarAccess.getF_TypeAccess().getExprAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Action__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_ActionAccess().getExprAssignment_1_0()); }
		(rule__F_Action__ExprAssignment_1_0)
		{ after(grammarAccess.getF_ActionAccess().getExprAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getF_ActionAccess().getBlockAssignment_1_1()); }
		(rule__F_Action__BlockAssignment_1_1)
		{ after(grammarAccess.getF_ActionAccess().getBlockAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FK_Definition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFK_DefinitionAccess().getNameKeyword_0()); }
		'name:'
		{ after(grammarAccess.getFK_DefinitionAccess().getNameKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFK_DefinitionAccess().getReturnsKeyword_1()); }
		'returns:'
		{ after(grammarAccess.getFK_DefinitionAccess().getReturnsKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FK_Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFK_TypeAccess().getAsKeyword_0()); }
		'as:'
		{ after(grammarAccess.getFK_TypeAccess().getAsKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFK_TypeAccess().getOfKeyword_1()); }
		'of:'
		{ after(grammarAccess.getFK_TypeAccess().getOfKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getFK_TypeAccess().getParentKeyword_2()); }
		'parent:'
		{ after(grammarAccess.getFK_TypeAccess().getParentKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getFK_TypeAccess().getSpeciesKeyword_3()); }
		'species:'
		{ after(grammarAccess.getFK_TypeAccess().getSpeciesKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getFK_TypeAccess().getTypeKeyword_4()); }
		'type:'
		{ after(grammarAccess.getFK_TypeAccess().getTypeKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FK_Special__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFK_SpecialAccess().getCameraKeyword_0()); }
		'camera:'
		{ after(grammarAccess.getFK_SpecialAccess().getCameraKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getDataKeyword_1()); }
		'data:'
		{ after(grammarAccess.getFK_SpecialAccess().getDataKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getGroup_2()); }
		(rule__FK_Special__Group_2__0)
		{ after(grammarAccess.getFK_SpecialAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getConstKeyword_3()); }
		'const:'
		{ after(grammarAccess.getFK_SpecialAccess().getConstKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getValueKeyword_4()); }
		'value:'
		{ after(grammarAccess.getFK_SpecialAccess().getValueKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getTopologyKeyword_5()); }
		'topology:'
		{ after(grammarAccess.getFK_SpecialAccess().getTopologyKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getItemKeyword_6()); }
		'item:'
		{ after(grammarAccess.getFK_SpecialAccess().getItemKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getInitKeyword_7()); }
		'init:'
		{ after(grammarAccess.getFK_SpecialAccess().getInitKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getMessageKeyword_8()); }
		'message:'
		{ after(grammarAccess.getFK_SpecialAccess().getMessageKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getControlKeyword_9()); }
		'control:'
		{ after(grammarAccess.getFK_SpecialAccess().getControlKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getLayoutKeyword_10()); }
		'layout:'
		{ after(grammarAccess.getFK_SpecialAccess().getLayoutKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getEnvironmentKeyword_11()); }
		'environment:'
		{ after(grammarAccess.getFK_SpecialAccess().getEnvironmentKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getTextKeyword_12()); }
		'text:'
		{ after(grammarAccess.getFK_SpecialAccess().getTextKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getImageKeyword_13()); }
		'image:'
		{ after(grammarAccess.getFK_SpecialAccess().getImageKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getUsingKeyword_14()); }
		'using:'
		{ after(grammarAccess.getFK_SpecialAccess().getUsingKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getParameterKeyword_15()); }
		'parameter:'
		{ after(grammarAccess.getFK_SpecialAccess().getParameterKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getAspectKeyword_16()); }
		'aspect:'
		{ after(grammarAccess.getFK_SpecialAccess().getAspectKeyword_16()); }
	)
	|
	(
		{ before(grammarAccess.getFK_SpecialAccess().getLightKeyword_17()); }
		'light:'
		{ after(grammarAccess.getFK_SpecialAccess().getLightKeyword_17()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FK_Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFK_ActionAccess().getActionKeyword_0()); }
		'action:'
		{ after(grammarAccess.getFK_ActionAccess().getActionKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFK_ActionAccess().getOn_changeKeyword_1()); }
		'on_change:'
		{ after(grammarAccess.getFK_ActionAccess().getOn_changeKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getArgumentPairParserRuleCall_0()); }
		(ruleArgumentPair)
		{ after(grammarAccess.getExpressionAccess().getArgumentPairParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPairParserRuleCall_1()); }
		rulePair
		{ after(grammarAccess.getExpressionAccess().getPairParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentPairAccess().getGroup_0_0_0()); }
		(rule__ArgumentPair__Group_0_0_0__0)
		{ after(grammarAccess.getArgumentPairAccess().getGroup_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentPairAccess().getGroup_0_0_1()); }
		(rule__ArgumentPair__Group_0_0_1__0)
		{ after(grammarAccess.getArgumentPairAccess().getGroup_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__OpAlternatives_0_0_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentPairAccess().getOpFK_DefinitionParserRuleCall_0_0_1_0_0_0()); }
		ruleFK_Definition
		{ after(grammarAccess.getArgumentPairAccess().getOpFK_DefinitionParserRuleCall_0_0_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentPairAccess().getOpFK_TypeParserRuleCall_0_0_1_0_0_1()); }
		ruleFK_Type
		{ after(grammarAccess.getArgumentPairAccess().getOpFK_TypeParserRuleCall_0_0_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentPairAccess().getOpFK_SpecialParserRuleCall_0_0_1_0_0_2()); }
		ruleFK_Special
		{ after(grammarAccess.getArgumentPairAccess().getOpFK_SpecialParserRuleCall_0_0_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentPairAccess().getOpFK_ActionParserRuleCall_0_0_1_0_0_3()); }
		ruleFK_Action
		{ after(grammarAccess.getArgumentPairAccess().getOpFK_ActionParserRuleCall_0_0_1_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentPairAccess().getOpFK_VarParserRuleCall_0_0_1_0_0_4()); }
		ruleFK_Var
		{ after(grammarAccess.getArgumentPairAccess().getOpFK_VarParserRuleCall_0_0_1_0_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastAccess().getRightAssignment_1_1_0()); }
		(rule__Cast__RightAssignment_1_1_0)
		{ after(grammarAccess.getCastAccess().getRightAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCastAccess().getGroup_1_1_1()); }
		(rule__Cast__Group_1_1_1__0)
		{ after(grammarAccess.getCastAccess().getGroup_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_0()); }
		'!='
		{ after(grammarAccess.getComparisonAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpEqualsSignKeyword_1_0_1_0_1()); }
		'='
		{ after(grammarAccess.getComparisonAccess().getOpEqualsSignKeyword_1_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_2()); }
		'>='
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_3()); }
		'<='
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_0_1_0_4()); }
		'<'
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_0_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_0_1_0_5()); }
		'>'
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_0_1_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAlternatives_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0()); }
		'+'
		{ after(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); }
		'-'
		{ after(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAlternatives_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1()); }
		'/'
		{ after(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__OpAlternatives_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getOpDegreeSignKeyword_1_0_1_0_0()); }
		'\u00B0'
		{ after(grammarAccess.getUnitAccess().getOpDegreeSignKeyword_1_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getOpNumberSignKeyword_1_0_1_0_1()); }
		'#'
		{ after(grammarAccess.getUnitAccess().getOpNumberSignKeyword_1_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryAccess().getAccessParserRuleCall_0()); }
		ruleAccess
		{ after(grammarAccess.getUnaryAccess().getAccessParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryAccess().getGroup_1()); }
		(rule__Unary__Group_1__0)
		{ after(grammarAccess.getUnaryAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryAccess().getGroup_1_1_0()); }
		(rule__Unary__Group_1_1_0__0)
		{ after(grammarAccess.getUnaryAccess().getGroup_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryAccess().getGroup_1_1_1()); }
		(rule__Unary__Group_1_1_1__0)
		{ after(grammarAccess.getUnaryAccess().getGroup_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__OpAlternatives_1_1_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryAccess().getOpDegreeSignKeyword_1_1_0_0_0_0()); }
		'\u00B0'
		{ after(grammarAccess.getUnaryAccess().getOpDegreeSignKeyword_1_1_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryAccess().getOpNumberSignKeyword_1_1_0_0_0_1()); }
		'#'
		{ after(grammarAccess.getUnaryAccess().getOpNumberSignKeyword_1_1_0_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__OpAlternatives_1_1_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryAccess().getOpHyphenMinusKeyword_1_1_1_0_0_0()); }
		'-'
		{ after(grammarAccess.getUnaryAccess().getOpHyphenMinusKeyword_1_1_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryAccess().getOpExclamationMarkKeyword_1_1_1_0_0_1()); }
		'!'
		{ after(grammarAccess.getUnaryAccess().getOpExclamationMarkKeyword_1_1_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryAccess().getOpMyKeyword_1_1_1_0_0_2()); }
		'my'
		{ after(grammarAccess.getUnaryAccess().getOpMyKeyword_1_1_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryAccess().getOpTheKeyword_1_1_1_0_0_3()); }
		'the'
		{ after(grammarAccess.getUnaryAccess().getOpTheKeyword_1_1_1_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryAccess().getOpNotKeyword_1_1_1_0_0_4()); }
		'not'
		{ after(grammarAccess.getUnaryAccess().getOpNotKeyword_1_1_1_0_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessAccess().getGroup_1_1_0()); }
		(rule__Access__Group_1_1_0__0)
		{ after(grammarAccess.getAccessAccess().getGroup_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAccessAccess().getGroup_1_1_1()); }
		(rule__Access__Group_1_1_1__0)
		{ after(grammarAccess.getAccessAccess().getGroup_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__RightAlternatives_1_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessAccess().getRightAbstractRefParserRuleCall_1_1_1_1_0_0()); }
		ruleAbstractRef
		{ after(grammarAccess.getAccessAccess().getRightAbstractRefParserRuleCall_1_1_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAccessAccess().getRightStringLiteralParserRuleCall_1_1_1_1_0_1()); }
		ruleStringLiteral
		{ after(grammarAccess.getAccessAccess().getRightStringLiteralParserRuleCall_1_1_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getTerminalExpressionParserRuleCall_0()); }
		ruleTerminalExpression
		{ after(grammarAccess.getPrimaryAccess().getTerminalExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAbstractRefParserRuleCall_1()); }
		ruleAbstractRef
		{ after(grammarAccess.getPrimaryAccess().getAbstractRefParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
		(rule__Primary__Group_3__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_4()); }
		(rule__Primary__Group_4__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getGroup_0()); }
		(rule__ExpressionList__Group_0__0)
		{ after(grammarAccess.getExpressionListAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionListAccess().getGroup_1()); }
		(rule__ExpressionList__Group_1__0)
		{ after(grammarAccess.getExpressionListAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getBuiltInFacetKeyAssignment_1_0()); }
		(rule__Parameter__BuiltInFacetKeyAssignment_1_0)
		{ after(grammarAccess.getParameterAccess().getBuiltInFacetKeyAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getGroup_1_1()); }
		(rule__Parameter__Group_1_1__0)
		{ after(grammarAccess.getParameterAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__BuiltInFacetKeyAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_DefinitionParserRuleCall_1_0_0_0()); }
		ruleFK_Definition
		{ after(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_DefinitionParserRuleCall_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_TypeParserRuleCall_1_0_0_1()); }
		ruleFK_Type
		{ after(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_TypeParserRuleCall_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_SpecialParserRuleCall_1_0_0_2()); }
		ruleFK_Special
		{ after(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_SpecialParserRuleCall_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_ActionParserRuleCall_1_0_0_3()); }
		ruleFK_Action
		{ after(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_ActionParserRuleCall_1_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_VarParserRuleCall_1_0_0_4()); }
		ruleFK_Var
		{ after(grammarAccess.getParameterAccess().getBuiltInFacetKeyFK_VarParserRuleCall_1_0_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractRefAccess().getFunctionParserRuleCall_0()); }
		(ruleFunction)
		{ after(grammarAccess.getAbstractRefAccess().getFunctionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRefAccess().getVariableRefParserRuleCall_1()); }
		ruleVariableRef
		{ after(grammarAccess.getAbstractRefAccess().getVariableRefParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeRefAccess().getGroup_0()); }
		(rule__TypeRef__Group_0__0)
		{ after(grammarAccess.getTypeRefAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeRefAccess().getGroup_1()); }
		(rule__TypeRef__Group_1__0)
		{ after(grammarAccess.getTypeRefAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeRefAccess().getGroup_2()); }
		(rule__TypeRef__Group_2__0)
		{ after(grammarAccess.getTypeRefAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationDefinition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationDefinitionAccess().getS_EquationsParserRuleCall_0()); }
		ruleS_Equations
		{ after(grammarAccess.getEquationDefinitionAccess().getS_EquationsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEquationDefinitionAccess().getBuiltInEquationDefinitionParserRuleCall_1()); }
		ruleBuiltInEquationDefinition
		{ after(grammarAccess.getEquationDefinitionAccess().getBuiltInEquationDefinitionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefinitionAccess().getS_SpeciesParserRuleCall_0()); }
		ruleS_Species
		{ after(grammarAccess.getTypeDefinitionAccess().getS_SpeciesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDefinitionAccess().getBuiltInTypeDefinitionParserRuleCall_1()); }
		ruleBuiltInTypeDefinition
		{ after(grammarAccess.getTypeDefinitionAccess().getBuiltInTypeDefinitionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDefinition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDefinitionAccess().getS_DeclarationParserRuleCall_0()); }
		(ruleS_Declaration)
		{ after(grammarAccess.getVarDefinitionAccess().getS_DeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDefinitionAccess().getAlternatives_1()); }
		(rule__VarDefinition__Alternatives_1)
		{ after(grammarAccess.getVarDefinitionAccess().getAlternatives_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDefinition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDefinitionAccess().getStandaloneModelParserRuleCall_1_0()); }
		ruleStandaloneModel
		{ after(grammarAccess.getVarDefinitionAccess().getStandaloneModelParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDefinitionAccess().getArgumentDefinitionParserRuleCall_1_1()); }
		ruleArgumentDefinition
		{ after(grammarAccess.getVarDefinitionAccess().getArgumentDefinitionParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getVarDefinitionAccess().getF_DefinitionParserRuleCall_1_2()); }
		ruleF_Definition
		{ after(grammarAccess.getVarDefinitionAccess().getF_DefinitionParserRuleCall_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getVarDefinitionAccess().getBuiltInVarDefinitionParserRuleCall_1_3()); }
		ruleBuiltInVarDefinition
		{ after(grammarAccess.getVarDefinitionAccess().getBuiltInVarDefinitionParserRuleCall_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getVarDefinitionAccess().getImportParserRuleCall_1_4()); }
		ruleImport
		{ after(grammarAccess.getVarDefinitionAccess().getImportParserRuleCall_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getVarDefinitionAccess().getS_ExperimentParserRuleCall_1_5()); }
		ruleS_Experiment
		{ after(grammarAccess.getVarDefinitionAccess().getS_ExperimentParserRuleCall_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDefinition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionDefinitionAccess().getS_ActionParserRuleCall_0()); }
		ruleS_Action
		{ after(grammarAccess.getActionDefinitionAccess().getS_ActionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionDefinitionAccess().getBuiltInActionDefinitionParserRuleCall_1()); }
		ruleBuiltInActionDefinition
		{ after(grammarAccess.getActionDefinitionAccess().getBuiltInActionDefinitionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionDefinitionAccess().getS_DefinitionParserRuleCall_2()); }
		ruleS_Definition
		{ after(grammarAccess.getActionDefinitionAccess().getS_DefinitionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionDefinitionAccess().getTypeDefinitionParserRuleCall_3()); }
		ruleTypeDefinition
		{ after(grammarAccess.getActionDefinitionAccess().getTypeDefinitionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valid_ID__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValid_IDAccess().getK_SpeciesParserRuleCall_0()); }
		ruleK_Species
		{ after(grammarAccess.getValid_IDAccess().getK_SpeciesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValid_IDAccess().getK_ImageLayerParserRuleCall_1()); }
		ruleK_ImageLayer
		{ after(grammarAccess.getValid_IDAccess().getK_ImageLayerParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValid_IDAccess().getK_DoParserRuleCall_2()); }
		ruleK_Do
		{ after(grammarAccess.getValid_IDAccess().getK_DoParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValid_IDAccess().getK_ReflexParserRuleCall_3()); }
		ruleK_Reflex
		{ after(grammarAccess.getValid_IDAccess().getK_ReflexParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getValid_IDAccess().getK_VarParserRuleCall_4()); }
		ruleK_Var
		{ after(grammarAccess.getValid_IDAccess().getK_VarParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getValid_IDAccess().getK_1Expr_Facets_BlockOrEndParserRuleCall_5()); }
		ruleK_1Expr_Facets_BlockOrEnd
		{ after(grammarAccess.getValid_IDAccess().getK_1Expr_Facets_BlockOrEndParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getValid_IDAccess().getK_EquationsParserRuleCall_6()); }
		ruleK_Equations
		{ after(grammarAccess.getValid_IDAccess().getK_EquationsParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getValid_IDAccess().getIDTerminalRuleCall_7()); }
		RULE_ID
		{ after(grammarAccess.getValid_IDAccess().getIDTerminalRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getValid_IDAccess().getK_DefaultParserRuleCall_8()); }
		ruleK_Default
		{ after(grammarAccess.getValid_IDAccess().getK_DefaultParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getValid_IDAccess().getK_ExperimentParserRuleCall_9()); }
		ruleK_Experiment
		{ after(grammarAccess.getValid_IDAccess().getK_ExperimentParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getStringLiteralParserRuleCall_0()); }
		ruleStringLiteral
		{ after(grammarAccess.getTerminalExpressionAccess().getStringLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
		(rule__TerminalExpression__Group_1__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
		(rule__TerminalExpression__Group_2__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
		(rule__TerminalExpression__Group_3__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
		(rule__TerminalExpression__Group_4__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneBlock__Group__0__Impl
	rule__StandaloneBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneBlockAccess().get__synthetic__Keyword_0()); }
	'__synthetic__'
	{ after(grammarAccess.getStandaloneBlockAccess().get__synthetic__Keyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneBlockAccess().getBlockAssignment_1()); }
	(rule__StandaloneBlock__BlockAssignment_1)
	{ after(grammarAccess.getStandaloneBlockAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandaloneExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneExpression__Group__0__Impl
	rule__StandaloneExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneExpressionAccess().getNameAssignment_0()); }
	(rule__StandaloneExpression__NameAssignment_0)
	{ after(grammarAccess.getStandaloneExpressionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneExpression__Group__1__Impl
	rule__StandaloneExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneExpressionAccess().getLessThanSignHyphenMinusKeyword_1()); }
	'<-'
	{ after(grammarAccess.getStandaloneExpressionAccess().getLessThanSignHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneExpressionAccess().getExprAssignment_2()); }
	(rule__StandaloneExpression__ExprAssignment_2)
	{ after(grammarAccess.getStandaloneExpressionAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandaloneExperiment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneExperiment__Group__0__Impl
	rule__StandaloneExperiment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneExperimentAccess().getKeyAssignment_0()); }
	(rule__StandaloneExperiment__KeyAssignment_0)
	{ after(grammarAccess.getStandaloneExperimentAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneExperiment__Group__1__Impl
	rule__StandaloneExperiment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneExperimentAccess().getNameAssignment_1()); }
	(rule__StandaloneExperiment__NameAssignment_1)
	{ after(grammarAccess.getStandaloneExperimentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneExperiment__Group__2__Impl
	rule__StandaloneExperiment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneExperimentAccess().getGroup_2()); }
	(rule__StandaloneExperiment__Group_2__0)?
	{ after(grammarAccess.getStandaloneExperimentAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneExperiment__Group__3__Impl
	rule__StandaloneExperiment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneExperimentAccess().getFacetsAssignment_3()); }
	(rule__StandaloneExperiment__FacetsAssignment_3)*
	{ after(grammarAccess.getStandaloneExperimentAccess().getFacetsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneExperiment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneExperimentAccess().getAlternatives_4()); }
	(rule__StandaloneExperiment__Alternatives_4)
	{ after(grammarAccess.getStandaloneExperimentAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandaloneExperiment__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneExperiment__Group_2__0__Impl
	rule__StandaloneExperiment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneExperimentAccess().getModelKeyword_2_0()); }
	'model:'
	{ after(grammarAccess.getStandaloneExperimentAccess().getModelKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneExperiment__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneExperimentAccess().getImportURIAssignment_2_1()); }
	(rule__StandaloneExperiment__ImportURIAssignment_2_1)
	{ after(grammarAccess.getStandaloneExperimentAccess().getImportURIAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandaloneModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneModel__Group__0__Impl
	rule__StandaloneModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneModelAccess().getPragmasAssignment_0()); }
	(rule__StandaloneModel__PragmasAssignment_0)*
	{ after(grammarAccess.getStandaloneModelAccess().getPragmasAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneModel__Group__1__Impl
	rule__StandaloneModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneModelAccess().getModelKeyword_1()); }
	'model'
	{ after(grammarAccess.getStandaloneModelAccess().getModelKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneModel__Group__2__Impl
	rule__StandaloneModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneModelAccess().getNameAssignment_2()); }
	(rule__StandaloneModel__NameAssignment_2)
	{ after(grammarAccess.getStandaloneModelAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneModel__Group__3__Impl
	rule__StandaloneModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneModelAccess().getImportsAssignment_3()); }
	(rule__StandaloneModel__ImportsAssignment_3)*
	{ after(grammarAccess.getStandaloneModelAccess().getImportsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandaloneModel__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandaloneModelAccess().getBlockAssignment_4()); }
	(rule__StandaloneModel__BlockAssignment_4)
	{ after(grammarAccess.getStandaloneModelAccess().getBlockAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
	(rule__Import__ImportURIAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getGroup_2()); }
	(rule__Import__Group_2__0)?
	{ after(grammarAccess.getImportAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group_2__0__Impl
	rule__Import__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getAsKeyword_2_0()); }
	'as'
	{ after(grammarAccess.getImportAccess().getAsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getNameAssignment_2_1()); }
	(rule__Import__NameAssignment_2_1)
	{ after(grammarAccess.getImportAccess().getNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pragma__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group__0__Impl
	rule__Pragma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getPragmaAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getGroup_1()); }
	(rule__Pragma__Group_1__0)
	{ after(grammarAccess.getPragmaAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pragma__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group_1__0__Impl
	rule__Pragma__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getNameAssignment_1_0()); }
	(rule__Pragma__NameAssignment_1_0)
	{ after(grammarAccess.getPragmaAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getGroup_1_1()); }
	(rule__Pragma__Group_1_1__0)?
	{ after(grammarAccess.getPragmaAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pragma__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group_1_1__0__Impl
	rule__Pragma__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getLeftSquareBracketKeyword_1_1_0()); }
	'['
	{ after(grammarAccess.getPragmaAccess().getLeftSquareBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group_1_1__1__Impl
	rule__Pragma__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getPluginsAssignment_1_1_1()); }
	(rule__Pragma__PluginsAssignment_1_1_1)?
	{ after(grammarAccess.getPragmaAccess().getPluginsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pragma__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPragmaAccess().getRightSquareBracketKeyword_1_1_2()); }
	']'
	{ after(grammarAccess.getPragmaAccess().getRightSquareBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
	()
	{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getGroup_2()); }
	(rule__Block__Group_2__0)
	{ after(grammarAccess.getBlockAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_2__0__Impl
	rule__Block__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementsAssignment_2_0()); }
	(rule__Block__StatementsAssignment_2_0)*
	{ after(grammarAccess.getBlockAccess().getStatementsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2_1()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__B_Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B_Model__Group__0__Impl
	rule__B_Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB_ModelAccess().getBlockAction_0()); }
	()
	{ after(grammarAccess.getB_ModelAccess().getBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B_Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB_ModelAccess().getStatementsAssignment_1()); }
	(rule__B_Model__StatementsAssignment_1)*
	{ after(grammarAccess.getB_ModelAccess().getStatementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__B_Switch__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B_Switch__Group__0__Impl
	rule__B_Switch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Switch__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB_SwitchAccess().getBlockAction_0()); }
	()
	{ after(grammarAccess.getB_SwitchAccess().getBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Switch__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B_Switch__Group__1__Impl
	rule__B_Switch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Switch__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB_SwitchAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getB_SwitchAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Switch__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B_Switch__Group__2__Impl
	rule__B_Switch__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Switch__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB_SwitchAccess().getStatementsAssignment_2()); }
	(rule__B_Switch__StatementsAssignment_2)*
	{ after(grammarAccess.getB_SwitchAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Switch__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B_Switch__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Switch__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB_SwitchAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getB_SwitchAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__B_Display__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B_Display__Group__0__Impl
	rule__B_Display__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Display__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB_DisplayAccess().getBlockAction_0()); }
	()
	{ after(grammarAccess.getB_DisplayAccess().getBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Display__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B_Display__Group__1__Impl
	rule__B_Display__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Display__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB_DisplayAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getB_DisplayAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Display__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B_Display__Group__2__Impl
	rule__B_Display__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Display__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB_DisplayAccess().getStatementsAssignment_2()); }
	(rule__B_Display__StatementsAssignment_2)*
	{ after(grammarAccess.getB_DisplayAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Display__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B_Display__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Display__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB_DisplayAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getB_DisplayAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_1Expr_Facets_BlockOrEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_1Expr_Facets_BlockOrEnd__Group__0__Impl
	rule__S_1Expr_Facets_BlockOrEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getKeyAssignment_0()); }
	(rule__S_1Expr_Facets_BlockOrEnd__KeyAssignment_0)
	{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_1Expr_Facets_BlockOrEnd__Group__1__Impl
	rule__S_1Expr_Facets_BlockOrEnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getExprAssignment_1()); }
	(rule__S_1Expr_Facets_BlockOrEnd__ExprAssignment_1)
	{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_1Expr_Facets_BlockOrEnd__Group__2__Impl
	rule__S_1Expr_Facets_BlockOrEnd__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getFacetsAssignment_2()); }
	(rule__S_1Expr_Facets_BlockOrEnd__FacetsAssignment_2)*
	{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getFacetsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_1Expr_Facets_BlockOrEnd__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getAlternatives_3()); }
	(rule__S_1Expr_Facets_BlockOrEnd__Alternatives_3)
	{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Global__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Global__Group__0__Impl
	rule__S_Global__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Global__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_GlobalAccess().getKeyAssignment_0()); }
	(rule__S_Global__KeyAssignment_0)
	{ after(grammarAccess.getS_GlobalAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Global__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Global__Group__1__Impl
	rule__S_Global__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Global__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_GlobalAccess().getFacetsAssignment_1()); }
	(rule__S_Global__FacetsAssignment_1)*
	{ after(grammarAccess.getS_GlobalAccess().getFacetsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Global__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Global__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Global__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_GlobalAccess().getAlternatives_2()); }
	(rule__S_Global__Alternatives_2)
	{ after(grammarAccess.getS_GlobalAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Species__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Species__Group__0__Impl
	rule__S_Species__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SpeciesAccess().getKeyAssignment_0()); }
	(rule__S_Species__KeyAssignment_0)
	{ after(grammarAccess.getS_SpeciesAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Species__Group__1__Impl
	rule__S_Species__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SpeciesAccess().getNameAssignment_1()); }
	(rule__S_Species__NameAssignment_1)
	{ after(grammarAccess.getS_SpeciesAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Species__Group__2__Impl
	rule__S_Species__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SpeciesAccess().getFacetsAssignment_2()); }
	(rule__S_Species__FacetsAssignment_2)*
	{ after(grammarAccess.getS_SpeciesAccess().getFacetsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Species__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SpeciesAccess().getAlternatives_3()); }
	(rule__S_Species__Alternatives_3)
	{ after(grammarAccess.getS_SpeciesAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Experiment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Experiment__Group__0__Impl
	rule__S_Experiment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ExperimentAccess().getKeyAssignment_0()); }
	(rule__S_Experiment__KeyAssignment_0)
	{ after(grammarAccess.getS_ExperimentAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Experiment__Group__1__Impl
	rule__S_Experiment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ExperimentAccess().getNameAssignment_1()); }
	(rule__S_Experiment__NameAssignment_1)
	{ after(grammarAccess.getS_ExperimentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Experiment__Group__2__Impl
	rule__S_Experiment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ExperimentAccess().getFacetsAssignment_2()); }
	(rule__S_Experiment__FacetsAssignment_2)*
	{ after(grammarAccess.getS_ExperimentAccess().getFacetsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Experiment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ExperimentAccess().getAlternatives_3()); }
	(rule__S_Experiment__Alternatives_3)
	{ after(grammarAccess.getS_ExperimentAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Do__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Do__Group__0__Impl
	rule__S_Do__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DoAccess().getKeyAssignment_0()); }
	(rule__S_Do__KeyAssignment_0)
	{ after(grammarAccess.getS_DoAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Do__Group__1__Impl
	rule__S_Do__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DoAccess().getExprAssignment_1()); }
	(rule__S_Do__ExprAssignment_1)
	{ after(grammarAccess.getS_DoAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Do__Group__2__Impl
	rule__S_Do__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DoAccess().getFacetsAssignment_2()); }
	(rule__S_Do__FacetsAssignment_2)*
	{ after(grammarAccess.getS_DoAccess().getFacetsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Do__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DoAccess().getAlternatives_3()); }
	(rule__S_Do__Alternatives_3)
	{ after(grammarAccess.getS_DoAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Loop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Loop__Group__0__Impl
	rule__S_Loop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Loop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_LoopAccess().getKeyAssignment_0()); }
	(rule__S_Loop__KeyAssignment_0)
	{ after(grammarAccess.getS_LoopAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Loop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Loop__Group__1__Impl
	rule__S_Loop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Loop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_LoopAccess().getNameAssignment_1()); }
	(rule__S_Loop__NameAssignment_1)
	{ after(grammarAccess.getS_LoopAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Loop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Loop__Group__2__Impl
	rule__S_Loop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Loop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_LoopAccess().getFacetsAssignment_2()); }
	(rule__S_Loop__FacetsAssignment_2)*
	{ after(grammarAccess.getS_LoopAccess().getFacetsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Loop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Loop__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Loop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_LoopAccess().getBlockAssignment_3()); }
	(rule__S_Loop__BlockAssignment_3)
	{ after(grammarAccess.getS_LoopAccess().getBlockAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_If__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_If__Group__0__Impl
	rule__S_If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_IfAccess().getKeyAssignment_0()); }
	(rule__S_If__KeyAssignment_0)
	{ after(grammarAccess.getS_IfAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_If__Group__1__Impl
	rule__S_If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_IfAccess().getExprAssignment_1()); }
	(rule__S_If__ExprAssignment_1)
	{ after(grammarAccess.getS_IfAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_If__Group__2__Impl
	rule__S_If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_IfAccess().getBlockAssignment_2()); }
	(rule__S_If__BlockAssignment_2)
	{ after(grammarAccess.getS_IfAccess().getBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_If__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_IfAccess().getGroup_3()); }
	(rule__S_If__Group_3__0)?
	{ after(grammarAccess.getS_IfAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_If__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_If__Group_3__0__Impl
	rule__S_If__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_IfAccess().getElseKeyword_3_0()); }
	('else')
	{ after(grammarAccess.getS_IfAccess().getElseKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_If__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_IfAccess().getElseAssignment_3_1()); }
	(rule__S_If__ElseAssignment_3_1)
	{ after(grammarAccess.getS_IfAccess().getElseAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Try__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Try__Group__0__Impl
	rule__S_Try__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Try__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_TryAccess().getKeyAssignment_0()); }
	(rule__S_Try__KeyAssignment_0)
	{ after(grammarAccess.getS_TryAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Try__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Try__Group__1__Impl
	rule__S_Try__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Try__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_TryAccess().getBlockAssignment_1()); }
	(rule__S_Try__BlockAssignment_1)
	{ after(grammarAccess.getS_TryAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Try__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Try__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Try__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_TryAccess().getGroup_2()); }
	(rule__S_Try__Group_2__0)?
	{ after(grammarAccess.getS_TryAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Try__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Try__Group_2__0__Impl
	rule__S_Try__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Try__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_TryAccess().getCatchKeyword_2_0()); }
	('catch')
	{ after(grammarAccess.getS_TryAccess().getCatchKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Try__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Try__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Try__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_TryAccess().getCatchAssignment_2_1()); }
	(rule__S_Try__CatchAssignment_2_1)
	{ after(grammarAccess.getS_TryAccess().getCatchAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Switch__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Switch__Group__0__Impl
	rule__S_Switch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Switch__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SwitchAccess().getKeyAssignment_0()); }
	(rule__S_Switch__KeyAssignment_0)
	{ after(grammarAccess.getS_SwitchAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Switch__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Switch__Group__1__Impl
	rule__S_Switch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Switch__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SwitchAccess().getExprAssignment_1()); }
	(rule__S_Switch__ExprAssignment_1)
	{ after(grammarAccess.getS_SwitchAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Switch__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Switch__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Switch__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SwitchAccess().getBlockAssignment_2()); }
	(rule__S_Switch__BlockAssignment_2)
	{ after(grammarAccess.getS_SwitchAccess().getBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Match__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Match__Group__0__Impl
	rule__S_Match__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Match__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_MatchAccess().getKeyAssignment_0()); }
	(rule__S_Match__KeyAssignment_0)
	{ after(grammarAccess.getS_MatchAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Match__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Match__Group__1__Impl
	rule__S_Match__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Match__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_MatchAccess().getExprAssignment_1()); }
	(rule__S_Match__ExprAssignment_1)
	{ after(grammarAccess.getS_MatchAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Match__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Match__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Match__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_MatchAccess().getBlockAssignment_2()); }
	(rule__S_Match__BlockAssignment_2)
	{ after(grammarAccess.getS_MatchAccess().getBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Default__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Default__Group__0__Impl
	rule__S_Default__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Default__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DefaultAccess().getKeyAssignment_0()); }
	(rule__S_Default__KeyAssignment_0)
	{ after(grammarAccess.getS_DefaultAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Default__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Default__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Default__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DefaultAccess().getBlockAssignment_1()); }
	(rule__S_Default__BlockAssignment_1)
	{ after(grammarAccess.getS_DefaultAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Return__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Return__Group__0__Impl
	rule__S_Return__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Return__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ReturnAccess().getKeyAssignment_0()); }
	(rule__S_Return__KeyAssignment_0)
	{ after(grammarAccess.getS_ReturnAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Return__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Return__Group__1__Impl
	rule__S_Return__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Return__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ReturnAccess().getExprAssignment_1()); }
	(rule__S_Return__ExprAssignment_1)
	{ after(grammarAccess.getS_ReturnAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Return__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Return__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Return__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ReturnAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getS_ReturnAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Break__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Break__Group__0__Impl
	rule__S_Break__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Break__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_BreakAccess().getKeyAssignment_0()); }
	(rule__S_Break__KeyAssignment_0)
	{ after(grammarAccess.getS_BreakAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Break__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Break__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Break__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_BreakAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getS_BreakAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Reflex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Reflex__Group__0__Impl
	rule__S_Reflex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ReflexAccess().getKeyAssignment_0()); }
	(rule__S_Reflex__KeyAssignment_0)
	{ after(grammarAccess.getS_ReflexAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Reflex__Group__1__Impl
	rule__S_Reflex__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ReflexAccess().getNameAssignment_1()); }
	(rule__S_Reflex__NameAssignment_1)?
	{ after(grammarAccess.getS_ReflexAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Reflex__Group__2__Impl
	rule__S_Reflex__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ReflexAccess().getGroup_2()); }
	(rule__S_Reflex__Group_2__0)?
	{ after(grammarAccess.getS_ReflexAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Reflex__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ReflexAccess().getBlockAssignment_3()); }
	(rule__S_Reflex__BlockAssignment_3)
	{ after(grammarAccess.getS_ReflexAccess().getBlockAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Reflex__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Reflex__Group_2__0__Impl
	rule__S_Reflex__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ReflexAccess().getWhenKeyword_2_0()); }
	'when'
	{ after(grammarAccess.getS_ReflexAccess().getWhenKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Reflex__Group_2__1__Impl
	rule__S_Reflex__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ReflexAccess().getColonKeyword_2_1()); }
	':'
	{ after(grammarAccess.getS_ReflexAccess().getColonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Reflex__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ReflexAccess().getExprAssignment_2_2()); }
	(rule__S_Reflex__ExprAssignment_2_2)
	{ after(grammarAccess.getS_ReflexAccess().getExprAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Definition__Group__0__Impl
	rule__S_Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DefinitionAccess().getTkeyAssignment_0()); }
	(rule__S_Definition__TkeyAssignment_0)
	{ after(grammarAccess.getS_DefinitionAccess().getTkeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Definition__Group__1__Impl
	rule__S_Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DefinitionAccess().getNameAssignment_1()); }
	(rule__S_Definition__NameAssignment_1)
	{ after(grammarAccess.getS_DefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Definition__Group__2__Impl
	rule__S_Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DefinitionAccess().getGroup_2()); }
	(rule__S_Definition__Group_2__0)?
	{ after(grammarAccess.getS_DefinitionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Definition__Group__3__Impl
	rule__S_Definition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DefinitionAccess().getFacetsAssignment_3()); }
	(rule__S_Definition__FacetsAssignment_3)*
	{ after(grammarAccess.getS_DefinitionAccess().getFacetsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Definition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DefinitionAccess().getAlternatives_4()); }
	(rule__S_Definition__Alternatives_4)
	{ after(grammarAccess.getS_DefinitionAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Definition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Definition__Group_2__0__Impl
	rule__S_Definition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DefinitionAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getS_DefinitionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Definition__Group_2__1__Impl
	rule__S_Definition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DefinitionAccess().getArgsAssignment_2_1()); }
	(rule__S_Definition__ArgsAssignment_2_1)
	{ after(grammarAccess.getS_DefinitionAccess().getArgsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Definition__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DefinitionAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getS_DefinitionAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Action__Group__0__Impl
	rule__S_Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ActionAccess().getS_ActionAction_0()); }
	()
	{ after(grammarAccess.getS_ActionAccess().getS_ActionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Action__Group__1__Impl
	rule__S_Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ActionAccess().getKeyAssignment_1()); }
	(rule__S_Action__KeyAssignment_1)
	{ after(grammarAccess.getS_ActionAccess().getKeyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Action__Group__2__Impl
	rule__S_Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ActionAccess().getNameAssignment_2()); }
	(rule__S_Action__NameAssignment_2)
	{ after(grammarAccess.getS_ActionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Action__Group__3__Impl
	rule__S_Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ActionAccess().getGroup_3()); }
	(rule__S_Action__Group_3__0)?
	{ after(grammarAccess.getS_ActionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Action__Group__4__Impl
	rule__S_Action__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ActionAccess().getFacetsAssignment_4()); }
	(rule__S_Action__FacetsAssignment_4)*
	{ after(grammarAccess.getS_ActionAccess().getFacetsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Action__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ActionAccess().getAlternatives_5()); }
	(rule__S_Action__Alternatives_5)
	{ after(grammarAccess.getS_ActionAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Action__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Action__Group_3__0__Impl
	rule__S_Action__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ActionAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getS_ActionAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Action__Group_3__1__Impl
	rule__S_Action__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ActionAccess().getArgsAssignment_3_1()); }
	(rule__S_Action__ArgsAssignment_3_1)
	{ after(grammarAccess.getS_ActionAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Action__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ActionAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getS_ActionAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Var__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Var__Group__0__Impl
	rule__S_Var__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_VarAccess().getS_VarAction_0()); }
	()
	{ after(grammarAccess.getS_VarAccess().getS_VarAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Var__Group__1__Impl
	rule__S_Var__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_VarAccess().getKeyAssignment_1()); }
	(rule__S_Var__KeyAssignment_1)
	{ after(grammarAccess.getS_VarAccess().getKeyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Var__Group__2__Impl
	rule__S_Var__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_VarAccess().getNameAssignment_2()); }
	(rule__S_Var__NameAssignment_2)
	{ after(grammarAccess.getS_VarAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Var__Group__3__Impl
	rule__S_Var__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_VarAccess().getFacetsAssignment_3()); }
	(rule__S_Var__FacetsAssignment_3)*
	{ after(grammarAccess.getS_VarAccess().getFacetsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Var__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_VarAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getS_VarAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_DirectAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_DirectAssignment__Group__0__Impl
	rule__S_DirectAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DirectAssignmentAccess().getGroup_0()); }
	(rule__S_DirectAssignment__Group_0__0)
	{ after(grammarAccess.getS_DirectAssignmentAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_DirectAssignment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DirectAssignmentAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getS_DirectAssignmentAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_DirectAssignment__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_DirectAssignment__Group_0__0__Impl
	rule__S_DirectAssignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DirectAssignmentAccess().getExprAssignment_0_0()); }
	(rule__S_DirectAssignment__ExprAssignment_0_0)
	{ after(grammarAccess.getS_DirectAssignmentAccess().getExprAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_DirectAssignment__Group_0__1__Impl
	rule__S_DirectAssignment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DirectAssignmentAccess().getKeyAssignment_0_1()); }
	(rule__S_DirectAssignment__KeyAssignment_0_1)
	{ after(grammarAccess.getS_DirectAssignmentAccess().getKeyAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_DirectAssignment__Group_0__2__Impl
	rule__S_DirectAssignment__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DirectAssignmentAccess().getValueAssignment_0_2()); }
	(rule__S_DirectAssignment__ValueAssignment_0_2)
	{ after(grammarAccess.getS_DirectAssignmentAccess().getValueAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_DirectAssignment__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DirectAssignmentAccess().getFacetsAssignment_0_3()); }
	(rule__S_DirectAssignment__FacetsAssignment_0_3)*
	{ after(grammarAccess.getS_DirectAssignmentAccess().getFacetsAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Set__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Set__Group__0__Impl
	rule__S_Set__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SetAccess().getKeyAssignment_0()); }
	(rule__S_Set__KeyAssignment_0)
	{ after(grammarAccess.getS_SetAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Set__Group__1__Impl
	rule__S_Set__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SetAccess().getExprAssignment_1()); }
	(rule__S_Set__ExprAssignment_1)
	{ after(grammarAccess.getS_SetAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Set__Group__2__Impl
	rule__S_Set__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SetAccess().getAlternatives_2()); }
	(rule__S_Set__Alternatives_2)
	{ after(grammarAccess.getS_SetAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Set__Group__3__Impl
	rule__S_Set__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SetAccess().getValueAssignment_3()); }
	(rule__S_Set__ValueAssignment_3)
	{ after(grammarAccess.getS_SetAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Set__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SetAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getS_SetAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Equation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equation__Group__0__Impl
	rule__S_Equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationAccess().getExprAssignment_0()); }
	(rule__S_Equation__ExprAssignment_0)
	{ after(grammarAccess.getS_EquationAccess().getExprAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equation__Group__1__Impl
	rule__S_Equation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationAccess().getKeyAssignment_1()); }
	(rule__S_Equation__KeyAssignment_1)
	{ after(grammarAccess.getS_EquationAccess().getKeyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationAccess().getValueAssignment_2()); }
	(rule__S_Equation__ValueAssignment_2)
	{ after(grammarAccess.getS_EquationAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Equations__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equations__Group__0__Impl
	rule__S_Equations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationsAccess().getKeyAssignment_0()); }
	(rule__S_Equations__KeyAssignment_0)
	{ after(grammarAccess.getS_EquationsAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equations__Group__1__Impl
	rule__S_Equations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationsAccess().getNameAssignment_1()); }
	(rule__S_Equations__NameAssignment_1)
	{ after(grammarAccess.getS_EquationsAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equations__Group__2__Impl
	rule__S_Equations__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationsAccess().getFacetsAssignment_2()); }
	(rule__S_Equations__FacetsAssignment_2)*
	{ after(grammarAccess.getS_EquationsAccess().getFacetsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equations__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationsAccess().getAlternatives_3()); }
	(rule__S_Equations__Alternatives_3)
	{ after(grammarAccess.getS_EquationsAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Equations__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equations__Group_3_0__0__Impl
	rule__S_Equations__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationsAccess().getLeftCurlyBracketKeyword_3_0_0()); }
	'{'
	{ after(grammarAccess.getS_EquationsAccess().getLeftCurlyBracketKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equations__Group_3_0__1__Impl
	rule__S_Equations__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationsAccess().getGroup_3_0_1()); }
	(rule__S_Equations__Group_3_0_1__0)*
	{ after(grammarAccess.getS_EquationsAccess().getGroup_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equations__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationsAccess().getRightCurlyBracketKeyword_3_0_2()); }
	'}'
	{ after(grammarAccess.getS_EquationsAccess().getRightCurlyBracketKeyword_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Equations__Group_3_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equations__Group_3_0_1__0__Impl
	rule__S_Equations__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group_3_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationsAccess().getEquationsAssignment_3_0_1_0()); }
	(rule__S_Equations__EquationsAssignment_3_0_1_0)
	{ after(grammarAccess.getS_EquationsAccess().getEquationsAssignment_3_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group_3_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Equations__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__Group_3_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_EquationsAccess().getSemicolonKeyword_3_0_1_1()); }
	';'
	{ after(grammarAccess.getS_EquationsAccess().getSemicolonKeyword_3_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Solve__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Solve__Group__0__Impl
	rule__S_Solve__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SolveAccess().getKeyAssignment_0()); }
	(rule__S_Solve__KeyAssignment_0)
	{ after(grammarAccess.getS_SolveAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Solve__Group__1__Impl
	rule__S_Solve__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SolveAccess().getExprAssignment_1()); }
	(rule__S_Solve__ExprAssignment_1)
	{ after(grammarAccess.getS_SolveAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Solve__Group__2__Impl
	rule__S_Solve__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SolveAccess().getFacetsAssignment_2()); }
	(rule__S_Solve__FacetsAssignment_2)*
	{ after(grammarAccess.getS_SolveAccess().getFacetsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Solve__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SolveAccess().getAlternatives_3()); }
	(rule__S_Solve__Alternatives_3)
	{ after(grammarAccess.getS_SolveAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_Display__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Display__Group__0__Impl
	rule__S_Display__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DisplayAccess().getKeyAssignment_0()); }
	(rule__S_Display__KeyAssignment_0)
	{ after(grammarAccess.getS_DisplayAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Display__Group__1__Impl
	rule__S_Display__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DisplayAccess().getNameAssignment_1()); }
	(rule__S_Display__NameAssignment_1)
	{ after(grammarAccess.getS_DisplayAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Display__Group__2__Impl
	rule__S_Display__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DisplayAccess().getFacetsAssignment_2()); }
	(rule__S_Display__FacetsAssignment_2)*
	{ after(grammarAccess.getS_DisplayAccess().getFacetsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_Display__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_DisplayAccess().getBlockAssignment_3()); }
	(rule__S_Display__BlockAssignment_3)
	{ after(grammarAccess.getS_DisplayAccess().getBlockAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_SpeciesLayer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_SpeciesLayer__Group__0__Impl
	rule__S_SpeciesLayer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SpeciesLayerAccess().getKeyAssignment_0()); }
	(rule__S_SpeciesLayer__KeyAssignment_0)
	{ after(grammarAccess.getS_SpeciesLayerAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_SpeciesLayer__Group__1__Impl
	rule__S_SpeciesLayer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SpeciesLayerAccess().getExprAssignment_1()); }
	(rule__S_SpeciesLayer__ExprAssignment_1)
	{ after(grammarAccess.getS_SpeciesLayerAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_SpeciesLayer__Group__2__Impl
	rule__S_SpeciesLayer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SpeciesLayerAccess().getFacetsAssignment_2()); }
	(rule__S_SpeciesLayer__FacetsAssignment_2)*
	{ after(grammarAccess.getS_SpeciesLayerAccess().getFacetsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_SpeciesLayer__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_SpeciesLayerAccess().getAlternatives_3()); }
	(rule__S_SpeciesLayer__Alternatives_3)
	{ after(grammarAccess.getS_SpeciesLayerAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__S_ImageLayer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_ImageLayer__Group__0__Impl
	rule__S_ImageLayer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S_ImageLayer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ImageLayerAccess().getKeyAssignment_0()); }
	(rule__S_ImageLayer__KeyAssignment_0)
	{ after(grammarAccess.getS_ImageLayerAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_ImageLayer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_ImageLayer__Group__1__Impl
	rule__S_ImageLayer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S_ImageLayer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ImageLayerAccess().getExprAssignment_1()); }
	(rule__S_ImageLayer__ExprAssignment_1)
	{ after(grammarAccess.getS_ImageLayerAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_ImageLayer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_ImageLayer__Group__2__Impl
	rule__S_ImageLayer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S_ImageLayer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ImageLayerAccess().getFacetsAssignment_2()); }
	(rule__S_ImageLayer__FacetsAssignment_2)*
	{ after(grammarAccess.getS_ImageLayerAccess().getFacetsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_ImageLayer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__S_ImageLayer__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S_ImageLayer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getS_ImageLayerAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getS_ImageLayerAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__K_Assignment__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__K_Assignment__Group_2__0__Impl
	rule__K_Assignment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Assignment__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getK_AssignmentAccess().getGreaterThanSignKeyword_2_0()); }
	'>'
	{ after(grammarAccess.getK_AssignmentAccess().getGreaterThanSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Assignment__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__K_Assignment__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Assignment__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getK_AssignmentAccess().getGreaterThanSignKeyword_2_1()); }
	'>'
	{ after(grammarAccess.getK_AssignmentAccess().getGreaterThanSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__K_Assignment__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__K_Assignment__Group_4__0__Impl
	rule__K_Assignment__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Assignment__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getK_AssignmentAccess().getGreaterThanSignKeyword_4_0()); }
	'>'
	{ after(grammarAccess.getK_AssignmentAccess().getGreaterThanSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Assignment__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__K_Assignment__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__K_Assignment__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getK_AssignmentAccess().getGreaterThanSignHyphenMinusKeyword_4_1()); }
	'>-'
	{ after(grammarAccess.getK_AssignmentAccess().getGreaterThanSignHyphenMinusKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionArguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionArguments__Group__0__Impl
	rule__ActionArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionArgumentsAccess().getArgsAssignment_0()); }
	(rule__ActionArguments__ArgsAssignment_0)
	{ after(grammarAccess.getActionArgumentsAccess().getArgsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionArguments__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionArgumentsAccess().getGroup_1()); }
	(rule__ActionArguments__Group_1__0)*
	{ after(grammarAccess.getActionArgumentsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionArguments__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionArguments__Group_1__0__Impl
	rule__ActionArguments__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionArgumentsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getActionArgumentsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionArguments__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionArgumentsAccess().getArgsAssignment_1_1()); }
	(rule__ActionArguments__ArgsAssignment_1_1)
	{ after(grammarAccess.getActionArgumentsAccess().getArgsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDefinition__Group__0__Impl
	rule__ArgumentDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDefinitionAccess().getTypeAssignment_0()); }
	(rule__ArgumentDefinition__TypeAssignment_0)
	{ after(grammarAccess.getArgumentDefinitionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDefinition__Group__1__Impl
	rule__ArgumentDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDefinitionAccess().getNameAssignment_1()); }
	(rule__ArgumentDefinition__NameAssignment_1)
	{ after(grammarAccess.getArgumentDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDefinitionAccess().getGroup_2()); }
	(rule__ArgumentDefinition__Group_2__0)?
	{ after(grammarAccess.getArgumentDefinitionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDefinition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDefinition__Group_2__0__Impl
	rule__ArgumentDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDefinitionAccess().getLessThanSignHyphenMinusKeyword_2_0()); }
	'<-'
	{ after(grammarAccess.getArgumentDefinitionAccess().getLessThanSignHyphenMinusKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDefinition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDefinitionAccess().getDefaultAssignment_2_1()); }
	(rule__ArgumentDefinition__DefaultAssignment_2_1)
	{ after(grammarAccess.getArgumentDefinitionAccess().getDefaultAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__F_Regular__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Regular__Group__0__Impl
	rule__F_Regular__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Regular__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_RegularAccess().getAlternatives_0()); }
	(rule__F_Regular__Alternatives_0)
	{ after(grammarAccess.getF_RegularAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Regular__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Regular__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Regular__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_RegularAccess().getExprAssignment_1()); }
	(rule__F_Regular__ExprAssignment_1)
	{ after(grammarAccess.getF_RegularAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__F_Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Definition__Group__0__Impl
	rule__F_Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_DefinitionAccess().getKeyAssignment_0()); }
	(rule__F_Definition__KeyAssignment_0)
	{ after(grammarAccess.getF_DefinitionAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Definition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_DefinitionAccess().getNameAssignment_1()); }
	(rule__F_Definition__NameAssignment_1)
	{ after(grammarAccess.getF_DefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__F_Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Function__Group__0__Impl
	rule__F_Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_FunctionAccess().getKeyAssignment_0()); }
	(rule__F_Function__KeyAssignment_0)
	{ after(grammarAccess.getF_FunctionAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Function__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_FunctionAccess().getAlternatives_1()); }
	(rule__F_Function__Alternatives_1)
	{ after(grammarAccess.getF_FunctionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__F_Function__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Function__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_FunctionAccess().getExprAssignment_1_0_0()); }
	(rule__F_Function__ExprAssignment_1_0_0)
	{ after(grammarAccess.getF_FunctionAccess().getExprAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__F_Function__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Function__Group_1_1__0__Impl
	rule__F_Function__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_FunctionAccess().getLeftCurlyBracketKeyword_1_1_0()); }
	'{'
	{ after(grammarAccess.getF_FunctionAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Function__Group_1_1__1__Impl
	rule__F_Function__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_FunctionAccess().getExprAssignment_1_1_1()); }
	(rule__F_Function__ExprAssignment_1_1_1)
	{ after(grammarAccess.getF_FunctionAccess().getExprAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Function__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_FunctionAccess().getRightCurlyBracketKeyword_1_1_2()); }
	'}'
	{ after(grammarAccess.getF_FunctionAccess().getRightCurlyBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__F_Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Type__Group__0__Impl
	rule__F_Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_TypeAccess().getKeyAssignment_0()); }
	(rule__F_Type__KeyAssignment_0)
	{ after(grammarAccess.getF_TypeAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_TypeAccess().getAlternatives_1()); }
	(rule__F_Type__Alternatives_1)
	{ after(grammarAccess.getF_TypeAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__F_Type__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Type__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Type__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_TypeAccess().getExprAssignment_1_0_0()); }
	(rule__F_Type__ExprAssignment_1_0_0)
	{ after(grammarAccess.getF_TypeAccess().getExprAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__F_Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Action__Group__0__Impl
	rule__F_Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_ActionAccess().getKeyAssignment_0()); }
	(rule__F_Action__KeyAssignment_0)
	{ after(grammarAccess.getF_ActionAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Action__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_ActionAccess().getAlternatives_1()); }
	(rule__F_Action__Alternatives_1)
	{ after(grammarAccess.getF_ActionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__F_Var__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Var__Group__0__Impl
	rule__F_Var__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Var__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_VarAccess().getKeyAssignment_0()); }
	(rule__F_Var__KeyAssignment_0)
	{ after(grammarAccess.getF_VarAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Var__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__F_Var__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Var__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getF_VarAccess().getExprAssignment_1()); }
	(rule__F_Var__ExprAssignment_1)
	{ after(grammarAccess.getF_VarAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FK_Regular__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FK_Regular__Group__0__Impl
	rule__FK_Regular__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FK_Regular__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFK_RegularAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getFK_RegularAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FK_Regular__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FK_Regular__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FK_Regular__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFK_RegularAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFK_RegularAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FK_Special__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FK_Special__Group_2__0__Impl
	rule__FK_Special__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FK_Special__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFK_SpecialAccess().getWhenKeyword_2_0()); }
	'when'
	{ after(grammarAccess.getFK_SpecialAccess().getWhenKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FK_Special__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FK_Special__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FK_Special__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFK_SpecialAccess().getColonKeyword_2_1()); }
	':'
	{ after(grammarAccess.getFK_SpecialAccess().getColonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentPair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentPair__Group__0__Impl
	rule__ArgumentPair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentPairAccess().getGroup_0()); }
	(rule__ArgumentPair__Group_0__0)?
	{ after(grammarAccess.getArgumentPairAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentPair__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentPairAccess().getRightAssignment_1()); }
	(rule__ArgumentPair__RightAssignment_1)
	{ after(grammarAccess.getArgumentPairAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentPair__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentPair__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentPairAccess().getAlternatives_0_0()); }
	(rule__ArgumentPair__Alternatives_0_0)
	{ after(grammarAccess.getArgumentPairAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentPair__Group_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentPair__Group_0_0_0__0__Impl
	rule__ArgumentPair__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentPairAccess().getOpAssignment_0_0_0_0()); }
	(rule__ArgumentPair__OpAssignment_0_0_0_0)
	{ after(grammarAccess.getArgumentPairAccess().getOpAssignment_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentPair__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentPairAccess().getColonColonKeyword_0_0_0_1()); }
	'::'
	{ after(grammarAccess.getArgumentPairAccess().getColonColonKeyword_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentPair__Group_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentPair__Group_0_0_1__0__Impl
	rule__ArgumentPair__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentPairAccess().getOpAssignment_0_0_1_0()); }
	(rule__ArgumentPair__OpAssignment_0_0_1_0)
	{ after(grammarAccess.getArgumentPairAccess().getOpAssignment_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentPair__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__Group_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentPairAccess().getColonKeyword_0_0_1_1()); }
	':'
	{ after(grammarAccess.getArgumentPairAccess().getColonKeyword_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group__0__Impl
	rule__Pair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getIfParserRuleCall_0()); }
	ruleIf
	{ after(grammarAccess.getPairAccess().getIfParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getGroup_1()); }
	(rule__Pair__Group_1__0)?
	{ after(grammarAccess.getPairAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pair__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group_1__0__Impl
	rule__Pair__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getBinaryOperatorLeftAction_1_0()); }
	()
	{ after(grammarAccess.getPairAccess().getBinaryOperatorLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group_1__1__Impl
	rule__Pair__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getOpAssignment_1_1()); }
	(rule__Pair__OpAssignment_1_1)
	{ after(grammarAccess.getPairAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getRightAssignment_1_2()); }
	(rule__Pair__RightAssignment_1_2)
	{ after(grammarAccess.getPairAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getOrParserRuleCall_0()); }
	ruleOr
	{ after(grammarAccess.getIfAccess().getOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getGroup_1()); }
	(rule__If__Group_1__0)?
	{ after(grammarAccess.getIfAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_1__0__Impl
	rule__If__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfLeftAction_1_0()); }
	()
	{ after(grammarAccess.getIfAccess().getIfLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_1__1__Impl
	rule__If__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getOpAssignment_1_1()); }
	(rule__If__OpAssignment_1_1)
	{ after(grammarAccess.getIfAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_1__2__Impl
	rule__If__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRightAssignment_1_2()); }
	(rule__If__RightAssignment_1_2)
	{ after(grammarAccess.getIfAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getGroup_1_3()); }
	(rule__If__Group_1_3__0)
	{ after(grammarAccess.getIfAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_1_3__0__Impl
	rule__If__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getColonKeyword_1_3_0()); }
	':'
	{ after(grammarAccess.getIfAccess().getColonKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfFalseAssignment_1_3_1()); }
	(rule__If__IfFalseAssignment_1_3_1)
	{ after(grammarAccess.getIfAccess().getIfFalseAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getBinaryOperatorLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getBinaryOperatorLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOpAssignment_1_1()); }
	(rule__Or__OpAssignment_1_1)
	{ after(grammarAccess.getOrAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getCastParserRuleCall_0()); }
	ruleCast
	{ after(grammarAccess.getAndAccess().getCastParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getBinaryOperatorLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getBinaryOperatorLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getOpAssignment_1_1()); }
	(rule__And__OpAssignment_1_1)
	{ after(grammarAccess.getAndAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group__0__Impl
	rule__Cast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getCastAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getGroup_1()); }
	(rule__Cast__Group_1__0)?
	{ after(grammarAccess.getCastAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group_1__0__Impl
	rule__Cast__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getGroup_1_0()); }
	(rule__Cast__Group_1_0__0)
	{ after(grammarAccess.getCastAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getAlternatives_1_1()); }
	(rule__Cast__Alternatives_1_1)
	{ after(grammarAccess.getCastAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group_1_0__0__Impl
	rule__Cast__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getBinaryOperatorLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getCastAccess().getBinaryOperatorLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getOpAssignment_1_0_1()); }
	(rule__Cast__OpAssignment_1_0_1)
	{ after(grammarAccess.getCastAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group_1_1_1__0__Impl
	rule__Cast__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getLeftParenthesisKeyword_1_1_1_0()); }
	'('
	{ after(grammarAccess.getCastAccess().getLeftParenthesisKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group_1_1_1__1__Impl
	rule__Cast__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getRightAssignment_1_1_1_1()); }
	(rule__Cast__RightAssignment_1_1_1_1)
	{ after(grammarAccess.getCastAccess().getRightAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getRightParenthesisKeyword_1_1_1_2()); }
	')'
	{ after(grammarAccess.getCastAccess().getRightParenthesisKeyword_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
	{ after(grammarAccess.getComparisonAccess().getAdditionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)?
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1_0()); }
	(rule__Comparison__Group_1_0__0)
	{ after(grammarAccess.getComparisonAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); }
	(rule__Comparison__RightAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0__0__Impl
	rule__Comparison__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getBinaryOperatorLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getBinaryOperatorLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_0_1()); }
	(rule__Comparison__OpAssignment_1_0_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
	{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
	(rule__Addition__Group_1__0)*
	{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getGroup_1_0()); }
	(rule__Addition__Group_1_0__0)
	{ after(grammarAccess.getAdditionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
	(rule__Addition__RightAssignment_1_1)
	{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1_0__0__Impl
	rule__Addition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getBinaryOperatorLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getAdditionAccess().getBinaryOperatorLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getOpAssignment_1_0_1()); }
	(rule__Addition__OpAssignment_1_0_1)
	{ after(grammarAccess.getAdditionAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getExponentiationParserRuleCall_0()); }
	ruleExponentiation
	{ after(grammarAccess.getMultiplicationAccess().getExponentiationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
	(rule__Multiplication__Group_1__0)*
	{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
	(rule__Multiplication__Group_1_0__0)
	{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
	(rule__Multiplication__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0__0__Impl
	rule__Multiplication__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getBinaryOperatorLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getMultiplicationAccess().getBinaryOperatorLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1()); }
	(rule__Multiplication__OpAssignment_1_0_1)
	{ after(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exponentiation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponentiation__Group__0__Impl
	rule__Exponentiation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponentiation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationAccess().getBinaryParserRuleCall_0()); }
	ruleBinary
	{ after(grammarAccess.getExponentiationAccess().getBinaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponentiation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponentiation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponentiation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationAccess().getGroup_1()); }
	(rule__Exponentiation__Group_1__0)*
	{ after(grammarAccess.getExponentiationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exponentiation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponentiation__Group_1__0__Impl
	rule__Exponentiation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponentiation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationAccess().getGroup_1_0()); }
	(rule__Exponentiation__Group_1_0__0)
	{ after(grammarAccess.getExponentiationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponentiation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponentiation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponentiation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationAccess().getRightAssignment_1_1()); }
	(rule__Exponentiation__RightAssignment_1_1)
	{ after(grammarAccess.getExponentiationAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exponentiation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponentiation__Group_1_0__0__Impl
	rule__Exponentiation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponentiation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationAccess().getBinaryOperatorLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExponentiationAccess().getBinaryOperatorLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponentiation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponentiation__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponentiation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationAccess().getOpAssignment_1_0_1()); }
	(rule__Exponentiation__OpAssignment_1_0_1)
	{ after(grammarAccess.getExponentiationAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__0__Impl
	rule__Binary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getUnitParserRuleCall_0()); }
	ruleUnit
	{ after(grammarAccess.getBinaryAccess().getUnitParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getGroup_1()); }
	(rule__Binary__Group_1__0)*
	{ after(grammarAccess.getBinaryAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group_1__0__Impl
	rule__Binary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getGroup_1_0()); }
	(rule__Binary__Group_1_0__0)
	{ after(grammarAccess.getBinaryAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getRightAssignment_1_1()); }
	(rule__Binary__RightAssignment_1_1)
	{ after(grammarAccess.getBinaryAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group_1_0__0__Impl
	rule__Binary__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getBinaryOperatorLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getBinaryAccess().getBinaryOperatorLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getOpAssignment_1_0_1()); }
	(rule__Binary__OpAssignment_1_0_1)
	{ after(grammarAccess.getBinaryAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group__0__Impl
	rule__Unit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getUnaryParserRuleCall_0()); }
	ruleUnary
	{ after(grammarAccess.getUnitAccess().getUnaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getGroup_1()); }
	(rule__Unit__Group_1__0)?
	{ after(grammarAccess.getUnitAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group_1__0__Impl
	rule__Unit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getGroup_1_0()); }
	(rule__Unit__Group_1_0__0)
	{ after(grammarAccess.getUnitAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getRightAssignment_1_1()); }
	(rule__Unit__RightAssignment_1_1)
	{ after(grammarAccess.getUnitAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group_1_0__0__Impl
	rule__Unit__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getUnitLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getUnitAccess().getUnitLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getOpAssignment_1_0_1()); }
	(rule__Unit__OpAssignment_1_0_1)
	{ after(grammarAccess.getUnitAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1__0__Impl
	rule__Unary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getUnaryAction_1_0()); }
	()
	{ after(grammarAccess.getUnaryAccess().getUnaryAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getAlternatives_1_1()); }
	(rule__Unary__Alternatives_1_1)
	{ after(grammarAccess.getUnaryAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1_1_0__0__Impl
	rule__Unary__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getOpAssignment_1_1_0_0()); }
	(rule__Unary__OpAssignment_1_1_0_0)
	{ after(grammarAccess.getUnaryAccess().getOpAssignment_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getRightAssignment_1_1_0_1()); }
	(rule__Unary__RightAssignment_1_1_0_1)
	{ after(grammarAccess.getUnaryAccess().getRightAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1_1_1__0__Impl
	rule__Unary__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getOpAssignment_1_1_1_0()); }
	(rule__Unary__OpAssignment_1_1_1_0)
	{ after(grammarAccess.getUnaryAccess().getOpAssignment_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getRightAssignment_1_1_1_1()); }
	(rule__Unary__RightAssignment_1_1_1_1)
	{ after(grammarAccess.getUnaryAccess().getRightAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group__0__Impl
	rule__Access__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getAccessAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getGroup_1()); }
	(rule__Access__Group_1__0)*
	{ after(grammarAccess.getAccessAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group_1__0__Impl
	rule__Access__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getAccessLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAccessAccess().getAccessLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getAlternatives_1_1()); }
	(rule__Access__Alternatives_1_1)
	{ after(grammarAccess.getAccessAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group_1_1_0__0__Impl
	rule__Access__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getOpAssignment_1_1_0_0()); }
	(rule__Access__OpAssignment_1_1_0_0)
	{ after(grammarAccess.getAccessAccess().getOpAssignment_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group_1_1_0__1__Impl
	rule__Access__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getRightAssignment_1_1_0_1()); }
	(rule__Access__RightAssignment_1_1_0_1)?
	{ after(grammarAccess.getAccessAccess().getRightAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getRightSquareBracketKeyword_1_1_0_2()); }
	']'
	{ after(grammarAccess.getAccessAccess().getRightSquareBracketKeyword_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group_1_1_1__0__Impl
	rule__Access__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getOpAssignment_1_1_1_0()); }
	(rule__Access__OpAssignment_1_1_1_0)
	{ after(grammarAccess.getAccessAccess().getOpAssignment_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getRightAssignment_1_1_1_1()); }
	(rule__Access__RightAssignment_1_1_1_1)
	{ after(grammarAccess.getAccessAccess().getRightAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
	rule__Primary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionListParserRuleCall_2_1()); }
	ruleExpressionList
	{ after(grammarAccess.getPrimaryAccess().getExpressionListParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_3_0()); }
	'['
	{ after(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__1__Impl
	rule__Primary__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getArrayAction_3_1()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getArrayAction_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__2__Impl
	rule__Primary__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExprsAssignment_3_2()); }
	(rule__Primary__ExprsAssignment_3_2)?
	{ after(grammarAccess.getPrimaryAccess().getExprsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_3_3()); }
	']'
	{ after(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__0__Impl
	rule__Primary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__1__Impl
	rule__Primary__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPointAction_4_1()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPointAction_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__2__Impl
	rule__Primary__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftAssignment_4_2()); }
	(rule__Primary__LeftAssignment_4_2)
	{ after(grammarAccess.getPrimaryAccess().getLeftAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__3__Impl
	rule__Primary__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getOpAssignment_4_3()); }
	(rule__Primary__OpAssignment_4_3)
	{ after(grammarAccess.getPrimaryAccess().getOpAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__4__Impl
	rule__Primary__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightAssignment_4_4()); }
	(rule__Primary__RightAssignment_4_4)
	{ after(grammarAccess.getPrimaryAccess().getRightAssignment_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__5__Impl
	rule__Primary__Group_4__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getGroup_4_5()); }
	(rule__Primary__Group_4_5__0)?
	{ after(grammarAccess.getPrimaryAccess().getGroup_4_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_4_6()); }
	'}'
	{ after(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_4_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4_5__0__Impl
	rule__Primary__Group_4_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getCommaKeyword_4_5_0()); }
	','
	{ after(grammarAccess.getPrimaryAccess().getCommaKeyword_4_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getZAssignment_4_5_1()); }
	(rule__Primary__ZAssignment_4_5_1)
	{ after(grammarAccess.getPrimaryAccess().getZAssignment_4_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
	()
	{ after(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftAssignment_1()); }
	(rule__Function__LeftAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getTypeAssignment_2()); }
	(rule__Function__TypeAssignment_2)?
	{ after(grammarAccess.getFunctionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightAssignment_4()); }
	(rule__Function__RightAssignment_4)?
	{ after(grammarAccess.getFunctionAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_0__0__Impl
	rule__ExpressionList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExprsAssignment_0_0()); }
	(rule__ExpressionList__ExprsAssignment_0_0)
	{ after(grammarAccess.getExpressionListAccess().getExprsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getGroup_0_1()); }
	(rule__ExpressionList__Group_0_1__0)*
	{ after(grammarAccess.getExpressionListAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_0_1__0__Impl
	rule__ExpressionList__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_0_1_0()); }
	','
	{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExprsAssignment_0_1_1()); }
	(rule__ExpressionList__ExprsAssignment_0_1_1)
	{ after(grammarAccess.getExpressionListAccess().getExprsAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__0__Impl
	rule__ExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExprsAssignment_1_0()); }
	(rule__ExpressionList__ExprsAssignment_1_0)
	{ after(grammarAccess.getExpressionListAccess().getExprsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getGroup_1_1()); }
	(rule__ExpressionList__Group_1_1__0)*
	{ after(grammarAccess.getExpressionListAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1_1__0__Impl
	rule__ExpressionList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExprsAssignment_1_1_1()); }
	(rule__ExpressionList__ExprsAssignment_1_1_1)
	{ after(grammarAccess.getExpressionListAccess().getExprsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterAction_0()); }
	()
	{ after(grammarAccess.getParameterAccess().getParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getAlternatives_1()); }
	(rule__Parameter__Alternatives_1)
	{ after(grammarAccess.getParameterAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getRightAssignment_2()); }
	(rule__Parameter__RightAssignment_2)
	{ after(grammarAccess.getParameterAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_1_1__0__Impl
	rule__Parameter__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getLeftAssignment_1_1_0()); }
	(rule__Parameter__LeftAssignment_1_1_0)
	{ after(grammarAccess.getParameterAccess().getLeftAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1_1_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitRef__Group__0__Impl
	rule__UnitRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitRefAccess().getUnitNameAction_0()); }
	()
	{ after(grammarAccess.getUnitRefAccess().getUnitNameAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitRefAccess().getRefAssignment_1()); }
	(rule__UnitRef__RefAssignment_1)
	{ after(grammarAccess.getUnitRefAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableRef__Group__0__Impl
	rule__VariableRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableRefAccess().getVariableRefAction_0()); }
	()
	{ after(grammarAccess.getVariableRefAccess().getVariableRefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableRefAccess().getRefAssignment_1()); }
	(rule__VariableRef__RefAssignment_1)
	{ after(grammarAccess.getVariableRefAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRef__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeRef__Group_0__0__Impl
	rule__TypeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeRefAccess().getTypeRefAction_0_0()); }
	()
	{ after(grammarAccess.getTypeRefAccess().getTypeRefAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeRef__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeRefAccess().getGroup_0_1()); }
	(rule__TypeRef__Group_0_1__0)
	{ after(grammarAccess.getTypeRefAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRef__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeRef__Group_0_1__0__Impl
	rule__TypeRef__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeRefAccess().getRefAssignment_0_1_0()); }
	(rule__TypeRef__RefAssignment_0_1_0)
	{ after(grammarAccess.getTypeRefAccess().getRefAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeRef__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeRefAccess().getParameterAssignment_0_1_1()); }
	(rule__TypeRef__ParameterAssignment_0_1_1)?
	{ after(grammarAccess.getTypeRefAccess().getParameterAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRef__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeRef__Group_1__0__Impl
	rule__TypeRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeRefAccess().getTypeRefAction_1_0()); }
	()
	{ after(grammarAccess.getTypeRefAccess().getTypeRefAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeRef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeRefAccess().getGroup_1_1()); }
	(rule__TypeRef__Group_1_1__0)
	{ after(grammarAccess.getTypeRefAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRef__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeRef__Group_1_1__0__Impl
	rule__TypeRef__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeRefAccess().getSpeciesKeyword_1_1_0()); }
	'species'
	{ after(grammarAccess.getTypeRefAccess().getSpeciesKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeRef__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeRefAccess().getParameterAssignment_1_1_1()); }
	(rule__TypeRef__ParameterAssignment_1_1_1)
	{ after(grammarAccess.getTypeRefAccess().getParameterAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRef__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeRef__Group_2__0__Impl
	rule__TypeRef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeRefAccess().getTypeRefAction_2_0()); }
	()
	{ after(grammarAccess.getTypeRefAccess().getTypeRefAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeRef__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeRefAccess().getImageKeyword_2_1()); }
	'image'
	{ after(grammarAccess.getTypeRefAccess().getImageKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeInfo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInfo__Group__0__Impl
	rule__TypeInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInfoAccess().getLessThanSignKeyword_0()); }
	'<'
	{ after(grammarAccess.getTypeInfoAccess().getLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInfo__Group__1__Impl
	rule__TypeInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInfoAccess().getFirstAssignment_1()); }
	(rule__TypeInfo__FirstAssignment_1)
	{ after(grammarAccess.getTypeInfoAccess().getFirstAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInfo__Group__2__Impl
	rule__TypeInfo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInfoAccess().getGroup_2()); }
	(rule__TypeInfo__Group_2__0)?
	{ after(grammarAccess.getTypeInfoAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInfo__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInfoAccess().getGreaterThanSignKeyword_3()); }
	('>')
	{ after(grammarAccess.getTypeInfoAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeInfo__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInfo__Group_2__0__Impl
	rule__TypeInfo__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInfoAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getTypeInfoAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInfo__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInfoAccess().getSecondAssignment_2_1()); }
	(rule__TypeInfo__SecondAssignment_2_1)
	{ after(grammarAccess.getTypeInfoAccess().getSecondAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRef__Group__0__Impl
	rule__ActionRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRefAccess().getActionRefAction_0()); }
	()
	{ after(grammarAccess.getActionRefAccess().getActionRefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRefAccess().getRefAssignment_1()); }
	(rule__ActionRef__RefAssignment_1)
	{ after(grammarAccess.getActionRefAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationRef__Group__0__Impl
	rule__EquationRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationRefAccess().getEquationRefAction_0()); }
	()
	{ after(grammarAccess.getEquationRefAccess().getEquationRefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationRefAccess().getRefAssignment_1()); }
	(rule__EquationRef__RefAssignment_1)
	{ after(grammarAccess.getEquationRefAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInUnitDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInUnitDefinition__Group__0__Impl
	rule__BuiltInUnitDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInUnitDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInUnitDefinitionAccess().getUnitKeyword_0()); }
	'**unit*'
	{ after(grammarAccess.getBuiltInUnitDefinitionAccess().getUnitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInUnitDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInUnitDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInUnitDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInUnitDefinitionAccess().getNameAssignment_1()); }
	(rule__BuiltInUnitDefinition__NameAssignment_1)
	{ after(grammarAccess.getBuiltInUnitDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInTypeDefinition__Group__0__Impl
	rule__BuiltInTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInTypeDefinitionAccess().getTypeKeyword_0()); }
	'**type*'
	{ after(grammarAccess.getBuiltInTypeDefinitionAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInTypeDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInTypeDefinitionAccess().getNameAssignment_1()); }
	(rule__BuiltInTypeDefinition__NameAssignment_1)
	{ after(grammarAccess.getBuiltInTypeDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInActionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInActionDefinition__Group__0__Impl
	rule__BuiltInActionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInActionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInActionDefinitionAccess().getActionKeyword_0()); }
	'**action*'
	{ after(grammarAccess.getBuiltInActionDefinitionAccess().getActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInActionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInActionDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInActionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInActionDefinitionAccess().getNameAssignment_1()); }
	(rule__BuiltInActionDefinition__NameAssignment_1)
	{ after(grammarAccess.getBuiltInActionDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInSkillDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInSkillDefinition__Group__0__Impl
	rule__BuiltInSkillDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInSkillDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInSkillDefinitionAccess().getSkillKeyword_0()); }
	'**skill*'
	{ after(grammarAccess.getBuiltInSkillDefinitionAccess().getSkillKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInSkillDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInSkillDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInSkillDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInSkillDefinitionAccess().getNameAssignment_1()); }
	(rule__BuiltInSkillDefinition__NameAssignment_1)
	{ after(grammarAccess.getBuiltInSkillDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInVarDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInVarDefinition__Group__0__Impl
	rule__BuiltInVarDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInVarDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInVarDefinitionAccess().getVarKeyword_0()); }
	'**var*'
	{ after(grammarAccess.getBuiltInVarDefinitionAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInVarDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInVarDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInVarDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInVarDefinitionAccess().getNameAssignment_1()); }
	(rule__BuiltInVarDefinition__NameAssignment_1)
	{ after(grammarAccess.getBuiltInVarDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInEquationDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInEquationDefinition__Group__0__Impl
	rule__BuiltInEquationDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInEquationDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInEquationDefinitionAccess().getEquationKeyword_0()); }
	'**equation*'
	{ after(grammarAccess.getBuiltInEquationDefinitionAccess().getEquationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInEquationDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltInEquationDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInEquationDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltInEquationDefinitionAccess().getNameAssignment_1()); }
	(rule__BuiltInEquationDefinition__NameAssignment_1)
	{ after(grammarAccess.getBuiltInEquationDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_1__0__Impl
	rule__TerminalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_1_0()); }
	()
	{ after(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getOpAssignment_1_1()); }
	(rule__TerminalExpression__OpAssignment_1_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_2__0__Impl
	rule__TerminalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_2_0()); }
	()
	{ after(grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getOpAssignment_2_1()); }
	(rule__TerminalExpression__OpAssignment_2_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getOpAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_3__0__Impl
	rule__TerminalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_3_0()); }
	()
	{ after(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getOpAssignment_3_1()); }
	(rule__TerminalExpression__OpAssignment_3_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getOpAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_4__0__Impl
	rule__TerminalExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getReservedLiteralAction_4_0()); }
	()
	{ after(grammarAccess.getTerminalExpressionAccess().getReservedLiteralAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getOpAssignment_4_1()); }
	(rule__TerminalExpression__OpAssignment_4_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getOpAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandaloneBlock__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneBlockAccess().getBlockBlockParserRuleCall_1_0()); }
		ruleBlock
		{ after(grammarAccess.getStandaloneBlockAccess().getBlockBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExpression__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneExpressionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getStandaloneExpressionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExpression__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneExpressionAccess().getExprExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getStandaloneExpressionAccess().getExprExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneExperimentAccess().getKeyK_ExperimentParserRuleCall_0_0()); }
		ruleK_Experiment
		{ after(grammarAccess.getStandaloneExperimentAccess().getKeyK_ExperimentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneExperimentAccess().getNameAlternatives_1_0()); }
		(rule__StandaloneExperiment__NameAlternatives_1_0)
		{ after(grammarAccess.getStandaloneExperimentAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__ImportURIAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneExperimentAccess().getImportURISTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStandaloneExperimentAccess().getImportURISTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__FacetsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneExperimentAccess().getFacetsFacetParserRuleCall_3_0()); }
		ruleFacet
		{ after(grammarAccess.getStandaloneExperimentAccess().getFacetsFacetParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneExperiment__BlockAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneExperimentAccess().getBlockBlockParserRuleCall_4_0_0()); }
		ruleBlock
		{ after(grammarAccess.getStandaloneExperimentAccess().getBlockBlockParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__PragmasAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneModelAccess().getPragmasPragmaParserRuleCall_0_0()); }
		rulePragma
		{ after(grammarAccess.getStandaloneModelAccess().getPragmasPragmaParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneModelAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStandaloneModelAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__ImportsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneModelAccess().getImportsImportParserRuleCall_3_0()); }
		ruleImport
		{ after(grammarAccess.getStandaloneModelAccess().getImportsImportParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneModel__BlockAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandaloneModelAccess().getBlockB_ModelParserRuleCall_4_0()); }
		ruleB_Model
		{ after(grammarAccess.getStandaloneModelAccess().getBlockB_ModelParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getNameValid_IDParserRuleCall_2_1_0()); }
		ruleValid_ID
		{ after(grammarAccess.getImportAccess().getNameValid_IDParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPragmaAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPragmaAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__PluginsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPragmaAccess().getPluginsExpressionListParserRuleCall_1_1_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getPragmaAccess().getPluginsExpressionListParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Model__StatementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getB_ModelAccess().getStatementsS_SectionParserRuleCall_1_0()); }
		ruleS_Section
		{ after(grammarAccess.getB_ModelAccess().getStatementsS_SectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Switch__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getB_SwitchAccess().getStatementsAlternatives_2_0()); }
		(rule__B_Switch__StatementsAlternatives_2_0)
		{ after(grammarAccess.getB_SwitchAccess().getStatementsAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B_Display__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getB_DisplayAccess().getStatementsS_DisplayLayerParserRuleCall_2_0()); }
		ruleS_DisplayLayer
		{ after(grammarAccess.getB_DisplayAccess().getStatementsS_DisplayLayerParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getKeyK_1Expr_Facets_BlockOrEndParserRuleCall_0_0()); }
		ruleK_1Expr_Facets_BlockOrEnd
		{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getKeyK_1Expr_Facets_BlockOrEndParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__FacetsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getFacetsFacetParserRuleCall_2_0()); }
		ruleFacet
		{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getFacetsFacetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_1Expr_Facets_BlockOrEnd__BlockAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getBlockBlockParserRuleCall_3_0_0()); }
		ruleBlock
		{ after(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getBlockBlockParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Global__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_GlobalAccess().getKeyGlobalKeyword_0_0()); }
		(
			{ before(grammarAccess.getS_GlobalAccess().getKeyGlobalKeyword_0_0()); }
			'global'
			{ after(grammarAccess.getS_GlobalAccess().getKeyGlobalKeyword_0_0()); }
		)
		{ after(grammarAccess.getS_GlobalAccess().getKeyGlobalKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Global__FacetsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_GlobalAccess().getFacetsFacetParserRuleCall_1_0()); }
		ruleFacet
		{ after(grammarAccess.getS_GlobalAccess().getFacetsFacetParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Global__BlockAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_GlobalAccess().getBlockBlockParserRuleCall_2_0_0()); }
		ruleBlock
		{ after(grammarAccess.getS_GlobalAccess().getBlockBlockParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SpeciesAccess().getKeyK_SpeciesParserRuleCall_0_0()); }
		ruleK_Species
		{ after(grammarAccess.getS_SpeciesAccess().getKeyK_SpeciesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SpeciesAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getS_SpeciesAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__FacetsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SpeciesAccess().getFacetsFacetParserRuleCall_2_0()); }
		ruleFacet
		{ after(grammarAccess.getS_SpeciesAccess().getFacetsFacetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Species__BlockAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SpeciesAccess().getBlockBlockParserRuleCall_3_0_0()); }
		ruleBlock
		{ after(grammarAccess.getS_SpeciesAccess().getBlockBlockParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ExperimentAccess().getKeyK_ExperimentParserRuleCall_0_0()); }
		ruleK_Experiment
		{ after(grammarAccess.getS_ExperimentAccess().getKeyK_ExperimentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ExperimentAccess().getNameAlternatives_1_0()); }
		(rule__S_Experiment__NameAlternatives_1_0)
		{ after(grammarAccess.getS_ExperimentAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__FacetsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ExperimentAccess().getFacetsFacetParserRuleCall_2_0()); }
		ruleFacet
		{ after(grammarAccess.getS_ExperimentAccess().getFacetsFacetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Experiment__BlockAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ExperimentAccess().getBlockBlockParserRuleCall_3_0_0()); }
		ruleBlock
		{ after(grammarAccess.getS_ExperimentAccess().getBlockBlockParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DoAccess().getKeyK_DoParserRuleCall_0_0()); }
		ruleK_Do
		{ after(grammarAccess.getS_DoAccess().getKeyK_DoParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DoAccess().getExprAbstractRefParserRuleCall_1_0()); }
		ruleAbstractRef
		{ after(grammarAccess.getS_DoAccess().getExprAbstractRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__FacetsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DoAccess().getFacetsFacetParserRuleCall_2_0()); }
		ruleFacet
		{ after(grammarAccess.getS_DoAccess().getFacetsFacetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Do__BlockAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DoAccess().getBlockBlockParserRuleCall_3_0_0()); }
		ruleBlock
		{ after(grammarAccess.getS_DoAccess().getBlockBlockParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Loop__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_LoopAccess().getKeyLoopKeyword_0_0()); }
		(
			{ before(grammarAccess.getS_LoopAccess().getKeyLoopKeyword_0_0()); }
			'loop'
			{ after(grammarAccess.getS_LoopAccess().getKeyLoopKeyword_0_0()); }
		)
		{ after(grammarAccess.getS_LoopAccess().getKeyLoopKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Loop__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_LoopAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getS_LoopAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Loop__FacetsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_LoopAccess().getFacetsFacetParserRuleCall_2_0()); }
		ruleFacet
		{ after(grammarAccess.getS_LoopAccess().getFacetsFacetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Loop__BlockAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_LoopAccess().getBlockBlockParserRuleCall_3_0()); }
		ruleBlock
		{ after(grammarAccess.getS_LoopAccess().getBlockBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_IfAccess().getKeyIfKeyword_0_0()); }
		(
			{ before(grammarAccess.getS_IfAccess().getKeyIfKeyword_0_0()); }
			'if'
			{ after(grammarAccess.getS_IfAccess().getKeyIfKeyword_0_0()); }
		)
		{ after(grammarAccess.getS_IfAccess().getKeyIfKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_IfAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getS_IfAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__BlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_IfAccess().getBlockBlockParserRuleCall_2_0()); }
		ruleBlock
		{ after(grammarAccess.getS_IfAccess().getBlockBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_If__ElseAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_IfAccess().getElseAlternatives_3_1_0()); }
		(rule__S_If__ElseAlternatives_3_1_0)
		{ after(grammarAccess.getS_IfAccess().getElseAlternatives_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Try__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_TryAccess().getKeyTryKeyword_0_0()); }
		(
			{ before(grammarAccess.getS_TryAccess().getKeyTryKeyword_0_0()); }
			'try'
			{ after(grammarAccess.getS_TryAccess().getKeyTryKeyword_0_0()); }
		)
		{ after(grammarAccess.getS_TryAccess().getKeyTryKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Try__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_TryAccess().getBlockBlockParserRuleCall_1_0()); }
		ruleBlock
		{ after(grammarAccess.getS_TryAccess().getBlockBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Try__CatchAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_TryAccess().getCatchBlockParserRuleCall_2_1_0()); }
		ruleBlock
		{ after(grammarAccess.getS_TryAccess().getCatchBlockParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Switch__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SwitchAccess().getKeySwitchKeyword_0_0()); }
		(
			{ before(grammarAccess.getS_SwitchAccess().getKeySwitchKeyword_0_0()); }
			'switch'
			{ after(grammarAccess.getS_SwitchAccess().getKeySwitchKeyword_0_0()); }
		)
		{ after(grammarAccess.getS_SwitchAccess().getKeySwitchKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Switch__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SwitchAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getS_SwitchAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Switch__BlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SwitchAccess().getBlockB_SwitchParserRuleCall_2_0()); }
		ruleB_Switch
		{ after(grammarAccess.getS_SwitchAccess().getBlockB_SwitchParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Match__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_MatchAccess().getKeyAlternatives_0_0()); }
		(rule__S_Match__KeyAlternatives_0_0)
		{ after(grammarAccess.getS_MatchAccess().getKeyAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Match__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_MatchAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getS_MatchAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Match__BlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_MatchAccess().getBlockBlockParserRuleCall_2_0()); }
		ruleBlock
		{ after(grammarAccess.getS_MatchAccess().getBlockBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Default__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DefaultAccess().getKeyK_DefaultParserRuleCall_0_0()); }
		ruleK_Default
		{ after(grammarAccess.getS_DefaultAccess().getKeyK_DefaultParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Default__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DefaultAccess().getBlockBlockParserRuleCall_1_0()); }
		ruleBlock
		{ after(grammarAccess.getS_DefaultAccess().getBlockBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Return__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ReturnAccess().getKeyReturnKeyword_0_0()); }
		(
			{ before(grammarAccess.getS_ReturnAccess().getKeyReturnKeyword_0_0()); }
			'return'
			{ after(grammarAccess.getS_ReturnAccess().getKeyReturnKeyword_0_0()); }
		)
		{ after(grammarAccess.getS_ReturnAccess().getKeyReturnKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Return__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ReturnAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getS_ReturnAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Break__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_BreakAccess().getKeyBreakKeyword_0_0()); }
		(
			{ before(grammarAccess.getS_BreakAccess().getKeyBreakKeyword_0_0()); }
			'break'
			{ after(grammarAccess.getS_BreakAccess().getKeyBreakKeyword_0_0()); }
		)
		{ after(grammarAccess.getS_BreakAccess().getKeyBreakKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ReflexAccess().getKeyK_ReflexParserRuleCall_0_0()); }
		ruleK_Reflex
		{ after(grammarAccess.getS_ReflexAccess().getKeyK_ReflexParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ReflexAccess().getNameValid_IDParserRuleCall_1_0()); }
		ruleValid_ID
		{ after(grammarAccess.getS_ReflexAccess().getNameValid_IDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__ExprAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ReflexAccess().getExprExpressionParserRuleCall_2_2_0()); }
		ruleExpression
		{ after(grammarAccess.getS_ReflexAccess().getExprExpressionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Reflex__BlockAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ReflexAccess().getBlockBlockParserRuleCall_3_0()); }
		ruleBlock
		{ after(grammarAccess.getS_ReflexAccess().getBlockBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__TkeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DefinitionAccess().getTkeyTypeRefParserRuleCall_0_0()); }
		ruleTypeRef
		{ after(grammarAccess.getS_DefinitionAccess().getTkeyTypeRefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DefinitionAccess().getNameAlternatives_1_0()); }
		(rule__S_Definition__NameAlternatives_1_0)
		{ after(grammarAccess.getS_DefinitionAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__ArgsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DefinitionAccess().getArgsActionArgumentsParserRuleCall_2_1_0()); }
		ruleActionArguments
		{ after(grammarAccess.getS_DefinitionAccess().getArgsActionArgumentsParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__FacetsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DefinitionAccess().getFacetsFacetParserRuleCall_3_0()); }
		ruleFacet
		{ after(grammarAccess.getS_DefinitionAccess().getFacetsFacetParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Definition__BlockAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DefinitionAccess().getBlockBlockParserRuleCall_4_0_0()); }
		ruleBlock
		{ after(grammarAccess.getS_DefinitionAccess().getBlockBlockParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ActionAccess().getKeyActionKeyword_1_0()); }
		(
			{ before(grammarAccess.getS_ActionAccess().getKeyActionKeyword_1_0()); }
			'action'
			{ after(grammarAccess.getS_ActionAccess().getKeyActionKeyword_1_0()); }
		)
		{ after(grammarAccess.getS_ActionAccess().getKeyActionKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ActionAccess().getNameValid_IDParserRuleCall_2_0()); }
		ruleValid_ID
		{ after(grammarAccess.getS_ActionAccess().getNameValid_IDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ActionAccess().getArgsActionArgumentsParserRuleCall_3_1_0()); }
		ruleActionArguments
		{ after(grammarAccess.getS_ActionAccess().getArgsActionArgumentsParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__FacetsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ActionAccess().getFacetsFacetParserRuleCall_4_0()); }
		ruleFacet
		{ after(grammarAccess.getS_ActionAccess().getFacetsFacetParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Action__BlockAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ActionAccess().getBlockBlockParserRuleCall_5_0_0()); }
		ruleBlock
		{ after(grammarAccess.getS_ActionAccess().getBlockBlockParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_VarAccess().getKeyK_VarParserRuleCall_1_0()); }
		ruleK_Var
		{ after(grammarAccess.getS_VarAccess().getKeyK_VarParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_VarAccess().getNameValid_IDParserRuleCall_2_0()); }
		ruleValid_ID
		{ after(grammarAccess.getS_VarAccess().getNameValid_IDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Var__FacetsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_VarAccess().getFacetsFacetParserRuleCall_3_0()); }
		ruleFacet
		{ after(grammarAccess.getS_VarAccess().getFacetsFacetParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__ExprAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DirectAssignmentAccess().getExprExpressionParserRuleCall_0_0_0()); }
		ruleExpression
		{ after(grammarAccess.getS_DirectAssignmentAccess().getExprExpressionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__KeyAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DirectAssignmentAccess().getKeyK_AssignmentParserRuleCall_0_1_0()); }
		ruleK_Assignment
		{ after(grammarAccess.getS_DirectAssignmentAccess().getKeyK_AssignmentParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__ValueAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DirectAssignmentAccess().getValueExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getS_DirectAssignmentAccess().getValueExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_DirectAssignment__FacetsAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DirectAssignmentAccess().getFacetsFacetParserRuleCall_0_3_0()); }
		ruleFacet
		{ after(grammarAccess.getS_DirectAssignmentAccess().getFacetsFacetParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SetAccess().getKeySetKeyword_0_0()); }
		(
			{ before(grammarAccess.getS_SetAccess().getKeySetKeyword_0_0()); }
			'set'
			{ after(grammarAccess.getS_SetAccess().getKeySetKeyword_0_0()); }
		)
		{ after(grammarAccess.getS_SetAccess().getKeySetKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SetAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getS_SetAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Set__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SetAccess().getValueExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getS_SetAccess().getValueExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equation__ExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_EquationAccess().getExprAlternatives_0_0()); }
		(rule__S_Equation__ExprAlternatives_0_0)
		{ after(grammarAccess.getS_EquationAccess().getExprAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equation__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_EquationAccess().getKeyEqualsSignKeyword_1_0()); }
		(
			{ before(grammarAccess.getS_EquationAccess().getKeyEqualsSignKeyword_1_0()); }
			'='
			{ after(grammarAccess.getS_EquationAccess().getKeyEqualsSignKeyword_1_0()); }
		)
		{ after(grammarAccess.getS_EquationAccess().getKeyEqualsSignKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equation__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_EquationAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getS_EquationAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_EquationsAccess().getKeyK_EquationsParserRuleCall_0_0()); }
		ruleK_Equations
		{ after(grammarAccess.getS_EquationsAccess().getKeyK_EquationsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_EquationsAccess().getNameValid_IDParserRuleCall_1_0()); }
		ruleValid_ID
		{ after(grammarAccess.getS_EquationsAccess().getNameValid_IDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__FacetsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_EquationsAccess().getFacetsFacetParserRuleCall_2_0()); }
		ruleFacet
		{ after(grammarAccess.getS_EquationsAccess().getFacetsFacetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Equations__EquationsAssignment_3_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_EquationsAccess().getEquationsS_EquationParserRuleCall_3_0_1_0_0()); }
		ruleS_Equation
		{ after(grammarAccess.getS_EquationsAccess().getEquationsS_EquationParserRuleCall_3_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SolveAccess().getKeyK_SolveParserRuleCall_0_0()); }
		ruleK_Solve
		{ after(grammarAccess.getS_SolveAccess().getKeyK_SolveParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SolveAccess().getExprEquationRefParserRuleCall_1_0()); }
		ruleEquationRef
		{ after(grammarAccess.getS_SolveAccess().getExprEquationRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__FacetsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SolveAccess().getFacetsFacetParserRuleCall_2_0()); }
		ruleFacet
		{ after(grammarAccess.getS_SolveAccess().getFacetsFacetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Solve__BlockAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SolveAccess().getBlockBlockParserRuleCall_3_0_0()); }
		ruleBlock
		{ after(grammarAccess.getS_SolveAccess().getBlockBlockParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DisplayAccess().getKeyDisplayKeyword_0_0()); }
		(
			{ before(grammarAccess.getS_DisplayAccess().getKeyDisplayKeyword_0_0()); }
			'display'
			{ after(grammarAccess.getS_DisplayAccess().getKeyDisplayKeyword_0_0()); }
		)
		{ after(grammarAccess.getS_DisplayAccess().getKeyDisplayKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DisplayAccess().getNameAlternatives_1_0()); }
		(rule__S_Display__NameAlternatives_1_0)
		{ after(grammarAccess.getS_DisplayAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__FacetsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DisplayAccess().getFacetsFacetParserRuleCall_2_0()); }
		ruleFacet
		{ after(grammarAccess.getS_DisplayAccess().getFacetsFacetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_Display__BlockAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_DisplayAccess().getBlockB_DisplayParserRuleCall_3_0()); }
		ruleB_Display
		{ after(grammarAccess.getS_DisplayAccess().getBlockB_DisplayParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SpeciesLayerAccess().getKeyK_SpeciesParserRuleCall_0_0()); }
		ruleK_Species
		{ after(grammarAccess.getS_SpeciesLayerAccess().getKeyK_SpeciesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SpeciesLayerAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getS_SpeciesLayerAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__FacetsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SpeciesLayerAccess().getFacetsFacetParserRuleCall_2_0()); }
		ruleFacet
		{ after(grammarAccess.getS_SpeciesLayerAccess().getFacetsFacetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_SpeciesLayer__BlockAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_SpeciesLayerAccess().getBlockB_DisplayParserRuleCall_3_0_0()); }
		ruleB_Display
		{ after(grammarAccess.getS_SpeciesLayerAccess().getBlockB_DisplayParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_ImageLayer__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ImageLayerAccess().getKeyK_ImageLayerParserRuleCall_0_0()); }
		ruleK_ImageLayer
		{ after(grammarAccess.getS_ImageLayerAccess().getKeyK_ImageLayerParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_ImageLayer__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ImageLayerAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getS_ImageLayerAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__S_ImageLayer__FacetsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getS_ImageLayerAccess().getFacetsFacetParserRuleCall_2_0()); }
		ruleFacet
		{ after(grammarAccess.getS_ImageLayerAccess().getFacetsFacetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__ArgsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_0_0()); }
		ruleArgumentDefinition
		{ after(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionArguments__ArgsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_1_1_0()); }
		ruleArgumentDefinition
		{ after(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentDefinitionAccess().getTypeTypeRefParserRuleCall_0_0()); }
		ruleTypeRef
		{ after(grammarAccess.getArgumentDefinitionAccess().getTypeTypeRefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentDefinitionAccess().getNameValid_IDParserRuleCall_1_0()); }
		ruleValid_ID
		{ after(grammarAccess.getArgumentDefinitionAccess().getNameValid_IDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDefinition__DefaultAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentDefinitionAccess().getDefaultExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArgumentDefinitionAccess().getDefaultExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Regular__KeyAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_RegularAccess().getKeyFK_RegularParserRuleCall_0_0_0()); }
		ruleFK_Regular
		{ after(grammarAccess.getF_RegularAccess().getKeyFK_RegularParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Regular__KeyAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_RegularAccess().getKeyLessThanSignHyphenMinusKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getF_RegularAccess().getKeyLessThanSignHyphenMinusKeyword_0_1_0()); }
			'<-'
			{ after(grammarAccess.getF_RegularAccess().getKeyLessThanSignHyphenMinusKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getF_RegularAccess().getKeyLessThanSignHyphenMinusKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Regular__KeyAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_RegularAccess().getKeyFK_SpecialParserRuleCall_0_2_0()); }
		ruleFK_Special
		{ after(grammarAccess.getF_RegularAccess().getKeyFK_SpecialParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Regular__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_RegularAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getF_RegularAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Definition__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_DefinitionAccess().getKeyFK_DefinitionParserRuleCall_0_0()); }
		ruleFK_Definition
		{ after(grammarAccess.getF_DefinitionAccess().getKeyFK_DefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Definition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_DefinitionAccess().getNameAlternatives_1_0()); }
		(rule__F_Definition__NameAlternatives_1_0)
		{ after(grammarAccess.getF_DefinitionAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_FunctionAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getF_FunctionAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_0()); }
			'->'
			{ after(grammarAccess.getF_FunctionAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getF_FunctionAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__ExprAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_FunctionAccess().getExprExpressionParserRuleCall_1_0_0_0()); }
		ruleExpression
		{ after(grammarAccess.getF_FunctionAccess().getExprExpressionParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Function__ExprAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_FunctionAccess().getExprExpressionParserRuleCall_1_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getF_FunctionAccess().getExprExpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Type__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_TypeAccess().getKeyFK_TypeParserRuleCall_0_0()); }
		ruleFK_Type
		{ after(grammarAccess.getF_TypeAccess().getKeyFK_TypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Type__ExprAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_TypeAccess().getExprTypeRefParserRuleCall_1_0_0_0()); }
		ruleTypeRef
		{ after(grammarAccess.getF_TypeAccess().getExprTypeRefParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Type__ExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_TypeAccess().getExprExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getF_TypeAccess().getExprExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Action__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_ActionAccess().getKeyFK_ActionParserRuleCall_0_0()); }
		ruleFK_Action
		{ after(grammarAccess.getF_ActionAccess().getKeyFK_ActionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Action__ExprAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_ActionAccess().getExprActionRefParserRuleCall_1_0_0()); }
		ruleActionRef
		{ after(grammarAccess.getF_ActionAccess().getExprActionRefParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Action__BlockAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_ActionAccess().getBlockBlockParserRuleCall_1_1_0()); }
		ruleBlock
		{ after(grammarAccess.getF_ActionAccess().getBlockBlockParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Var__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_VarAccess().getKeyFK_VarParserRuleCall_0_0()); }
		ruleFK_Var
		{ after(grammarAccess.getF_VarAccess().getKeyFK_VarParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__F_Var__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getF_VarAccess().getExprVariableRefParserRuleCall_1_0()); }
		ruleVariableRef
		{ after(grammarAccess.getF_VarAccess().getExprVariableRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__OpAssignment_0_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentPairAccess().getOpValid_IDParserRuleCall_0_0_0_0_0()); }
		ruleValid_ID
		{ after(grammarAccess.getArgumentPairAccess().getOpValid_IDParserRuleCall_0_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__OpAssignment_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentPairAccess().getOpAlternatives_0_0_1_0_0()); }
		(rule__ArgumentPair__OpAlternatives_0_0_1_0_0)
		{ after(grammarAccess.getArgumentPairAccess().getOpAlternatives_0_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentPair__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentPairAccess().getRightPairParserRuleCall_1_0()); }
		rulePair
		{ after(grammarAccess.getArgumentPairAccess().getRightPairParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPairAccess().getOpColonColonKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getPairAccess().getOpColonColonKeyword_1_1_0()); }
			'::'
			{ after(grammarAccess.getPairAccess().getOpColonColonKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getPairAccess().getOpColonColonKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPairAccess().getRightIfParserRuleCall_1_2_0()); }
		ruleIf
		{ after(grammarAccess.getPairAccess().getRightIfParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getOpQuestionMarkKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getIfAccess().getOpQuestionMarkKeyword_1_1_0()); }
			'?'
			{ after(grammarAccess.getIfAccess().getOpQuestionMarkKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getIfAccess().getOpQuestionMarkKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getRightOrParserRuleCall_1_2_0()); }
		ruleOr
		{ after(grammarAccess.getIfAccess().getRightOrParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__IfFalseAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getIfFalseOrParserRuleCall_1_3_1_0()); }
		ruleOr
		{ after(grammarAccess.getIfAccess().getIfFalseOrParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getOpOrKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getOrAccess().getOpOrKeyword_1_1_0()); }
			'or'
			{ after(grammarAccess.getOrAccess().getOpOrKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getOrAccess().getOpOrKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getOpAndKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getAndAccess().getOpAndKeyword_1_1_0()); }
			'and'
			{ after(grammarAccess.getAndAccess().getOpAndKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getAndAccess().getOpAndKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightCastParserRuleCall_1_2_0()); }
		ruleCast
		{ after(grammarAccess.getAndAccess().getRightCastParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastAccess().getOpAsKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getCastAccess().getOpAsKeyword_1_0_1_0()); }
			'as'
			{ after(grammarAccess.getCastAccess().getOpAsKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getCastAccess().getOpAsKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__RightAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastAccess().getRightTypeRefParserRuleCall_1_1_0_0()); }
		ruleTypeRef
		{ after(grammarAccess.getCastAccess().getRightTypeRefParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__RightAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastAccess().getRightTypeRefParserRuleCall_1_1_1_1_0()); }
		ruleTypeRef
		{ after(grammarAccess.getCastAccess().getRightTypeRefParserRuleCall_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_0_1_0()); }
		(rule__Comparison__OpAlternatives_1_0_1_0)
		{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightAdditionParserRuleCall_1_1_0()); }
		ruleAddition
		{ after(grammarAccess.getComparisonAccess().getRightAdditionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getOpAlternatives_1_0_1_0()); }
		(rule__Addition__OpAlternatives_1_0_1_0)
		{ after(grammarAccess.getAdditionAccess().getOpAlternatives_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
		ruleMultiplication
		{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0()); }
		(rule__Multiplication__OpAlternatives_1_0_1_0)
		{ after(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getRightExponentiationParserRuleCall_1_1_0()); }
		ruleExponentiation
		{ after(grammarAccess.getMultiplicationAccess().getRightExponentiationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponentiation__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentiationAccess().getOpCircumflexAccentKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getExponentiationAccess().getOpCircumflexAccentKeyword_1_0_1_0()); }
			'^'
			{ after(grammarAccess.getExponentiationAccess().getOpCircumflexAccentKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getExponentiationAccess().getOpCircumflexAccentKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponentiation__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentiationAccess().getRightBinaryParserRuleCall_1_1_0()); }
		ruleBinary
		{ after(grammarAccess.getExponentiationAccess().getRightBinaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryAccess().getOpValid_IDParserRuleCall_1_0_1_0()); }
		ruleValid_ID
		{ after(grammarAccess.getBinaryAccess().getOpValid_IDParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryAccess().getRightUnitParserRuleCall_1_1_0()); }
		ruleUnit
		{ after(grammarAccess.getBinaryAccess().getRightUnitParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getOpAlternatives_1_0_1_0()); }
		(rule__Unit__OpAlternatives_1_0_1_0)
		{ after(grammarAccess.getUnitAccess().getOpAlternatives_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getRightUnitRefParserRuleCall_1_1_0()); }
		ruleUnitRef
		{ after(grammarAccess.getUnitAccess().getRightUnitRefParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__OpAssignment_1_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryAccess().getOpAlternatives_1_1_0_0_0()); }
		(rule__Unary__OpAlternatives_1_1_0_0_0)
		{ after(grammarAccess.getUnaryAccess().getOpAlternatives_1_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__RightAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryAccess().getRightUnitRefParserRuleCall_1_1_0_1_0()); }
		ruleUnitRef
		{ after(grammarAccess.getUnaryAccess().getRightUnitRefParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__OpAssignment_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryAccess().getOpAlternatives_1_1_1_0_0()); }
		(rule__Unary__OpAlternatives_1_1_1_0_0)
		{ after(grammarAccess.getUnaryAccess().getOpAlternatives_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__RightAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryAccess().getRightUnaryParserRuleCall_1_1_1_1_0()); }
		ruleUnary
		{ after(grammarAccess.getUnaryAccess().getRightUnaryParserRuleCall_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__OpAssignment_1_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessAccess().getOpLeftSquareBracketKeyword_1_1_0_0_0()); }
		(
			{ before(grammarAccess.getAccessAccess().getOpLeftSquareBracketKeyword_1_1_0_0_0()); }
			'['
			{ after(grammarAccess.getAccessAccess().getOpLeftSquareBracketKeyword_1_1_0_0_0()); }
		)
		{ after(grammarAccess.getAccessAccess().getOpLeftSquareBracketKeyword_1_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__RightAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessAccess().getRightExpressionListParserRuleCall_1_1_0_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getAccessAccess().getRightExpressionListParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__OpAssignment_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessAccess().getOpFullStopKeyword_1_1_1_0_0()); }
		(
			{ before(grammarAccess.getAccessAccess().getOpFullStopKeyword_1_1_1_0_0()); }
			'.'
			{ after(grammarAccess.getAccessAccess().getOpFullStopKeyword_1_1_1_0_0()); }
		)
		{ after(grammarAccess.getAccessAccess().getOpFullStopKeyword_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__RightAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessAccess().getRightAlternatives_1_1_1_1_0()); }
		(rule__Access__RightAlternatives_1_1_1_1_0)
		{ after(grammarAccess.getAccessAccess().getRightAlternatives_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExprsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExprsExpressionListParserRuleCall_3_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getPrimaryAccess().getExprsExpressionListParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__LeftAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getLeftExpressionParserRuleCall_4_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryAccess().getLeftExpressionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__OpAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getOpCommaKeyword_4_3_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getOpCommaKeyword_4_3_0()); }
			','
			{ after(grammarAccess.getPrimaryAccess().getOpCommaKeyword_4_3_0()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getOpCommaKeyword_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__RightAssignment_4_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getRightExpressionParserRuleCall_4_4_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryAccess().getRightExpressionParserRuleCall_4_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ZAssignment_4_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getZExpressionParserRuleCall_4_5_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryAccess().getZExpressionParserRuleCall_4_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getLeftActionRefParserRuleCall_1_0()); }
		ruleActionRef
		{ after(grammarAccess.getFunctionAccess().getLeftActionRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getTypeTypeInfoParserRuleCall_2_0()); }
		ruleTypeInfo
		{ after(grammarAccess.getFunctionAccess().getTypeTypeInfoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getRightExpressionListParserRuleCall_4_0()); }
		ruleExpressionList
		{ after(grammarAccess.getFunctionAccess().getRightExpressionListParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExprsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_0_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExprsAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExprsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExprsParameterParserRuleCall_1_0_0()); }
		ruleParameter
		{ after(grammarAccess.getExpressionListAccess().getExprsParameterParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExprsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExprsParameterParserRuleCall_1_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getExpressionListAccess().getExprsParameterParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__BuiltInFacetKeyAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getBuiltInFacetKeyAlternatives_1_0_0()); }
		(rule__Parameter__BuiltInFacetKeyAlternatives_1_0_0)
		{ after(grammarAccess.getParameterAccess().getBuiltInFacetKeyAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__LeftAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getLeftVariableRefParserRuleCall_1_1_0_0()); }
		ruleVariableRef
		{ after(grammarAccess.getParameterAccess().getLeftVariableRefParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getRightExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getParameterAccess().getRightExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRef__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitRefAccess().getRefBuiltInUnitDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getUnitRefAccess().getRefBuiltInUnitDefinitionValid_IDParserRuleCall_1_0_1()); }
			ruleValid_ID
			{ after(grammarAccess.getUnitRefAccess().getRefBuiltInUnitDefinitionValid_IDParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getUnitRefAccess().getRefBuiltInUnitDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableRefAccess().getRefVarDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariableRefAccess().getRefVarDefinitionValid_IDParserRuleCall_1_0_1()); }
			ruleValid_ID
			{ after(grammarAccess.getVariableRefAccess().getRefVarDefinitionValid_IDParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariableRefAccess().getRefVarDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__RefAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeRefAccess().getRefTypeDefinitionCrossReference_0_1_0_0()); }
		(
			{ before(grammarAccess.getTypeRefAccess().getRefTypeDefinitionIDTerminalRuleCall_0_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeRefAccess().getRefTypeDefinitionIDTerminalRuleCall_0_1_0_0_1()); }
		)
		{ after(grammarAccess.getTypeRefAccess().getRefTypeDefinitionCrossReference_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__ParameterAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeRefAccess().getParameterTypeInfoParserRuleCall_0_1_1_0()); }
		ruleTypeInfo
		{ after(grammarAccess.getTypeRefAccess().getParameterTypeInfoParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__ParameterAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeRefAccess().getParameterTypeInfoParserRuleCall_1_1_1_0()); }
		ruleTypeInfo
		{ after(grammarAccess.getTypeRefAccess().getParameterTypeInfoParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__FirstAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeInfoAccess().getFirstTypeRefParserRuleCall_1_0()); }
		ruleTypeRef
		{ after(grammarAccess.getTypeInfoAccess().getFirstTypeRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInfo__SecondAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeInfoAccess().getSecondTypeRefParserRuleCall_2_1_0()); }
		ruleTypeRef
		{ after(grammarAccess.getTypeInfoAccess().getSecondTypeRefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRef__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionRefAccess().getRefActionDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getActionRefAccess().getRefActionDefinitionValid_IDParserRuleCall_1_0_1()); }
			ruleValid_ID
			{ after(grammarAccess.getActionRefAccess().getRefActionDefinitionValid_IDParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getActionRefAccess().getRefActionDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationRef__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationRefAccess().getRefEquationDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getEquationRefAccess().getRefEquationDefinitionValid_IDParserRuleCall_1_0_1()); }
			ruleValid_ID
			{ after(grammarAccess.getEquationRefAccess().getRefEquationDefinitionValid_IDParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getEquationRefAccess().getRefEquationDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInUnitDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltInUnitDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBuiltInUnitDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInTypeDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltInTypeDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBuiltInTypeDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInActionDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltInActionDefinitionAccess().getNameValid_IDParserRuleCall_1_0()); }
		ruleValid_ID
		{ after(grammarAccess.getBuiltInActionDefinitionAccess().getNameValid_IDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInSkillDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltInSkillDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBuiltInSkillDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInVarDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltInVarDefinitionAccess().getNameValid_IDParserRuleCall_1_0()); }
		ruleValid_ID
		{ after(grammarAccess.getBuiltInVarDefinitionAccess().getNameValid_IDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInEquationDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltInEquationDefinitionAccess().getNameValid_IDParserRuleCall_1_0()); }
		ruleValid_ID
		{ after(grammarAccess.getBuiltInEquationDefinitionAccess().getNameValid_IDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getOpINTEGERTerminalRuleCall_1_1_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getTerminalExpressionAccess().getOpINTEGERTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__OpAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getOpDOUBLETerminalRuleCall_2_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getTerminalExpressionAccess().getOpDOUBLETerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__OpAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getOpBOOLEANTerminalRuleCall_3_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getTerminalExpressionAccess().getOpBOOLEANTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__OpAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getOpKEYWORDTerminalRuleCall_4_1_0()); }
		RULE_KEYWORD
		{ after(grammarAccess.getTerminalExpressionAccess().getOpKEYWORDTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__OpAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getOpSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getOpSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_KEYWORD : ('each'|'self'|'myself'|'nil'|'super');

RULE_INTEGER : ('0'|'1'..'9' ('0'..'9')*);

RULE_BOOLEAN : ('true'|'false');

RULE_ID : ('2d'|'3d'|'2D'|'3D'|('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'$'|'0'..'9')*);

RULE_DOUBLE : ('1'..'9' ('0'..'9')* ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?|'0' ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-')? ('0'..'9')+)?);

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
